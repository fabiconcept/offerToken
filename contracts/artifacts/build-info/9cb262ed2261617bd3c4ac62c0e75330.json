{
	"id": "9cb262ed2261617bd3c4ac62c0e75330",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SIPilotToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"@openzeppelin/contracts//access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/GSN/Context.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"./math/SafeMathInt.sol\";\nimport \"./math/SafeMathUint.sol\";\nimport \"./uniswap/IUniswapV2Router02.sol\";\n\n\n/// @title Offr Token implementation - Distributing Security Token for one-time fundraising \n/// @author Fabiconcept (Fabian Ajokubi T.)\n/// @notice You can use this security token implementation to raise one-time funds and distribute USDC to token holders on a regular basis\n/// @dev Value is stored as USDC. The implementation has not been audited.\n\ncontract OffrToken is Context, AccessControl, IERC20 {\n    using SafeMath for uint256;\n    using SafeMathUint for uint256;\n    using SafeMathInt for int256;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    address internal constant UNISWAP_ROUTER_ADDRESS = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\n    IUniswapV2Router02 public _uniswapRouter;\n    address public _usdcToken = 0xaD6D458402F60fD3Bd25163575031ACDce07538D;\n    IERC20 public _usdcInstance;\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    uint256 public _rate;\n    uint256 public _cap;\n    address public _beneficiary;\n    bool fundingReleased = false;\n\n    uint256 constant private magnitude = 2**128;\n    uint256 private claimableAmountPerToken;\n    mapping(address => int256) private claimableAmountCorrections;\n    mapping(address => uint256) private withdrawnAmounts;\n\n    /// @notice Token purchase event\n    /// @param transmitter address of the initiator\n    /// @param buyer address of the buyer\n    /// @param amountUSDC amount of USDC for the token purchase\n    /// @param amountToken amount of purchased tokens\n    event TokensPurchased(address indexed transmitter, address indexed buyer, uint256 amountUSDC, uint256 amountToken);\n\n    /// @notice Release of raised funds event\n    /// @param beneficiary adress of the beneficiary\n    /// @param amountUSDC amount of the released USDC\n    event FundsReleased(address indexed beneficiary, uint256 amountUSDC);\n\n    /// @notice received payment from beneficiary event\n    /// @param project_owner address of the beneficiary\n    /// @param amountUSDC amount of the received USDC \n    event PaymentReceived(address indexed project_owner, uint256 amountUSDC);\n\n    /// @notice payment to the investor event\n    /// @param tokenholder address of the investor / tokenholder\n    /// @param amountUSDC amount of the paid out USDC\n    event AmountPaidOut(address indexed tokenholder, uint256 amountUSDC);\n\n    /// @notice Initialization of the Security Token\n    /// @param name_ Name\n    /// @param symbol_ Symbol\n    /// @param decimals_ Decimals\n    /// @param cap_ Fund raising cap\n    /// @param rate_ Conversion Rate USDC <-> Security Token\n    /// @param beneficiary_ Address of the beneficiary\n    constructor (string memory name_, string memory symbol_, uint8 decimals_, uint256 cap_, uint256 rate_, address beneficiary_) {\n        _setupRole(MINTER_ROLE, _msgSender());\n        _uniswapRouter = IUniswapV2Router02(UNISWAP_ROUTER_ADDRESS);\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n        _usdcInstance = IERC20(_usdcToken);\n        require(rate_ > 0, \"rate is 0\");\n        require(cap_ > 0, \"cap is 0\");\n        require(beneficiary_ != address(0), \"address is null\");\n        _cap = cap_;\n        _rate = rate_;\n        _beneficiary = beneficiary_;\n    }\n \n    /// @notice Returns the name\n    /// @return The Name\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /// @notice Returns the symbol\n    /// @return The symbol\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /// @notice Returns the decimals\n    /// @return The decimals\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /// @notice Returns funding cap\n    /// @return The cap\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    /// @notice Returns the rate\n    /// @return The rate\n    function rate() public view returns (uint256) {\n        return _rate;\n    }\n\n    /// @notice Returns if the fundrasing is still open\n    /// @return boolean fundraising open\n    function tokensale_open() public view returns (bool) {\n        return _cap > totalSupply();\n    }\n\n    /// @notice Returns the total token supply\n    /// @return amount of supplied token\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @notice Returns the balance of a specific address\n    /// @param account address of the account \n    /// @return amount of tokens hold by an address\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /// @notice Transfers `amount` of tokens to a `recipient`\n    /// @param recipient adddress of the recipient\n    /// @param amount amount of the tokens to transfer\n    /// @return boolean transfer was sucessfull\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /// @notice Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom. This is zero by default.\n    /// @param owner address of the account which owns the tokens\n    /// @param spender address of the account that is allowed to spend the tokens\n    /// @return amount of spendable tokens\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /// @notice Sets `amount` as the allowance of spender over the callers tokens\n    /// @param spender address of the spender account\n    /// @param amount amount to allow for spender to send\n    /// @return boolean indicating whether the operation succeeded\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n    \n    /// @notice Moves amount tokens from sender to recipient using the allowance mechanism. amount is then deducted from the callerâ€™s allowance.\n    /// @param sender address of the account which owns the tokens\n    /// @param recipient address of the account which owns the tokens\n    /// @param amount amount of tokens to send\n    /// @return boolean indicating whether the operation succeeded\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\"));\n        return true;\n    }\n\n\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"transfer from the zero address\");\n        require(recipient != address(0), \"transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n        //curate the claimable amount of sender and recipient\n        int256 correction = claimableAmountPerToken.mul(amount).toInt256Safe();\n        claimableAmountCorrections[sender] = claimableAmountCorrections[sender].add(correction);\n        claimableAmountCorrections[recipient] = claimableAmountCorrections[recipient].sub(correction);\n    }\n\n    \n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /// @notice Sets amount as the allowance of spender over the caller's token\n    /// @param owner amount of USDC that will be invested\n    /// @dev if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"approve from the zero address\");\n        require(spender != address(0), \"approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /// @notice Function for investors to buy tokens with ETH or USDC\n    /// @param usdcAmount_ amount of USDC that will be invested\n    /// @dev if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount\n    function buyTokens(uint256 usdcAmount_) public payable {\n        if (msg.value > 0) {\n            convertEthToUsdc(usdcAmount_); \n        } else {\n            require(_usdcInstance.transferFrom(msg.sender, address(this), usdcAmount_));\n        }\n        uint256 tokens = usdcAmount_.mul(_rate);\n        _mint(msg.sender, tokens);\n        emit TokensPurchased(_msgSender(), msg.sender, usdcAmount_, tokens);\n    }\n\n\n    /// @notice Functions that converts ETH to USDC\n    /// @param usdcAmount amount of USDC that will be purchased\n    function convertEthToUsdc(uint usdcAmount) public payable {\n        uint deadline = block.timestamp + 15;\n        address[] memory path = new address[](2);\n        path[0] = _uniswapRouter.WETH();\n        path[1] = _usdcToken;\n\n        (uint[] memory amts) = _uniswapRouter.swapETHForExactTokens{ value: msg.value }(usdcAmount, path, address(this), deadline);    \n        require(amts[0] > 0, \"Exchange failed.\");\n        // refund leftover ETH to user\n        (bool success,) = msg.sender.call{ value: address(this).balance }(\"\");\n        require(success, \"refund failed\");\n    }\n  \n\n    /// @notice Functions that receives left-over ETH from uniswap exchanges\n  receive() payable external {} \n\n    /// @notice Minting function for registered distributors\n    /// @param buyer address of the token buyer\n    /// @param amount amount of tokens to be minted\n    function sendTokens(address buyer, uint256 amount) public {\n        require(buyer != address(0), \"buyer is a zero address\");\n        require(amount != 0, \"weiAmount is 0\");\n        \n        uint256 tokens = amount.mul(_rate);\n\n        mint(buyer, tokens);\n        emit TokensPurchased(_msgSender(), buyer, amount, tokens);\n    }\n\n    /// @notice Function that checks if the minting is performed from a minter account\n    /// @param to receiving account of the minting\n    /// @param amount amount of tokens to be minted\n    function mint(address to, uint256 amount) internal {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n\n    /// @notice Function that checks conditions (will the cap be exceeded after minting new tokens?) before token transfer\n    /// @param from account that initiated a sending transaction\n    /// @param amount amount of tokens to be transferred\n    function _beforeTokenTransfer(address from, uint256 amount) internal virtual {\n        if (from == address(0)) { // When minting tokens, check the sale cap\n            require(totalSupply().add(amount) <= _cap, \"cap exceeded\");\n        }\n    }\n\n    /// @notice Function to release the funding to the beneficiary\n    function releaseFunds() public {\n        require(tokensale_open() == false, \"funds not raised\");\n        require(fundingReleased == false, \"funding already released\");\n        require(_usdcInstance.transfer(_beneficiary, _cap.mul(_rate)), \"sending USDC failed\");\n        emit FundsReleased(_beneficiary, _cap);\n        fundingReleased = true;\n    }\n\n    /// @notice Function that receives payments from beneficiary and distribute them to the tokenholders\n    /// @param usdcAmount amount that the beneficiary will pay \n    function receivePayment(uint256 usdcAmount) public {\n        require(totalSupply() > 0, \"total supply\");\n        require(_usdcInstance.transferFrom(msg.sender, address(this), usdcAmount), \"USDC Transfer not possible\");\n        claimableAmountPerToken = claimableAmountPerToken.add((usdcAmount).mul(magnitude) / totalSupply());\n        emit PaymentReceived(msg.sender, usdcAmount);\n    }\n    \n\n    /// @notice Function to claim the claimable funds\n    function withdrawAmount() public {\n        uint256 _claimableAmount = claimableAmountOf(msg.sender);\n        if (_claimableAmount > 0) {\n            withdrawnAmounts[msg.sender] = withdrawnAmounts[msg.sender].add(_claimableAmount);\n            require(_usdcInstance.transfer(msg.sender, _claimableAmount), \"transfer not successful\");\n            emit AmountPaidOut(msg.sender, _claimableAmount);\n        }\n    }\n\n    /// @notice Returns the total amount of funds that are claimable for a specified account\n    /// @param _owner address of the account\n    /// @return total amount of funds that are claimable\n    function claimableAmountOf(address _owner) public view returns(uint256) {\n        return accumulativeAmountOf(_owner).sub(withdrawnAmounts[_owner]);\n    }\n\n    /// @notice Returns the total amount of funds that have been withdrawn for a specified account\n    /// @param _owner address of the account\n    /// @return total amount of funds that have been withdrawn\n    function withdrawnAmountOf(address _owner) public view returns(uint256) {\n        return withdrawnAmounts[_owner];\n    }\n\n    /// @notice Returns the total amount of funds that were claimable for a specified account\n    /// @param _owner address of the account\n    /// @return total amount of funds that were claimable\n    function accumulativeAmountOf(address _owner) public view returns(uint256) {\n        return claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()\n        .add(claimableAmountCorrections[_owner]).toUint256Safe() / magnitude;\n    }\n\n}\n"
			},
			"contracts/uniswap/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"contracts/math/SafeMathUint.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @title SafeMathUint\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMathUint {\n  function toInt256Safe(uint256 a) internal pure returns (int256) {\n    int256 b = int256(a);\n    require(b >= 0);\n    return b;\n  }\n}"
			},
			"contracts/math/SafeMathInt.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @title SafeMathInt\n * @dev Math operations with safety checks that revert on error\n * @dev SafeMath adapted for int256\n * Based on code of  https://github.com/RequestNetwork/requestNetwork/blob/master/packages/requestNetworkSmartContracts/contracts/base/math/SafeMathInt.sol\n */\nlibrary SafeMathInt {\n  function mul(int256 a, int256 b) internal pure returns (int256) {\n    // Prevent overflow when multiplying INT256_MIN with -1\n    // https://github.com/RequestNetwork/requestNetwork/issues/43\n    require(!(a == - 2**255 && b == -1) && !(b == - 2**255 && a == -1));\n\n    int256 c = a * b;\n    require((b == 0) || (c / b == a));\n    return c;\n  }\n\n  function div(int256 a, int256 b) internal pure returns (int256) {\n    // Prevent overflow when dividing INT256_MIN by -1\n    // https://github.com/RequestNetwork/requestNetwork/issues/43\n    require(!(a == - 2**255 && b == -1) && (b > 0));\n\n    return a / b;\n  }\n\n  function sub(int256 a, int256 b) internal pure returns (int256) {\n    require((b >= 0 && a - b <= a) || (b < 0 && a - b > a));\n\n    return a - b;\n  }\n\n  function add(int256 a, int256 b) internal pure returns (int256) {\n    int256 c = a + b;\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\n    return c;\n  }\n\n  function toUint256Safe(int256 a) internal pure returns (uint256) {\n    require(a >= 0);\n    return uint256(a);\n  }\n}"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"@openzeppelin/contracts//access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"contracts/uniswap/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts//access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts//access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts//access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)18_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)18_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)18_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1816_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1815,
										"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1551_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)18_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 15,
										"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1816_storage"
									},
									{
										"astId": 17,
										"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1551_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1546,
										"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1550,
										"contract": "@openzeppelin/contracts//access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc5ccbefc29d67150bb7ac9852baf51bca8fdb0c6c6b4ecf36228cfb6c56e1b564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc5ccbefc29d67150bb7ac9852baf51bca8fdb0c6c6b4ecf36228cfb6c56e1b564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x5C 0xCB 0xEF 0xC2 SWAP14 PUSH8 0x150BB7AC9852BAF5 SHL 0xCA DUP16 0xDB 0xC PUSH13 0x6B4ECF36228CFB6C56E1B56473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc5ccbefc29d67150bb7ac9852baf51bca8fdb0c6c6b4ecf36228cfb6c56e1b564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x5C 0xCB 0xEF 0xC2 SWAP14 PUSH8 0x150BB7AC9852BAF5 SHL 0xCA DUP16 0xDB 0xC PUSH13 0x6B4ECF36228CFB6C56E1B56473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc5ccbefc29d67150bb7ac9852baf51bca8fdb0c6c6b4ecf36228cfb6c56e1b564736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220f7c5796f42a587eb4a40f51994cc9f11d6379048a8ee8459321e65d9877ce81764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013af380380620013af833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002c1565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024357600085556200028f565b82601f106200025e57805160ff19168380011785556200028f565b828001600101855582156200028f579182015b828111156200028e57825182559160200191906001019062000271565b5b5090506200029e9190620002a2565b5090565b5b80821115620002bd576000816000905550600101620002a3565b5090565b6110de80620002d16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f7c5796f42a587eb4a40f51994cc9f11d6379048a8ee8459321e65d9877ce81764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13AF CODESIZE SUB DUP1 PUSH3 0x13AF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2C1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x243 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x28F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x25E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x28F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x28F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x28E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x271 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x29E SWAP2 SWAP1 PUSH3 0x2A2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2BD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2A3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2D1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220F7C5 PUSH26 0x6F42A587EB4A40F51994CC9F11D6379048A8EE8459321E65D987 PUSH29 0xE81764736F6C6343000706003300000000000000000000000000000000 ",
							"sourceMap": "1321:9474:3:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f7c5796f42a587eb4a40f51994cc9f11d6379048a8ee8459321e65d9877ce81764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220F7C5 PUSH26 0x6F42A587EB4A40F51994CC9F11D6379048A8EE8459321E65D987 PUSH29 0xE81764736F6C6343000706003300000000000000000000000000000000 ",
							"sourceMap": "1321:9474:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:6:-;651:15;685:10;678:17;;598:104;:::o;9355:340:3:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7c5796f42a587eb4a40f51994cc9f11d6379048a8ee8459321e65d9877ce81764736f6c63430007060033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 657,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 663,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 665,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 667,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 669,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 671,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207d72d881407f186b791539e56281a78442c822820be97773fc725e49b945006564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d72d881407f186b791539e56281a78442c822820be97773fc725e49b945006564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x72D881407F186B791539E56281A78442C822820BE97773FC725E49B94500 PUSH6 0x64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d72d881407f186b791539e56281a78442c822820be97773fc725e49b945006564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x72D881407F186B791539E56281A78442C822820BE97773FC725E49B94500 PUSH6 0x64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d72d881407f186b791539e56281a78442c822820be97773fc725e49b945006564736f6c63430007060033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d6d2329dc95ed0a28f78fb2887d306d8a2b21f16574ed1ada47b7352173b939864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6d2329dc95ed0a28f78fb2887d306d8a2b21f16574ed1ada47b7352173b939864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD2 ORIGIN SWAP14 0xC9 0x5E 0xD0 LOG2 DUP16 PUSH25 0xFB2887D306D8A2B21F16574ED1ADA47B7352173B939864736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "753:8634:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6d2329dc95ed0a28f78fb2887d306d8a2b21f16574ed1ada47b7352173b939864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD2 ORIGIN SWAP14 0xC9 0x5E 0xD0 LOG2 DUP16 PUSH25 0xFB2887D306D8A2B21F16574ED1ADA47B7352173B939864736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "753:8634:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6d2329dc95ed0a28f78fb2887d306d8a2b21f16574ed1ada47b7352173b939864736f6c63430007060033",
									".code": [
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SIPilotToken.sol": {
				"OffrToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rate_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenholder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUSDC",
									"type": "uint256"
								}
							],
							"name": "AmountPaidOut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUSDC",
									"type": "uint256"
								}
							],
							"name": "FundsReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "project_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUSDC",
									"type": "uint256"
								}
							],
							"name": "PaymentReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "transmitter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUSDC",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_uniswapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_usdcInstance",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_usdcToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeAmountOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount_",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "claimableAmountOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "convertEthToUsdc",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "receivePayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sendTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensale_open",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnAmountOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Fabiconcept (Fabian Ajokubi T.)",
						"details": "Value is stored as USDC. The implementation has not been audited.",
						"events": {
							"AmountPaidOut(address,uint256)": {
								"params": {
									"amountUSDC": "amount of the paid out USDC",
									"tokenholder": "address of the investor / tokenholder"
								}
							},
							"FundsReleased(address,uint256)": {
								"params": {
									"amountUSDC": "amount of the released USDC",
									"beneficiary": "adress of the beneficiary"
								}
							},
							"PaymentReceived(address,uint256)": {
								"params": {
									"amountUSDC": "amount of the received USDC ",
									"project_owner": "address of the beneficiary"
								}
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amountToken": "amount of purchased tokens",
									"amountUSDC": "amount of USDC for the token purchase",
									"buyer": "address of the buyer",
									"transmitter": "address of the initiator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"accumulativeAmountOf(address)": {
								"params": {
									"_owner": "address of the account"
								},
								"returns": {
									"_0": "total amount of funds that were claimable"
								}
							},
							"allowance(address,address)": {
								"params": {
									"owner": "address of the account which owns the tokens",
									"spender": "address of the account that is allowed to spend the tokens"
								},
								"returns": {
									"_0": "amount of spendable tokens"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "amount to allow for spender to send",
									"spender": "address of the spender account"
								},
								"returns": {
									"_0": "boolean indicating whether the operation succeeded"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "address of the account "
								},
								"returns": {
									"_0": "amount of tokens hold by an address"
								}
							},
							"buyTokens(uint256)": {
								"details": "if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount",
								"params": {
									"usdcAmount_": "amount of USDC that will be invested"
								}
							},
							"cap()": {
								"returns": {
									"_0": "The cap"
								}
							},
							"claimableAmountOf(address)": {
								"params": {
									"_owner": "address of the account"
								},
								"returns": {
									"_0": "total amount of funds that are claimable"
								}
							},
							"constructor": {
								"params": {
									"beneficiary_": "Address of the beneficiary",
									"cap_": "Fund raising cap",
									"decimals_": "Decimals",
									"name_": "Name",
									"rate_": "Conversion Rate USDC <-> Security Token",
									"symbol_": "Symbol"
								}
							},
							"convertEthToUsdc(uint256)": {
								"params": {
									"usdcAmount": "amount of USDC that will be purchased"
								}
							},
							"decimals()": {
								"returns": {
									"_0": "The decimals"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"returns": {
									"_0": "The Name"
								}
							},
							"rate()": {
								"returns": {
									"_0": "The rate"
								}
							},
							"receivePayment(uint256)": {
								"params": {
									"usdcAmount": "amount that the beneficiary will pay "
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"sendTokens(address,uint256)": {
								"params": {
									"amount": "amount of tokens to be minted",
									"buyer": "address of the token buyer"
								}
							},
							"symbol()": {
								"returns": {
									"_0": "The symbol"
								}
							},
							"tokensale_open()": {
								"returns": {
									"_0": "boolean fundraising open"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "amount of supplied token"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "amount of the tokens to transfer",
									"recipient": "adddress of the recipient"
								},
								"returns": {
									"_0": "boolean transfer was sucessfull"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "amount of tokens to send",
									"recipient": "address of the account which owns the tokens",
									"sender": "address of the account which owns the tokens"
								},
								"returns": {
									"_0": "boolean indicating whether the operation succeeded"
								}
							},
							"withdrawnAmountOf(address)": {
								"params": {
									"_owner": "address of the account"
								},
								"returns": {
									"_0": "total amount of funds that have been withdrawn"
								}
							}
						},
						"title": "Offr Token implementation - Distributing Security Token for one-time fundraising ",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SIPilotToken.sol\":748:14525  contract OffrToken is Context, AccessControl, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SIPilotToken.sol\":1151:1193  0xaD6D458402F60fD3Bd25163575031ACDce07538D */\n  0xad6d458402f60fd3bd25163575031acdce07538d\n    /* \"contracts/SIPilotToken.sol\":1123:1193  address public _usdcToken = 0xaD6D458402F60fD3Bd25163575031ACDce07538D */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":1586:1591  false */\n  0x00\n    /* \"contracts/SIPilotToken.sol\":1563:1591  bool fundingReleased = false */\n  0x0c\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3198:3796  constructor (string memory name_, string memory symbol_, uint8 decimals_, uint256 cap_, uint256 rate_, address beneficiary_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0xc0\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/SIPilotToken.sol\":3333:3370  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_19\n    /* \"contracts/SIPilotToken.sol\":948:972  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/SIPilotToken.sol\":3357:3369  _msgSender() */\n  tag_20\n    /* \"contracts/SIPilotToken.sol\":3357:3367  _msgSender */\n  shl(0x20, tag_21)\n    /* \"contracts/SIPilotToken.sol\":3357:3369  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/SIPilotToken.sol\":3333:3343  _setupRole */\n  shl(0x20, tag_22)\n    /* \"contracts/SIPilotToken.sol\":3333:3370  _setupRole(MINTER_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/SIPilotToken.sol\":1029:1071  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n  0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n    /* \"contracts/SIPilotToken.sol\":3380:3394  _uniswapRouter */\n  0x01\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3380:3439  _uniswapRouter = IUniswapV2Router02(UNISWAP_ROUTER_ADDRESS) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3457:3462  name_ */\n  dup6\n    /* \"contracts/SIPilotToken.sol\":3449:3454  _name */\n  0x07\n    /* \"contracts/SIPilotToken.sol\":3449:3462  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_23\n  swap3\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n    /* \"contracts/SIPilotToken.sol\":3482:3489  symbol_ */\n  dup5\n    /* \"contracts/SIPilotToken.sol\":3472:3479  _symbol */\n  0x08\n    /* \"contracts/SIPilotToken.sol\":3472:3489  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/SIPilotToken.sol\":3511:3520  decimals_ */\n  dup4\n    /* \"contracts/SIPilotToken.sol\":3499:3508  _decimals */\n  0x09\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3499:3520  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3553:3563  _usdcToken */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SIPilotToken.sol\":3530:3543  _usdcInstance */\n  0x03\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3530:3564  _usdcInstance = IERC20(_usdcToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3590:3591  0 */\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3582:3587  rate_ */\n  dup3\n    /* \"contracts/SIPilotToken.sol\":3582:3591  rate_ > 0 */\n  gt\n    /* \"contracts/SIPilotToken.sol\":3574:3605  require(rate_ > 0, \"rate is 0\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x7261746520697320300000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"contracts/SIPilotToken.sol\":3630:3631  0 */\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3623:3627  cap_ */\n  dup4\n    /* \"contracts/SIPilotToken.sol\":3623:3631  cap_ > 0 */\n  gt\n    /* \"contracts/SIPilotToken.sol\":3615:3644  require(cap_ > 0, \"cap is 0\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x6361702069732030000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"contracts/SIPilotToken.sol\":3686:3687  0 */\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3662:3688  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SIPilotToken.sol\":3662:3674  beneficiary_ */\n  dup2\n    /* \"contracts/SIPilotToken.sol\":3662:3688  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/SIPilotToken.sol\":3654:3708  require(beneficiary_ != address(0), \"address is null\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x61646472657373206973206e756c6c0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"contracts/SIPilotToken.sol\":3725:3729  cap_ */\n  dup3\n    /* \"contracts/SIPilotToken.sol\":3718:3722  _cap */\n  0x0b\n    /* \"contracts/SIPilotToken.sol\":3718:3729  _cap = cap_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3747:3752  rate_ */\n  dup2\n    /* \"contracts/SIPilotToken.sol\":3739:3744  _rate */\n  0x0a\n    /* \"contracts/SIPilotToken.sol\":3739:3752  _rate = rate_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3777:3789  beneficiary_ */\n  dup1\n    /* \"contracts/SIPilotToken.sol\":3762:3774  _beneficiary */\n  0x0c\n  0x00\n    /* \"contracts/SIPilotToken.sol\":3762:3789  _beneficiary = beneficiary_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SIPilotToken.sol\":3198:3796  constructor (string memory name_, string memory symbol_, uint8 decimals_, uint256 cap_, uint256 rate_, address beneficiary_) {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SIPilotToken.sol\":748:14525  contract OffrToken is Context, AccessControl, IERC20 {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  tag_32\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6677:6681  role */\n  dup3\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6683:6690  account */\n  dup3\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6666:6676  _grantRole */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\ntag_33:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  tag_35\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7123:7130  account */\n  dup2\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7104  _roles */\n  0x00\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7105:7109  role */\n  dup6\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7118  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n  or(tag_0_181, shl(0x20, tag_36))\n  swap1\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7191  _msgSender() */\n  tag_38\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7189  _msgSender */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7191  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7170:7177  account */\n  dup2\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7164:7168  role */\n  dup4\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts//access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_40\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n  shl(0x20, tag_41)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  tag_43\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n  shl(0x20, tag_44)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n  dup3\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n  dup3\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n  0x01\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n  swap1\n  pop\n  jump(tag_42)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_42:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n  eq\n  iszero\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SIPilotToken.sol\":748:14525  contract OffrToken is Context, AccessControl, IERC20 {... */\ntag_24:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_50\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_49)\ntag_50:\n  dup3\n  0x1f\n  lt\n  tag_51\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_49)\ntag_51:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_49\n  jumpi\n  swap2\n  dup3\n  add\ntag_52:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_53\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_52)\ntag_53:\ntag_49:\n  pop\n  swap1\n  pop\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  pop\n  swap1\n  jump\t// out\ntag_55:\ntag_56:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_57\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_56)\ntag_57:\n  pop\n  swap1\n  jump\t// out\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SIPilotToken.sol\":748:14525  contract OffrToken is Context, AccessControl, IERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61778592\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd41e98ff\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xd41e98ff\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe2eab483\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x95d89b41\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x828cedb7\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x828cedb7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x83bebced\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8923d5a2\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x61778592\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x65b61b77\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x69d89575\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2c4e722e\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x3610724e\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x534844a2\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5cfed870\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x60b17914\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2c4e722e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x095ea7b3\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x24b4395b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0xcc8ad8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05ab421d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x060cf4e8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SIPilotToken.sol\":13962:14082  function withdrawnAmountOf(address _owner) public view returns(uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":10746:11074  function sendTokens(address buyer, uint256 amount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/SIPilotToken.sol\":1505:1524  uint256 public _cap */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":3861:3942  function name() public view returns (string memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_62:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_62)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_65:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":6364:6530  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":4820:4918  function totalSupply() public view override returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":6938:7248  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":14285:14522  function accumulativeAmountOf(address _owner) public view returns(uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":4451:4526  function rate() public view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/SIPilotToken.sol\":4167:4248  function decimals() public view returns (uint8) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":4314:4387  function cap() public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":9350:9762  function buyTokens(uint256 usdcAmount_) public payable {... */\n    tag_16:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/SIPilotToken.sol\":12983:13394  function withdrawAmount() public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/SIPilotToken.sol\":4629:4726  function tokensale_open() public view returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":9885:10465  function convertEthToUsdc(uint usdcAmount) public payable {... */\n    tag_20:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/SIPilotToken.sol\":1199:1226  IERC20 public _usdcInstance */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":1077:1117  IUniswapV2Router02 public _uniswapRouter */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":12009:12357  function releaseFunds() public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/SIPilotToken.sol\":5081:5198  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":1530:1557  address public _beneficiary */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":1479:1499  uint256 public _rate */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":1123:1193  address public _usdcToken = 0xaD6D458402F60fD3Bd25163575031ACDce07538D */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":4010:4095  function symbol() public view returns (string memory) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_147:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_149\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_147)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_150:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":5420:5592  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_161\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":13595:13749  function claimableAmountOf(address _owner) public view returns(uint256) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_165\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":910:972  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"contracts/SIPilotToken.sol\":5948:6097  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_176\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SIPilotToken.sol\":12532:12918  function receivePayment(uint256 usdcAmount) public {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_178\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_180\n      jump\t// in\n    tag_178:\n      stop\n        /* \"contracts/SIPilotToken.sol\":13962:14082  function withdrawnAmountOf(address _owner) public view returns(uint256) {... */\n    tag_51:\n        /* \"contracts/SIPilotToken.sol\":14025:14032  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":14051:14067  withdrawnAmounts */\n      0x0f\n        /* \"contracts/SIPilotToken.sol\":14051:14075  withdrawnAmounts[_owner] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":14068:14074  _owner */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":14051:14075  withdrawnAmounts[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":14044:14075  return withdrawnAmounts[_owner] */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":13962:14082  function withdrawnAmountOf(address _owner) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":10746:11074  function sendTokens(address buyer, uint256 amount) public {... */\n    tag_55:\n        /* \"contracts/SIPilotToken.sol\":10839:10840  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10822:10841  buyer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":10822:10827  buyer */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":10822:10841  buyer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":10814:10869  require(buyer != address(0), \"buyer is a zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x62757965722069732061207a65726f2061646472657373000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/SIPilotToken.sol\":10897:10898  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10887:10893  amount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":10887:10898  amount != 0 */\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":10879:10917  require(amount != 0, \"weiAmount is 0\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x776569416d6f756e742069732030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/SIPilotToken.sol\":10936:10950  uint256 tokens */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10953:10970  amount.mul(_rate) */\n      tag_186\n        /* \"contracts/SIPilotToken.sol\":10964:10969  _rate */\n      sload(0x0a)\n        /* \"contracts/SIPilotToken.sol\":10953:10959  amount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":10953:10963  amount.mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":10953:10970  amount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/SIPilotToken.sol\":10936:10970  uint256 tokens = amount.mul(_rate) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":10981:11000  mint(buyer, tokens) */\n      tag_188\n        /* \"contracts/SIPilotToken.sol\":10986:10991  buyer */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":10993:10999  tokens */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":10981:10985  mint */\n      tag_189\n        /* \"contracts/SIPilotToken.sol\":10981:11000  mint(buyer, tokens) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/SIPilotToken.sol\":11045:11050  buyer */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":11015:11067  TokensPurchased(_msgSender(), buyer, amount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":11031:11043  _msgSender() */\n      tag_190\n        /* \"contracts/SIPilotToken.sol\":11031:11041  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":11031:11043  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/SIPilotToken.sol\":11015:11067  TokensPurchased(_msgSender(), buyer, amount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/SIPilotToken.sol\":11052:11058  amount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":11060:11066  tokens */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":11015:11067  TokensPurchased(_msgSender(), buyer, amount, tokens) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SIPilotToken.sol\":10746:11074  function sendTokens(address buyer, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1505:1524  uint256 public _cap */\n    tag_58:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":3861:3942  function name() public view returns (string memory) {... */\n    tag_61:\n        /* \"contracts/SIPilotToken.sol\":3898:3911  string memory */\n      0x60\n        /* \"contracts/SIPilotToken.sol\":3930:3935  _name */\n      0x07\n        /* \"contracts/SIPilotToken.sol\":3923:3935  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_194\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_193)\n    tag_194:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":3861:3942  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":6364:6530  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_69:\n        /* \"contracts/SIPilotToken.sol\":6447:6451  bool */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":6463:6502  _approve(_msgSender(), spender, amount) */\n      tag_197\n        /* \"contracts/SIPilotToken.sol\":6472:6484  _msgSender() */\n      tag_198\n        /* \"contracts/SIPilotToken.sol\":6472:6482  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":6472:6484  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/SIPilotToken.sol\":6486:6493  spender */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":6495:6501  amount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":6463:6471  _approve */\n      tag_199\n        /* \"contracts/SIPilotToken.sol\":6463:6502  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/SIPilotToken.sol\":6519:6523  true */\n      0x01\n        /* \"contracts/SIPilotToken.sol\":6512:6523  return true */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":6364:6530  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4820:4918  function totalSupply() public view override returns (uint256) {... */\n    tag_72:\n        /* \"contracts/SIPilotToken.sol\":4873:4880  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":4899:4911  _totalSupply */\n      sload(0x06)\n        /* \"contracts/SIPilotToken.sol\":4892:4911  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4820:4918  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":6938:7248  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_76:\n        /* \"contracts/SIPilotToken.sol\":7044:7048  bool */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7060:7096  _transfer(sender, recipient, amount) */\n      tag_202\n        /* \"contracts/SIPilotToken.sol\":7070:7076  sender */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":7078:7087  recipient */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":7089:7095  amount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":7060:7069  _transfer */\n      tag_203\n        /* \"contracts/SIPilotToken.sol\":7060:7096  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/SIPilotToken.sol\":7106:7220  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\")) */\n      tag_204\n        /* \"contracts/SIPilotToken.sol\":7115:7121  sender */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":7123:7135  _msgSender() */\n      tag_205\n        /* \"contracts/SIPilotToken.sol\":7123:7133  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":7123:7135  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/SIPilotToken.sol\":7137:7219  _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\") */\n      tag_206\n        /* \"contracts/SIPilotToken.sol\":7175:7181  amount */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":7137:7219  _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_90890889493b104bf9ebabde1448715c2fb678969066cdc6632dc010e5b34ff0\n      0x21\n      swap2\n      codecopy\n        /* \"contracts/SIPilotToken.sol\":7137:7148  _allowances */\n      0x05\n        /* \"contracts/SIPilotToken.sol\":7137:7156  _allowances[sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7149:7155  sender */\n      dup12\n        /* \"contracts/SIPilotToken.sol\":7137:7156  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":7137:7170  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7157:7169  _msgSender() */\n      tag_207\n        /* \"contracts/SIPilotToken.sol\":7157:7167  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":7157:7169  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/SIPilotToken.sol\":7137:7170  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":7137:7174  _allowances[sender][_msgSender()].sub */\n      tag_208\n      swap1\n        /* \"contracts/SIPilotToken.sol\":7137:7219  _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/SIPilotToken.sol\":7106:7114  _approve */\n      tag_199\n        /* \"contracts/SIPilotToken.sol\":7106:7220  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/SIPilotToken.sol\":7237:7241  true */\n      0x01\n        /* \"contracts/SIPilotToken.sol\":7230:7241  return true */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":6938:7248  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4339:4346  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4365:4371  _roles */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4365:4377  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4372:4376  role */\n      dup4\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4365:4377  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4365:4387  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4358:4387  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":14285:14522  function accumulativeAmountOf(address _owner) public view returns(uint256) {... */\n    tag_84:\n        /* \"contracts/SIPilotToken.sol\":14351:14358  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":1635:1641  2**128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/SIPilotToken.sol\":14377:14503  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_211\n        /* \"contracts/SIPilotToken.sol\":14377:14487  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_212\n        /* \"contracts/SIPilotToken.sol\":14452:14478  claimableAmountCorrections */\n      0x0e\n        /* \"contracts/SIPilotToken.sol\":14452:14486  claimableAmountCorrections[_owner] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":14479:14485  _owner */\n      dup7\n        /* \"contracts/SIPilotToken.sol\":14452:14486  claimableAmountCorrections[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":14377:14438  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe() */\n      tag_213\n        /* \"contracts/SIPilotToken.sol\":14377:14423  claimableAmountPerToken.mul(balanceOf(_owner)) */\n      tag_214\n        /* \"contracts/SIPilotToken.sol\":14405:14422  balanceOf(_owner) */\n      tag_215\n        /* \"contracts/SIPilotToken.sol\":14415:14421  _owner */\n      dup9\n        /* \"contracts/SIPilotToken.sol\":14405:14414  balanceOf */\n      tag_126\n        /* \"contracts/SIPilotToken.sol\":14405:14422  balanceOf(_owner) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/SIPilotToken.sol\":14377:14400  claimableAmountPerToken */\n      sload(0x0d)\n        /* \"contracts/SIPilotToken.sol\":14377:14404  claimableAmountPerToken.mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":14377:14423  claimableAmountPerToken.mul(balanceOf(_owner)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/SIPilotToken.sol\":14377:14436  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe */\n      tag_216\n        /* \"contracts/SIPilotToken.sol\":14377:14438  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/SIPilotToken.sol\":14377:14451  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_217\n      swap1\n        /* \"contracts/SIPilotToken.sol\":14377:14487  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/SIPilotToken.sol\":14377:14501  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_218\n        /* \"contracts/SIPilotToken.sol\":14377:14503  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_211:\n        /* \"contracts/SIPilotToken.sol\":14377:14515  claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      dup2\n      tag_219\n      jumpi\n      invalid\n    tag_219:\n      div\n        /* \"contracts/SIPilotToken.sol\":14370:14515  return claimableAmountPerToken.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":14285:14522  function accumulativeAmountOf(address _owner) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4451:4526  function rate() public view returns (uint256) {... */\n    tag_87:\n        /* \"contracts/SIPilotToken.sol\":4488:4495  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":4514:4519  _rate */\n      sload(0x0a)\n        /* \"contracts/SIPilotToken.sol\":4507:4519  return _rate */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4451:4526  function rate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_222\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4735:4741  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4742:4746  role */\n      dup5\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4735:4757  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4759:4771  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4759:4769  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4759:4771  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4727:4734  hasRole */\n      tag_143\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4719:4824  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      tag_225\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4846:4850  role */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4852:4859  account */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4835:4845  _grantRole */\n      tag_226\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4167:4248  function decimals() public view returns (uint8) {... */\n    tag_94:\n        /* \"contracts/SIPilotToken.sol\":4208:4213  uint8 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":4232:4241  _decimals */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SIPilotToken.sol\":4225:4241  return _decimals */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4167:4248  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4314:4387  function cap() public view returns (uint256) {... */\n    tag_97:\n        /* \"contracts/SIPilotToken.sol\":4350:4357  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":4376:4380  _cap */\n      sload(0x0b)\n        /* \"contracts/SIPilotToken.sol\":4369:4380  return _cap */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4314:4387  function cap() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":9350:9762  function buyTokens(uint256 usdcAmount_) public payable {... */\n    tag_100:\n        /* \"contracts/SIPilotToken.sol\":9431:9432  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":9419:9428  msg.value */\n      callvalue\n        /* \"contracts/SIPilotToken.sol\":9419:9432  msg.value > 0 */\n      gt\n        /* \"contracts/SIPilotToken.sol\":9415:9595  if (msg.value > 0) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/SIPilotToken.sol\":9448:9477  convertEthToUsdc(usdcAmount_) */\n      tag_231\n        /* \"contracts/SIPilotToken.sol\":9465:9476  usdcAmount_ */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":9448:9464  convertEthToUsdc */\n      tag_113\n        /* \"contracts/SIPilotToken.sol\":9448:9477  convertEthToUsdc(usdcAmount_) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/SIPilotToken.sol\":9415:9595  if (msg.value > 0) {... */\n      jump(tag_232)\n    tag_230:\n        /* \"contracts/SIPilotToken.sol\":9517:9530  _usdcInstance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":9517:9543  _usdcInstance.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SIPilotToken.sol\":9544:9554  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":9564:9568  this */\n      address\n        /* \"contracts/SIPilotToken.sol\":9571:9582  usdcAmount_ */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":9517:9583  _usdcInstance.transferFrom(msg.sender, address(this), usdcAmount_) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":9509:9584  require(_usdcInstance.transferFrom(msg.sender, address(this), usdcAmount_)) */\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/SIPilotToken.sol\":9415:9595  if (msg.value > 0) {... */\n    tag_232:\n        /* \"contracts/SIPilotToken.sol\":9604:9618  uint256 tokens */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":9621:9643  usdcAmount_.mul(_rate) */\n      tag_238\n        /* \"contracts/SIPilotToken.sol\":9637:9642  _rate */\n      sload(0x0a)\n        /* \"contracts/SIPilotToken.sol\":9621:9632  usdcAmount_ */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":9621:9636  usdcAmount_.mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":9621:9643  usdcAmount_.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/SIPilotToken.sol\":9604:9643  uint256 tokens = usdcAmount_.mul(_rate) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":9653:9678  _mint(msg.sender, tokens) */\n      tag_239\n        /* \"contracts/SIPilotToken.sol\":9659:9669  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":9671:9677  tokens */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":9653:9658  _mint */\n      tag_240\n        /* \"contracts/SIPilotToken.sol\":9653:9678  _mint(msg.sender, tokens) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/SIPilotToken.sol\":9723:9733  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":9693:9755  TokensPurchased(_msgSender(), msg.sender, usdcAmount_, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":9709:9721  _msgSender() */\n      tag_241\n        /* \"contracts/SIPilotToken.sol\":9709:9719  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":9709:9721  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/SIPilotToken.sol\":9693:9755  TokensPurchased(_msgSender(), msg.sender, usdcAmount_, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/SIPilotToken.sol\":9735:9746  usdcAmount_ */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":9748:9754  tokens */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":9693:9755  TokensPurchased(_msgSender(), msg.sender, usdcAmount_, tokens) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SIPilotToken.sol\":9350:9762  function buyTokens(uint256 usdcAmount_) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5915:5927  _msgSender() */\n      tag_243\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5915:5925  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5915:5927  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5904:5911  account */\n      dup2\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5896:5979  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      tag_245\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":6002:6006  role */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":6008:6015  account */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5990:6001  _revokeRole */\n      tag_246\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":12983:13394  function withdrawAmount() public {... */\n    tag_107:\n        /* \"contracts/SIPilotToken.sol\":13026:13050  uint256 _claimableAmount */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13053:13082  claimableAmountOf(msg.sender) */\n      tag_248\n        /* \"contracts/SIPilotToken.sol\":13071:13081  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":13053:13070  claimableAmountOf */\n      tag_165\n        /* \"contracts/SIPilotToken.sol\":13053:13082  claimableAmountOf(msg.sender) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/SIPilotToken.sol\":13026:13082  uint256 _claimableAmount = claimableAmountOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":13115:13116  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13096:13112  _claimableAmount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":13096:13116  _claimableAmount > 0 */\n      gt\n        /* \"contracts/SIPilotToken.sol\":13092:13388  if (_claimableAmount > 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/SIPilotToken.sol\":13163:13213  withdrawnAmounts[msg.sender].add(_claimableAmount) */\n      tag_250\n        /* \"contracts/SIPilotToken.sol\":13196:13212  _claimableAmount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":13163:13179  withdrawnAmounts */\n      0x0f\n        /* \"contracts/SIPilotToken.sol\":13163:13191  withdrawnAmounts[msg.sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13180:13190  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":13163:13191  withdrawnAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":13163:13195  withdrawnAmounts[msg.sender].add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":13163:13213  withdrawnAmounts[msg.sender].add(_claimableAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/SIPilotToken.sol\":13132:13148  withdrawnAmounts */\n      0x0f\n        /* \"contracts/SIPilotToken.sol\":13132:13160  withdrawnAmounts[msg.sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13149:13159  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":13132:13160  withdrawnAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":13132:13213  withdrawnAmounts[msg.sender] = withdrawnAmounts[msg.sender].add(_claimableAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":13235:13248  _usdcInstance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":13235:13257  _usdcInstance.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SIPilotToken.sol\":13258:13268  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":13270:13286  _claimableAmount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":13235:13287  _usdcInstance.transfer(msg.sender, _claimableAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":13227:13315  require(_usdcInstance.transfer(msg.sender, _claimableAmount), \"transfer not successful\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206e6f74207375636365737366756c000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/SIPilotToken.sol\":13348:13358  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":13334:13377  AmountPaidOut(msg.sender, _claimableAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xee4bbb2593064ac08210a82c9cb3cf8e7a839976e8ea380bf97b8387faa49a9b\n        /* \"contracts/SIPilotToken.sol\":13360:13376  _claimableAmount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":13334:13377  AmountPaidOut(msg.sender, _claimableAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SIPilotToken.sol\":13092:13388  if (_claimableAmount > 0) {... */\n    tag_249:\n        /* \"contracts/SIPilotToken.sol\":12983:13394  function withdrawAmount() public {... */\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4629:4726  function tokensale_open() public view returns (bool) {... */\n    tag_110:\n        /* \"contracts/SIPilotToken.sol\":4676:4680  bool */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":4706:4719  totalSupply() */\n      tag_258\n        /* \"contracts/SIPilotToken.sol\":4706:4717  totalSupply */\n      tag_72\n        /* \"contracts/SIPilotToken.sol\":4706:4719  totalSupply() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/SIPilotToken.sol\":4699:4703  _cap */\n      sload(0x0b)\n        /* \"contracts/SIPilotToken.sol\":4699:4719  _cap > totalSupply() */\n      gt\n        /* \"contracts/SIPilotToken.sol\":4692:4719  return _cap > totalSupply() */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4629:4726  function tokensale_open() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":9885:10465  function convertEthToUsdc(uint usdcAmount) public payable {... */\n    tag_113:\n        /* \"contracts/SIPilotToken.sol\":9953:9966  uint deadline */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":9987:9989  15 */\n      0x0f\n        /* \"contracts/SIPilotToken.sol\":9969:9984  block.timestamp */\n      timestamp\n        /* \"contracts/SIPilotToken.sol\":9969:9989  block.timestamp + 15 */\n      add\n        /* \"contracts/SIPilotToken.sol\":9953:9989  uint deadline = block.timestamp + 15 */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":9999:10020  address[] memory path */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10037:10038  2 */\n      0x02\n        /* \"contracts/SIPilotToken.sol\":10023:10039  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_261\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_261:\n      pop\n        /* \"contracts/SIPilotToken.sol\":9999:10039  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":10059:10073  _uniswapRouter */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":10059:10078  _uniswapRouter.WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"contracts/SIPilotToken.sol\":10059:10080  _uniswapRouter.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":10049:10053  path */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":10054:10055  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10049:10056  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_266\n      jumpi\n      invalid\n    tag_266:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SIPilotToken.sol\":10049:10080  path[0] = _uniswapRouter.WETH() */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":10100:10110  _usdcToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":10090:10094  path */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":10095:10096  1 */\n      0x01\n        /* \"contracts/SIPilotToken.sol\":10090:10097  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_267\n      jumpi\n      invalid\n    tag_267:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SIPilotToken.sol\":10090:10110  path[1] = _usdcToken */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":10122:10140  uint[] memory amts */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10144:10158  _uniswapRouter */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":10144:10180  _uniswapRouter.swapETHForExactTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb3bdb41\n        /* \"contracts/SIPilotToken.sol\":10189:10198  msg.value */\n      callvalue\n        /* \"contracts/SIPilotToken.sol\":10201:10211  usdcAmount */\n      dup7\n        /* \"contracts/SIPilotToken.sol\":10213:10217  path */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":10227:10231  this */\n      address\n        /* \"contracts/SIPilotToken.sol\":10234:10242  deadline */\n      dup9\n        /* \"contracts/SIPilotToken.sol\":10144:10243  _uniswapRouter.swapETHForExactTokens{ value: msg.value }(usdcAmount, path, address(this), deadline) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_268:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_270\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_268)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x20\n      dup2\n      lt\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_278:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_280\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_278)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":10121:10243  (uint[] memory amts) = _uniswapRouter.swapETHForExactTokens{ value: msg.value }(usdcAmount, path, address(this), deadline) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":10275:10276  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10265:10269  amts */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":10270:10271  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10265:10272  amts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SIPilotToken.sol\":10265:10276  amts[0] > 0 */\n      gt\n        /* \"contracts/SIPilotToken.sol\":10257:10297  require(amts[0] > 0, \"Exchange failed.\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45786368616e6765206661696c65642e00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"contracts/SIPilotToken.sol\":10347:10359  bool success */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":10364:10374  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":10364:10379  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":10388:10409  address(this).balance */\n      selfbalance\n        /* \"contracts/SIPilotToken.sol\":10364:10415  msg.sender.call{ value: address(this).balance }(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_285\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_284)\n    tag_285:\n      0x60\n      swap2\n      pop\n    tag_284:\n      pop\n        /* \"contracts/SIPilotToken.sol\":10346:10415  (bool success,) = msg.sender.call{ value: address(this).balance }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":10433:10440  success */\n      dup1\n        /* \"contracts/SIPilotToken.sol\":10425:10458  require(success, \"refund failed\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x726566756e64206661696c656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/SIPilotToken.sol\":9885:10465  function convertEthToUsdc(uint usdcAmount) public payable {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1199:1226  IERC20 public _usdcInstance */\n    tag_116:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1077:1117  IUniswapV2Router02 public _uniswapRouter */\n    tag_119:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":12009:12357  function releaseFunds() public {... */\n    tag_122:\n        /* \"contracts/SIPilotToken.sol\":12078:12083  false */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":12058:12083  tokensale_open() == false */\n      iszero\n      iszero\n        /* \"contracts/SIPilotToken.sol\":12058:12074  tokensale_open() */\n      tag_288\n        /* \"contracts/SIPilotToken.sol\":12058:12072  tokensale_open */\n      tag_110\n        /* \"contracts/SIPilotToken.sol\":12058:12074  tokensale_open() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/SIPilotToken.sol\":12058:12083  tokensale_open() == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/SIPilotToken.sol\":12050:12104  require(tokensale_open() == false, \"funds not raised\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x66756e6473206e6f742072616973656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/SIPilotToken.sol\":12141:12146  false */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":12122:12146  fundingReleased == false */\n      iszero\n      iszero\n        /* \"contracts/SIPilotToken.sol\":12122:12137  fundingReleased */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SIPilotToken.sol\":12122:12146  fundingReleased == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/SIPilotToken.sol\":12114:12175  require(fundingReleased == false, \"funding already released\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x66756e64696e6720616c72656164792072656c65617365640000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/SIPilotToken.sol\":12193:12206  _usdcInstance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":12193:12215  _usdcInstance.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SIPilotToken.sol\":12216:12228  _beneficiary */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":12230:12245  _cap.mul(_rate) */\n      tag_291\n        /* \"contracts/SIPilotToken.sol\":12239:12244  _rate */\n      sload(0x0a)\n        /* \"contracts/SIPilotToken.sol\":12230:12234  _cap */\n      sload(0x0b)\n        /* \"contracts/SIPilotToken.sol\":12230:12238  _cap.mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":12230:12245  _cap.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/SIPilotToken.sol\":12193:12246  _usdcInstance.transfer(_beneficiary, _cap.mul(_rate)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_295\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_295:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":12185:12270  require(_usdcInstance.transfer(_beneficiary, _cap.mul(_rate)), \"sending USDC failed\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73656e64696e672055534443206661696c656400000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/SIPilotToken.sol\":12299:12311  _beneficiary */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":12285:12318  FundsReleased(_beneficiary, _cap) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a\n        /* \"contracts/SIPilotToken.sol\":12313:12317  _cap */\n      sload(0x0b)\n        /* \"contracts/SIPilotToken.sol\":12285:12318  FundsReleased(_beneficiary, _cap) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SIPilotToken.sol\":12346:12350  true */\n      0x01\n        /* \"contracts/SIPilotToken.sol\":12328:12343  fundingReleased */\n      0x0c\n      0x14\n        /* \"contracts/SIPilotToken.sol\":12328:12350  fundingReleased = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":12009:12357  function releaseFunds() public {... */\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":5081:5198  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_126:\n        /* \"contracts/SIPilotToken.sol\":5147:5154  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":5173:5182  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":5173:5191  _balances[account] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":5183:5190  account */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":5173:5191  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":5166:5191  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":5081:5198  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1530:1557  address public _beneficiary */\n    tag_129:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1479:1499  uint256 public _rate */\n    tag_132:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":1123:1193  address public _usdcToken = 0xaD6D458402F60fD3Bd25163575031ACDce07538D */\n    tag_135:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4038:4045  address */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      tag_299\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4088:4093  index */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4070  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4071:4075  role */\n      dup7\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4084  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4087  _roles[role].members.at */\n      tag_300\n      swap1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":4057:4094  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3019:3023  bool */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      tag_302\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3072:3079  account */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3048  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3049:3053  role */\n      dup7\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3062  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3071  _roles[role].members.contains */\n      tag_303\n      swap1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3035:3080  return _roles[role].members.contains(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":4010:4095  function symbol() public view returns (string memory) {... */\n    tag_146:\n        /* \"contracts/SIPilotToken.sol\":4049:4062  string memory */\n      0x60\n        /* \"contracts/SIPilotToken.sol\":4081:4088  _symbol */\n      0x08\n        /* \"contracts/SIPilotToken.sol\":4074:4088  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_306\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_305)\n    tag_306:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_307:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_307\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":4010:4095  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_153:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":5420:5592  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_157:\n        /* \"contracts/SIPilotToken.sol\":5506:5510  bool */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":5522:5564  _transfer(_msgSender(), recipient, amount) */\n      tag_309\n        /* \"contracts/SIPilotToken.sol\":5532:5544  _msgSender() */\n      tag_310\n        /* \"contracts/SIPilotToken.sol\":5532:5542  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":5532:5544  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/SIPilotToken.sol\":5546:5555  recipient */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":5557:5563  amount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":5522:5531  _transfer */\n      tag_203\n        /* \"contracts/SIPilotToken.sol\":5522:5564  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/SIPilotToken.sol\":5581:5585  true */\n      0x01\n        /* \"contracts/SIPilotToken.sol\":5574:5585  return true */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":5420:5592  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3318:3325  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      tag_312\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3350  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3351:3355  role */\n      dup5\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3364  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3371  _roles[role].members.length */\n      tag_313\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3337:3373  return _roles[role].members.length() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":13595:13749  function claimableAmountOf(address _owner) public view returns(uint256) {... */\n    tag_165:\n        /* \"contracts/SIPilotToken.sol\":13658:13665  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13684:13742  accumulativeAmountOf(_owner).sub(withdrawnAmounts[_owner]) */\n      tag_315\n        /* \"contracts/SIPilotToken.sol\":13717:13733  withdrawnAmounts */\n      0x0f\n        /* \"contracts/SIPilotToken.sol\":13717:13741  withdrawnAmounts[_owner] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":13734:13740  _owner */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":13717:13741  withdrawnAmounts[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":13684:13712  accumulativeAmountOf(_owner) */\n      tag_316\n        /* \"contracts/SIPilotToken.sol\":13705:13711  _owner */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":13684:13704  accumulativeAmountOf */\n      tag_84\n        /* \"contracts/SIPilotToken.sol\":13684:13712  accumulativeAmountOf(_owner) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/SIPilotToken.sol\":13684:13716  accumulativeAmountOf(_owner).sub */\n      tag_317\n      swap1\n        /* \"contracts/SIPilotToken.sol\":13684:13742  accumulativeAmountOf(_owner).sub(withdrawnAmounts[_owner]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/SIPilotToken.sol\":13677:13742  return accumulativeAmountOf(_owner).sub(withdrawnAmounts[_owner]) */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":13595:13749  function claimableAmountOf(address _owner) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":910:972  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_168:\n        /* \"contracts/SIPilotToken.sol\":948:972  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/SIPilotToken.sol\":910:972  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_319\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5193:5199  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5200:5204  role */\n      dup5\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5193:5215  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5217:5229  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5217:5227  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5217:5229  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5185:5192  hasRole */\n      tag_143\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5177:5283  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_321:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      tag_322\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5306:5310  role */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5312:5319  account */\n      dup3\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5294:5305  _revokeRole */\n      tag_246\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":5948:6097  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_176:\n        /* \"contracts/SIPilotToken.sol\":6037:6044  uint256 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":6063:6074  _allowances */\n      0x05\n        /* \"contracts/SIPilotToken.sol\":6063:6081  _allowances[owner] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":6075:6080  owner */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":6063:6081  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":6063:6090  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":6082:6089  spender */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":6063:6090  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":6056:6090  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":5948:6097  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":12532:12918  function receivePayment(uint256 usdcAmount) public {... */\n    tag_180:\n        /* \"contracts/SIPilotToken.sol\":12617:12618  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":12601:12614  totalSupply() */\n      tag_325\n        /* \"contracts/SIPilotToken.sol\":12601:12612  totalSupply */\n      tag_72\n        /* \"contracts/SIPilotToken.sol\":12601:12614  totalSupply() */\n      jump\t// in\n    tag_325:\n        /* \"contracts/SIPilotToken.sol\":12601:12618  totalSupply() > 0 */\n      gt\n        /* \"contracts/SIPilotToken.sol\":12593:12635  require(totalSupply() > 0, \"total supply\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f74616c20737570706c790000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"contracts/SIPilotToken.sol\":12653:12666  _usdcInstance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":12653:12679  _usdcInstance.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SIPilotToken.sol\":12680:12690  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":12700:12704  this */\n      address\n        /* \"contracts/SIPilotToken.sol\":12707:12717  usdcAmount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":12653:12718  _usdcInstance.transferFrom(msg.sender, address(this), usdcAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_327:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_329\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_329:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/SIPilotToken.sol\":12645:12749  require(_usdcInstance.transferFrom(msg.sender, address(this), usdcAmount), \"USDC Transfer not possible\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x55534443205472616e73666572206e6f7420706f737369626c65000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"contracts/SIPilotToken.sol\":12785:12857  claimableAmountPerToken.add((usdcAmount).mul(magnitude) / totalSupply()) */\n      tag_332\n        /* \"contracts/SIPilotToken.sol\":12843:12856  totalSupply() */\n      tag_333\n        /* \"contracts/SIPilotToken.sol\":12843:12854  totalSupply */\n      tag_72\n        /* \"contracts/SIPilotToken.sol\":12843:12856  totalSupply() */\n      jump\t// in\n    tag_333:\n        /* \"contracts/SIPilotToken.sol\":12813:12840  (usdcAmount).mul(magnitude) */\n      tag_334\n        /* \"contracts/SIPilotToken.sol\":1635:1641  2**128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/SIPilotToken.sol\":12814:12824  usdcAmount */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":12813:12829  (usdcAmount).mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":12813:12840  (usdcAmount).mul(magnitude) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/SIPilotToken.sol\":12813:12856  (usdcAmount).mul(magnitude) / totalSupply() */\n      dup2\n      tag_335\n      jumpi\n      invalid\n    tag_335:\n      div\n        /* \"contracts/SIPilotToken.sol\":12785:12808  claimableAmountPerToken */\n      sload(0x0d)\n        /* \"contracts/SIPilotToken.sol\":12785:12812  claimableAmountPerToken.add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":12785:12857  claimableAmountPerToken.add((usdcAmount).mul(magnitude) / totalSupply()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_332:\n        /* \"contracts/SIPilotToken.sol\":12759:12782  claimableAmountPerToken */\n      0x0d\n        /* \"contracts/SIPilotToken.sol\":12759:12857  claimableAmountPerToken = claimableAmountPerToken.add((usdcAmount).mul(magnitude) / totalSupply()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":12888:12898  msg.sender */\n      caller\n        /* \"contracts/SIPilotToken.sol\":12872:12911  PaymentReceived(msg.sender, usdcAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770\n        /* \"contracts/SIPilotToken.sol\":12900:12910  usdcAmount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":12872:12911  PaymentReceived(msg.sender, usdcAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SIPilotToken.sol\":12532:12918  function receivePayment(uint256 usdcAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_337\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_339)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_340:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_341\n      jumpi\n      invalid\n    tag_341:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_342:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_339:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":11270:11441  function mint(address to, uint256 amount) internal {... */\n    tag_189:\n        /* \"contracts/SIPilotToken.sol\":11339:11373  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_344\n        /* \"contracts/SIPilotToken.sol\":948:972  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/SIPilotToken.sol\":11360:11372  _msgSender() */\n      tag_345\n        /* \"contracts/SIPilotToken.sol\":11360:11370  _msgSender */\n      tag_191\n        /* \"contracts/SIPilotToken.sol\":11360:11372  _msgSender() */\n      jump\t// in\n    tag_345:\n        /* \"contracts/SIPilotToken.sol\":11339:11346  hasRole */\n      tag_143\n        /* \"contracts/SIPilotToken.sol\":11339:11373  hasRole(MINTER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/SIPilotToken.sol\":11331:11407  require(hasRole(MINTER_ROLE, _msgSender()), \"must have minter role to mint\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/SIPilotToken.sol\":11417:11434  _mint(to, amount) */\n      tag_347\n        /* \"contracts/SIPilotToken.sol\":11423:11425  to */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":11427:11433  amount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":11417:11422  _mint */\n      tag_240\n        /* \"contracts/SIPilotToken.sol\":11417:11434  _mint(to, amount) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/SIPilotToken.sol\":11270:11441  function mint(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":8744:9070  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_199:\n        /* \"contracts/SIPilotToken.sol\":8862:8863  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8845:8864  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":8845:8850  owner */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":8845:8864  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":8837:8898  require(owner != address(0), \"approve from the zero address\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d20746865207a65726f2061646472657373000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/SIPilotToken.sol\":8935:8936  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8916:8937  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":8916:8923  spender */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":8916:8937  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":8908:8969  require(spender != address(0), \"approve to the zero address\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20746865207a65726f20616464726573730000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/SIPilotToken.sol\":9010:9016  amount */\n      dup1\n        /* \"contracts/SIPilotToken.sol\":8980:8991  _allowances */\n      0x05\n        /* \"contracts/SIPilotToken.sol\":8980:8998  _allowances[owner] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8992:8997  owner */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":8980:8998  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":8980:9007  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8999:9006  spender */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":8980:9007  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":8980:9016  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":9047:9054  spender */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":9031:9063  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":9040:9045  owner */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":9031:9063  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/SIPilotToken.sol\":9056:9062  amount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":9031:9063  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SIPilotToken.sol\":8744:9070  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":7255:8095  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_203:\n        /* \"contracts/SIPilotToken.sol\":7378:7379  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7360:7380  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":7360:7366  sender */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":7360:7380  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":7352:7415  require(sender != address(0), \"transfer from the zero address\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20746865207a65726f20616464726573730000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"contracts/SIPilotToken.sol\":7454:7455  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7433:7456  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":7433:7442  recipient */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":7433:7456  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":7425:7489  require(recipient != address(0), \"transfer to the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f20746865207a65726f206164647265737300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"contracts/SIPilotToken.sol\":7500:7536  _beforeTokenTransfer(sender, amount) */\n      tag_355\n        /* \"contracts/SIPilotToken.sol\":7521:7527  sender */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":7529:7535  amount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":7500:7520  _beforeTokenTransfer */\n      tag_356\n        /* \"contracts/SIPilotToken.sol\":7500:7536  _beforeTokenTransfer(sender, amount) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/SIPilotToken.sol\":7567:7631  _balances[sender].sub(amount, \"transfer amount exceeds balance\") */\n      tag_357\n        /* \"contracts/SIPilotToken.sol\":7589:7595  amount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":7567:7631  _balances[sender].sub(amount, \"transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      0x7472616e7366657220616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":7567:7576  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":7567:7584  _balances[sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7577:7583  sender */\n      dup8\n        /* \"contracts/SIPilotToken.sol\":7567:7584  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":7567:7588  _balances[sender].sub */\n      tag_208\n      swap1\n        /* \"contracts/SIPilotToken.sol\":7567:7631  _balances[sender].sub(amount, \"transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_357:\n        /* \"contracts/SIPilotToken.sol\":7547:7556  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":7547:7564  _balances[sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7557:7563  sender */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":7547:7564  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":7547:7631  _balances[sender] = _balances[sender].sub(amount, \"transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":7664:7696  _balances[recipient].add(amount) */\n      tag_358\n        /* \"contracts/SIPilotToken.sol\":7689:7695  amount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":7664:7673  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":7664:7684  _balances[recipient] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7674:7683  recipient */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":7664:7684  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":7664:7688  _balances[recipient].add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":7664:7696  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_358:\n        /* \"contracts/SIPilotToken.sol\":7641:7650  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":7641:7661  _balances[recipient] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7651:7660  recipient */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":7641:7661  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":7641:7696  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":7728:7737  recipient */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":7711:7746  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":7720:7726  sender */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":7711:7746  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SIPilotToken.sol\":7739:7745  amount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":7711:7746  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SIPilotToken.sol\":7818:7835  int256 correction */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7838:7888  claimableAmountPerToken.mul(amount).toInt256Safe() */\n      tag_359\n        /* \"contracts/SIPilotToken.sol\":7838:7873  claimableAmountPerToken.mul(amount) */\n      tag_360\n        /* \"contracts/SIPilotToken.sol\":7866:7872  amount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":7838:7861  claimableAmountPerToken */\n      sload(0x0d)\n        /* \"contracts/SIPilotToken.sol\":7838:7865  claimableAmountPerToken.mul */\n      tag_187\n      swap1\n        /* \"contracts/SIPilotToken.sol\":7838:7873  claimableAmountPerToken.mul(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"contracts/SIPilotToken.sol\":7838:7886  claimableAmountPerToken.mul(amount).toInt256Safe */\n      tag_216\n        /* \"contracts/SIPilotToken.sol\":7838:7888  claimableAmountPerToken.mul(amount).toInt256Safe() */\n      jump\t// in\n    tag_359:\n        /* \"contracts/SIPilotToken.sol\":7818:7888  int256 correction = claimableAmountPerToken.mul(amount).toInt256Safe() */\n      swap1\n      pop\n        /* \"contracts/SIPilotToken.sol\":7935:7985  claimableAmountCorrections[sender].add(correction) */\n      tag_361\n        /* \"contracts/SIPilotToken.sol\":7974:7984  correction */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":7935:7961  claimableAmountCorrections */\n      0x0e\n        /* \"contracts/SIPilotToken.sol\":7935:7969  claimableAmountCorrections[sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7962:7968  sender */\n      dup8\n        /* \"contracts/SIPilotToken.sol\":7935:7969  claimableAmountCorrections[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":7935:7973  claimableAmountCorrections[sender].add */\n      tag_217\n      swap1\n        /* \"contracts/SIPilotToken.sol\":7935:7985  claimableAmountCorrections[sender].add(correction) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/SIPilotToken.sol\":7898:7924  claimableAmountCorrections */\n      0x0e\n        /* \"contracts/SIPilotToken.sol\":7898:7932  claimableAmountCorrections[sender] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":7925:7931  sender */\n      dup7\n        /* \"contracts/SIPilotToken.sol\":7898:7932  claimableAmountCorrections[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":7898:7985  claimableAmountCorrections[sender] = claimableAmountCorrections[sender].add(correction) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":8035:8088  claimableAmountCorrections[recipient].sub(correction) */\n      tag_362\n        /* \"contracts/SIPilotToken.sol\":8077:8087  correction */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":8035:8061  claimableAmountCorrections */\n      0x0e\n        /* \"contracts/SIPilotToken.sol\":8035:8072  claimableAmountCorrections[recipient] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8062:8071  recipient */\n      dup7\n        /* \"contracts/SIPilotToken.sol\":8035:8072  claimableAmountCorrections[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":8035:8076  claimableAmountCorrections[recipient].sub */\n      tag_363\n      swap1\n        /* \"contracts/SIPilotToken.sol\":8035:8088  claimableAmountCorrections[recipient].sub(correction) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/SIPilotToken.sol\":7995:8021  claimableAmountCorrections */\n      0x0e\n        /* \"contracts/SIPilotToken.sol\":7995:8032  claimableAmountCorrections[recipient] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8022:8031  recipient */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":7995:8032  claimableAmountCorrections[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":7995:8088  claimableAmountCorrections[recipient] = claimableAmountCorrections[recipient].sub(correction) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":7255:8095  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_365\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_366:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_368\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_366)\n    tag_368:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_369\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_369:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_365:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMathUint.sol\":185:315  function toInt256Safe(uint256 a) internal pure returns (int256) {... */\n    tag_216:\n        /* \"contracts/math/SafeMathUint.sol\":241:247  int256 */\n      0x00\n        /* \"contracts/math/SafeMathUint.sol\":255:263  int256 b */\n      dup1\n        /* \"contracts/math/SafeMathUint.sol\":273:274  a */\n      dup3\n        /* \"contracts/math/SafeMathUint.sol\":255:275  int256 b = int256(a) */\n      swap1\n      pop\n        /* \"contracts/math/SafeMathUint.sol\":294:295  0 */\n      0x00\n        /* \"contracts/math/SafeMathUint.sol\":289:290  b */\n      dup2\n        /* \"contracts/math/SafeMathUint.sol\":289:295  b >= 0 */\n      slt\n      iszero\n        /* \"contracts/math/SafeMathUint.sol\":281:296  require(b >= 0) */\n      tag_371\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_371:\n        /* \"contracts/math/SafeMathUint.sol\":309:310  b */\n      dup1\n        /* \"contracts/math/SafeMathUint.sol\":302:310  return b */\n      swap2\n      pop\n      pop\n        /* \"contracts/math/SafeMathUint.sol\":185:315  function toInt256Safe(uint256 a) internal pure returns (int256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMathInt.sol\":1142:1300  function add(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_217:\n        /* \"contracts/math/SafeMathInt.sol\":1198:1204  int256 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1212:1220  int256 c */\n      dup1\n        /* \"contracts/math/SafeMathInt.sol\":1227:1228  b */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1223:1224  a */\n      dup5\n        /* \"contracts/math/SafeMathInt.sol\":1223:1228  a + b */\n      add\n        /* \"contracts/math/SafeMathInt.sol\":1212:1228  int256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1248:1249  0 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1243:1244  b */\n      dup4\n        /* \"contracts/math/SafeMathInt.sol\":1243:1249  b >= 0 */\n      slt\n      iszero\n        /* \"contracts/math/SafeMathInt.sol\":1243:1259  b >= 0 && c >= a */\n      dup1\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1258:1259  a */\n      dup4\n        /* \"contracts/math/SafeMathInt.sol\":1253:1254  c */\n      dup2\n        /* \"contracts/math/SafeMathInt.sol\":1253:1259  c >= a */\n      slt\n      iszero\n        /* \"contracts/math/SafeMathInt.sol\":1243:1259  b >= 0 && c >= a */\n    tag_373:\n        /* \"contracts/math/SafeMathInt.sol\":1242:1280  (b >= 0 && c >= a) || (b < 0 && c < a) */\n      dup1\n      tag_374\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1269:1270  0 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1265:1266  b */\n      dup4\n        /* \"contracts/math/SafeMathInt.sol\":1265:1270  b < 0 */\n      slt\n        /* \"contracts/math/SafeMathInt.sol\":1265:1279  b < 0 && c < a */\n      dup1\n      iszero\n      tag_375\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1278:1279  a */\n      dup4\n        /* \"contracts/math/SafeMathInt.sol\":1274:1275  c */\n      dup2\n        /* \"contracts/math/SafeMathInt.sol\":1274:1279  c < a */\n      slt\n        /* \"contracts/math/SafeMathInt.sol\":1265:1279  b < 0 && c < a */\n    tag_375:\n        /* \"contracts/math/SafeMathInt.sol\":1242:1280  (b >= 0 && c >= a) || (b < 0 && c < a) */\n    tag_374:\n        /* \"contracts/math/SafeMathInt.sol\":1234:1281  require((b >= 0 && c >= a) || (b < 0 && c < a)) */\n      tag_376\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_376:\n        /* \"contracts/math/SafeMathInt.sol\":1294:1295  c */\n      dup1\n        /* \"contracts/math/SafeMathInt.sol\":1287:1295  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1142:1300  function add(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMathInt.sol\":1304:1418  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n    tag_218:\n        /* \"contracts/math/SafeMathInt.sol\":1360:1367  uint256 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1388:1389  0 */\n      dup1\n        /* \"contracts/math/SafeMathInt.sol\":1383:1384  a */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1383:1389  a >= 0 */\n      slt\n      iszero\n        /* \"contracts/math/SafeMathInt.sol\":1375:1390  require(a >= 0) */\n      tag_378\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_378:\n        /* \"contracts/math/SafeMathInt.sol\":1411:1412  a */\n      dup2\n        /* \"contracts/math/SafeMathInt.sol\":1396:1413  return uint256(a) */\n      swap1\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1304:1418  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n    tag_226:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      tag_380\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7123:7130  account */\n      dup2\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7104  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7105:7109  role */\n      dup6\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7118  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n      tag_181\n      swap1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7191  _msgSender() */\n      tag_382\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7189  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7179:7191  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7170:7177  account */\n      dup2\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7164:7168  role */\n      dup4\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":8106:8460  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_240:\n        /* \"contracts/SIPilotToken.sol\":8208:8209  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8189:8210  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":8189:8196  account */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":8189:8210  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SIPilotToken.sol\":8181:8239  require(account != address(0), \"mint to the zero address\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6d696e7420746f20746865207a65726f20616464726573730000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_384:\n        /* \"contracts/SIPilotToken.sol\":8250:8290  _beforeTokenTransfer(address(0), amount) */\n      tag_385\n        /* \"contracts/SIPilotToken.sol\":8279:8280  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8283:8289  amount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":8250:8270  _beforeTokenTransfer */\n      tag_356\n        /* \"contracts/SIPilotToken.sol\":8250:8290  _beforeTokenTransfer(address(0), amount) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/SIPilotToken.sol\":8316:8340  _totalSupply.add(amount) */\n      tag_386\n        /* \"contracts/SIPilotToken.sol\":8333:8339  amount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":8316:8328  _totalSupply */\n      sload(0x06)\n        /* \"contracts/SIPilotToken.sol\":8316:8332  _totalSupply.add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":8316:8340  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_386:\n        /* \"contracts/SIPilotToken.sol\":8301:8313  _totalSupply */\n      0x06\n        /* \"contracts/SIPilotToken.sol\":8301:8340  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":8371:8401  _balances[account].add(amount) */\n      tag_387\n        /* \"contracts/SIPilotToken.sol\":8394:8400  amount */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":8371:8380  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":8371:8389  _balances[account] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8381:8388  account */\n      dup6\n        /* \"contracts/SIPilotToken.sol\":8371:8389  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SIPilotToken.sol\":8371:8393  _balances[account].add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":8371:8401  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_387:\n        /* \"contracts/SIPilotToken.sol\":8350:8359  _balances */\n      0x04\n        /* \"contracts/SIPilotToken.sol\":8350:8368  _balances[account] */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8360:8367  account */\n      dup5\n        /* \"contracts/SIPilotToken.sol\":8350:8368  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SIPilotToken.sol\":8350:8401  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SIPilotToken.sol\":8437:8444  account */\n      dup2\n        /* \"contracts/SIPilotToken.sol\":8416:8453  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":8433:8434  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":8416:8453  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SIPilotToken.sol\":8446:8452  amount */\n      dup4\n        /* \"contracts/SIPilotToken.sol\":8416:8453  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SIPilotToken.sol\":8106:8460  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n    tag_246:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      tag_389\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7317:7324  account */\n      dup2\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7295  _roles */\n      0x00\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7296:7300  role */\n      dup6\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7309  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7316  _roles[role].members.remove */\n      tag_390\n      swap1\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7373:7385  _msgSender() */\n      tag_392\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7373:7383  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7373:7385  _msgSender() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7364:7371  account */\n      dup2\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7358:7362  role */\n      dup4\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts//access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7751:7758  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      tag_396\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7805:7808  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7805:7815  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7817:7822  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7804  _at */\n      tag_397\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7793:7824  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7770:7826  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7064:7068  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_399\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7097:7100  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7097:7107  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7133:7138  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7117:7140  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7109:7141  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7096  _contains */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7080:7142  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7293:7300  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      tag_402\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7327:7330  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7327:7337  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7326  _length */\n      tag_403\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7312:7338  return _length(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_405:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      tag_407\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n      swap1\n      pop\n      jump(tag_406)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_406:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SIPilotToken.sol\":11693:11936  function _beforeTokenTransfer(address from, uint256 amount) internal virtual {... */\n    tag_356:\n        /* \"contracts/SIPilotToken.sol\":11800:11801  0 */\n      0x00\n        /* \"contracts/SIPilotToken.sol\":11784:11802  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SIPilotToken.sol\":11784:11788  from */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":11784:11802  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SIPilotToken.sol\":11780:11930  if (from == address(0)) { // When minting tokens, check the sale cap... */\n      iszero\n      tag_412\n      jumpi\n        /* \"contracts/SIPilotToken.sol\":11898:11902  _cap */\n      sload(0x0b)\n        /* \"contracts/SIPilotToken.sol\":11869:11894  totalSupply().add(amount) */\n      tag_413\n        /* \"contracts/SIPilotToken.sol\":11887:11893  amount */\n      dup3\n        /* \"contracts/SIPilotToken.sol\":11869:11882  totalSupply() */\n      tag_414\n        /* \"contracts/SIPilotToken.sol\":11869:11880  totalSupply */\n      tag_72\n        /* \"contracts/SIPilotToken.sol\":11869:11882  totalSupply() */\n      jump\t// in\n    tag_414:\n        /* \"contracts/SIPilotToken.sol\":11869:11886  totalSupply().add */\n      tag_251\n      swap1\n        /* \"contracts/SIPilotToken.sol\":11869:11894  totalSupply().add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"contracts/SIPilotToken.sol\":11869:11902  totalSupply().add(amount) <= _cap */\n      gt\n      iszero\n        /* \"contracts/SIPilotToken.sol\":11861:11919  require(totalSupply().add(amount) <= _cap, \"cap exceeded\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6361702065786365656465640000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_415:\n        /* \"contracts/SIPilotToken.sol\":11780:11930  if (from == address(0)) { // When minting tokens, check the sale cap... */\n    tag_412:\n        /* \"contracts/SIPilotToken.sol\":11693:11936  function _beforeTokenTransfer(address from, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMathInt.sol\":989:1138  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_363:\n        /* \"contracts/math/SafeMathInt.sol\":1045:1051  int256 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1073:1074  0 */\n      dup1\n        /* \"contracts/math/SafeMathInt.sol\":1068:1069  b */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1068:1074  b >= 0 */\n      slt\n      iszero\n        /* \"contracts/math/SafeMathInt.sol\":1068:1088  b >= 0 && a - b <= a */\n      dup1\n      iszero\n      tag_417\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1087:1088  a */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1082:1083  b */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1078:1079  a */\n      dup5\n        /* \"contracts/math/SafeMathInt.sol\":1078:1083  a - b */\n      sub\n        /* \"contracts/math/SafeMathInt.sol\":1078:1088  a - b <= a */\n      sgt\n      iszero\n        /* \"contracts/math/SafeMathInt.sol\":1068:1088  b >= 0 && a - b <= a */\n    tag_417:\n        /* \"contracts/math/SafeMathInt.sol\":1067:1113  (b >= 0 && a - b <= a) || (b < 0 && a - b > a) */\n      dup1\n      tag_418\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1098:1099  0 */\n      0x00\n        /* \"contracts/math/SafeMathInt.sol\":1094:1095  b */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1094:1099  b < 0 */\n      slt\n        /* \"contracts/math/SafeMathInt.sol\":1094:1112  b < 0 && a - b > a */\n      dup1\n      iszero\n      tag_419\n      jumpi\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":1111:1112  a */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1107:1108  b */\n      dup3\n        /* \"contracts/math/SafeMathInt.sol\":1103:1104  a */\n      dup5\n        /* \"contracts/math/SafeMathInt.sol\":1103:1108  a - b */\n      sub\n        /* \"contracts/math/SafeMathInt.sol\":1103:1112  a - b > a */\n      sgt\n        /* \"contracts/math/SafeMathInt.sol\":1094:1112  b < 0 && a - b > a */\n    tag_419:\n        /* \"contracts/math/SafeMathInt.sol\":1067:1113  (b >= 0 && a - b <= a) || (b < 0 && a - b > a) */\n    tag_418:\n        /* \"contracts/math/SafeMathInt.sol\":1059:1114  require((b >= 0 && a - b <= a) || (b < 0 && a - b > a)) */\n      tag_420\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_420:\n        /* \"contracts/math/SafeMathInt.sol\":1132:1133  b */\n      dup2\n        /* \"contracts/math/SafeMathInt.sol\":1128:1129  a */\n      dup4\n        /* \"contracts/math/SafeMathInt.sol\":1128:1133  a - b */\n      sub\n        /* \"contracts/math/SafeMathInt.sol\":1121:1133  return a - b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMathInt.sol\":989:1138  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6820:6824  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6851:6854  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6851:6861  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6887:6892  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6871:6894  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6863:6895  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6850  _remove */\n      tag_423\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6836:6896  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4519:4526  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4567:4572  index */\n      dup2\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4549  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4557  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4564  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4572  set._values.length > index */\n      gt\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4538:4611  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4631  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4639  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4640:4645  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4646  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_426\n      jumpi\n      invalid\n    tag_426:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4621:4646  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4069:4076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4098  set */\n      dup2\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4106  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4113  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4088:4113  return set._values.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2278:2282  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2394:2412  uint256 valueIndex */\n      dup1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2418  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2427  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2428:2433  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2394:2434  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2463:2464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2449:2459  valueIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2449:2464  valueIndex != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2806:2827  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2843:2844  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2830:2840  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2830:2844  valueIndex - 1 */\n      sub\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2806:2844  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2858:2875  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2899:2900  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2881  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2889  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2896  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2900  set._values.length - 1 */\n      sub\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2858:2900  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3140:3157  bytes32 lastvalue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3163  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3171  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3172:3181  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3182  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_432\n      jumpi\n      invalid\n    tag_432:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3140:3182  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3303:3312  lastvalue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3277  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3285  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3286:3299  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3300  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_434\n      jumpi\n      invalid\n    tag_434:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3312  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3420:3421  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3404:3417  toDeleteIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3404:3421  toDeleteIndex + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3381  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3390  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3391:3400  lastvalue */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3421  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3530  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3538  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3544  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_436\n      jumpi\n      invalid\n    tag_436:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3622  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3631  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3632:3637  value */\n      dup8\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3612:3638  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3660:3664  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3653:3664  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_430)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_431:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3702:3707  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3695:3707  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_430:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_90890889493b104bf9ebabde1448715c2fb678969066cdc6632dc010e5b34ff0 7472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa2646970667358221220b83d6e1d784d62d7c6e56122eb4631560a1ebc0037df6d5f51c9161777df491b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ad6d458402f60fd3bd25163575031acdce07538d600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c60146101000a81548160ff0219169083151502179055503480156200008157600080fd5b5060405162003ebd38038062003ebd833981810160405260c0811015620000a757600080fd5b8101908080516040519392919084640100000000821115620000c857600080fd5b83820191506020820185811115620000df57600080fd5b8251866001820283011164010000000082111715620000fd57600080fd5b8083526020830192505050908051906020019080838360005b838110156200013357808201518184015260208101905062000116565b50505050905090810190601f168015620001615780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200018557600080fd5b838201915060208201858111156200019c57600080fd5b8251866001820283011164010000000082111715620001ba57600080fd5b8083526020830192505050908051906020019080838360005b83811015620001f0578082015181840152602081019050620001d3565b50505050905090810190601f1680156200021e5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291908051906020019092919080519060200190929190505050620002917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620002856200058360201b60201c565b6200058b60201b60201c565b737a250d5630b4cf539739df2c5dacb4c659f2488d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560079080519060200190620002fe92919062000719565b5084600890805190602001906200031792919062000719565b5083600960006101000a81548160ff021916908360ff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082116200040d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f726174652069732030000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000831162000484576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f636170206973203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61646472657373206973206e756c6c000000000000000000000000000000000081525060200191505060405180910390fd5b82600b8190555081600a8190555080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050620007cf565b600033905090565b6200059d8282620005a160201b60201c565b5050565b620005cf816000808581526020019081526020016000206000016200064460201b620024dd1790919060201c565b156200064057620005e56200058360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000674836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200067c60201b60201c565b905092915050565b6000620006908383620006f660201b60201c565b620006eb578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620006f0565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200075157600085556200079d565b82601f106200076c57805160ff19168380011785556200079d565b828001600101855582156200079d579182015b828111156200079c5782518255916020019190600101906200077f565b5b509050620007ac9190620007b0565b5090565b5b80821115620007cb576000816000905550600101620007b1565b5090565b6136de80620007df6000396000f3fe6080604052600436106102125760003560e01c8063617785921161011857806395d89b41116100a0578063d41e98ff1161006f578063d41e98ff14610b5a578063d539139314610bbf578063d547741f14610bea578063dd62ed3e14610c45578063e2eab48314610cca57610219565b806395d89b41146109df578063a217fddf14610a6f578063a9059cbb14610a9a578063ca15c87314610b0b57610219565b8063828cedb7116100e7578063828cedb71461085257806383bebced146108935780638923d5a2146108be5780639010d07c146108ff57806391d148541461096e57610219565b8063617785921461075457806365b61b771461079557806369d89575146107d657806370a08231146107ed57610219565b80632c4e722e1161019b5780633610724e1161016a5780633610724e1461065957806336568abe14610687578063534844a2146106e25780635cfed870146106f957806360b179141461072657610219565b80632c4e722e1461057a5780632f2ff15d146105a5578063313ce56714610600578063355274ea1461062e57610219565b8063095ea7b3116101e2578063095ea7b31461039957806318160ddd1461040a57806323b872dd14610435578063248a9ca3146104c657806324b4395b1461051557610219565b8062cc8ad81461021e57806305ab421d14610283578063060cf4e8146102de57806306fdde031461030957610219565b3661021957005b600080fd5b34801561022a57600080fd5b5061026d6004803603602081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d05565b6040518082815260200191505060405180910390f35b34801561028f57600080fd5b506102dc600480360360408110156102a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4e565b005b3480156102ea57600080fd5b506102f3610f04565b6040518082815260200191505060405180910390f35b34801561031557600080fd5b5061031e610f0a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035e578082015181840152602081019050610343565b50505050905090810190601f16801561038b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a557600080fd5b506103f2600480360360408110156103bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fac565b60405180821515815260200191505060405180910390f35b34801561041657600080fd5b5061041f610fca565b6040518082815260200191505060405180910390f35b34801561044157600080fd5b506104ae6004803603606081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fd4565b60405180821515815260200191505060405180910390f35b3480156104d257600080fd5b506104ff600480360360208110156104e957600080fd5b81019080803590602001909291905050506110ad565b6040518082815260200191505060405180910390f35b34801561052157600080fd5b506105646004803603602081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110cc565b6040518082815260200191505060405180910390f35b34801561058657600080fd5b5061058f61116d565b6040518082815260200191505060405180910390f35b3480156105b157600080fd5b506105fe600480360360408110156105c857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611177565b005b34801561060c57600080fd5b50610615611200565b604051808260ff16815260200191505060405180910390f35b34801561063a57600080fd5b50610643611217565b6040518082815260200191505060405180910390f35b6106856004803603602081101561066f57600080fd5b8101908080359060200190929190505050611221565b005b34801561069357600080fd5b506106e0600480360360408110156106aa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113c9565b005b3480156106ee57600080fd5b506106f7611462565b005b34801561070557600080fd5b5061070e61169f565b60405180821515815260200191505060405180910390f35b6107526004803603602081101561073c57600080fd5b81019080803590602001909291905050506116b2565b005b34801561076057600080fd5b50610769611b85565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107a157600080fd5b506107aa611bab565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107e257600080fd5b506107eb611bd1565b005b3480156107f957600080fd5b5061083c6004803603602081101561081057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ee2565b6040518082815260200191505060405180910390f35b34801561085e57600080fd5b50610867611f2b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561089f57600080fd5b506108a8611f51565b6040518082815260200191505060405180910390f35b3480156108ca57600080fd5b506108d3611f57565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090b57600080fd5b506109426004803603604081101561092257600080fd5b810190808035906020019092919080359060200190929190505050611f7d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097a57600080fd5b506109c76004803603604081101561099157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fae565b60405180821515815260200191505060405180910390f35b3480156109eb57600080fd5b506109f4611fdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a7b57600080fd5b50610a84612081565b6040518082815260200191505060405180910390f35b348015610aa657600080fd5b50610af360048036036040811015610abd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612088565b60405180821515815260200191505060405180910390f35b348015610b1757600080fd5b50610b4460048036036020811015610b2e57600080fd5b81019080803590602001909291905050506120a6565b6040518082815260200191505060405180910390f35b348015610b6657600080fd5b50610ba960048036036020811015610b7d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cc565b6040518082815260200191505060405180910390f35b348015610bcb57600080fd5b50610bd461212f565b6040518082815260200191505060405180910390f35b348015610bf657600080fd5b50610c4360048036036040811015610c0d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612153565b005b348015610c5157600080fd5b50610cb460048036036040811015610c6857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121dc565b6040518082815260200191505060405180910390f35b348015610cd657600080fd5b50610d0360048036036020811015610ced57600080fd5b8101908080359060200190929190505050612263565b005b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f62757965722069732061207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000811415610e68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f776569416d6f756e74206973203000000000000000000000000000000000000081525060200191505060405180910390fd5b6000610e7f600a548361250d90919063ffffffff16565b9050610e8b8382612593565b8273ffffffffffffffffffffffffffffffffffffffff16610eaa612644565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a3505050565b600b5481565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa25780601f10610f7757610100808354040283529160200191610fa2565b820191906000526020600020905b815481529060010190602001808311610f8557829003601f168201915b5050505050905090565b6000610fc0610fb9612644565b848461264c565b6001905092915050565b6000600654905090565b6000610fe184848461287d565b6110a284610fed612644565b61109d8560405180606001604052806021815260200161363860219139600560008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611053612644565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ce49092919063ffffffff16565b61264c565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b600070010000000000000000000000000000000061115e611159600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461114b61114661113588611ee2565b600d5461250d90919063ffffffff16565b612d9e565b612dbb90919063ffffffff16565b612dfd565b8161116557fe5b049050919050565b6000600a54905090565b61119d60008084815260200190815260200160002060020154611198612644565b611fae565b6111f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806135d9602f913960400191505060405180910390fd5b6111fc8282612e14565b5050565b6000600960009054906101000a900460ff16905090565b6000600b54905090565b600034111561123857611233816116b2565b61132e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156112e957600080fd5b505af11580156112fd573d6000803e3d6000fd5b505050506040513d602081101561131357600080fd5b810190808051906020019092919050505061132d57600080fd5b5b6000611345600a548361250d90919063ffffffff16565b90506113513382612ea7565b3373ffffffffffffffffffffffffffffffffffffffff16611370612644565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a35050565b6113d1612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061367a602f913960400191505060405180910390fd5b61145e828261306f565b5050565b600061146d336120cc565b9050600081111561169c576114ca81600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050506040513d60208110156115ca57600080fd5b810190808051906020019092919050505061164d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f7472616e73666572206e6f74207375636365737366756c00000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fee4bbb2593064ac08210a82c9cb3cf8e7a839976e8ea380bf97b8387faa49a9b826040518082815260200191505060405180910390a25b50565b60006116a9610fca565b600b5411905090565b6000600f420190506000600267ffffffffffffffff811180156116d457600080fd5b506040519080825280602002602001820160405280156117035781602001602082028036833780820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d602081101561179857600080fd5b8101908080519060200190929190505050816000815181106117b657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061182057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb3bdb4134868530886040518663ffffffff1660e01b815260040180858152602001806020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156119195780820151818401526020810190506118fe565b50505050905001955050505050506000604051808303818588803b15801561194057600080fd5b505af1158015611954573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250602081101561197f57600080fd5b810190808051604051939291908464010000000082111561199f57600080fd5b838201915060208201858111156119b557600080fd5b82518660208202830111640100000000821117156119d257600080fd5b8083526020830192505050908051906020019060200280838360005b83811015611a095780820151818401526020810190506119ee565b505050509050016040525050509050600081600081518110611a2757fe5b602002602001015111611aa2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f45786368616e6765206661696c65642e0000000000000000000000000000000081525060200191505060405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405180600001905060006040518083038185875af1925050503d8060008114611b02576040519150601f19603f3d011682016040523d82523d6000602084013e611b07565b606091505b5050905080611b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f726566756e64206661696c65640000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60001515611bdd61169f565b151514611c52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f66756e6473206e6f74207261697365640000000000000000000000000000000081525060200191505060405180910390fd5b60001515600c60149054906101000a900460ff16151514611cdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f66756e64696e6720616c72656164792072656c6561736564000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d53600a54600b5461250d90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611da657600080fd5b505af1158015611dba573d6000803e3d6000fd5b505050506040513d6020811015611dd057600080fd5b8101908080519060200190929190505050611e53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f73656e64696e672055534443206661696c65640000000000000000000000000081525060200191505060405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a600b546040518082815260200191505060405180910390a26001600c60146101000a81548160ff021916908315150217905550565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611fa68260008086815260200190815260200160002060000161318a90919063ffffffff16565b905092915050565b6000611fd7826000808681526020019081526020016000206000016131a490919063ffffffff16565b905092915050565b606060088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120775780601f1061204c57610100808354040283529160200191612077565b820191906000526020600020905b81548152906001019060200180831161205a57829003601f168201915b5050505050905090565b6000801b81565b600061209c612095612644565b848461287d565b6001905092915050565b60006120c56000808481526020019081526020016000206000016131d4565b9050919050565b6000612128600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461211a846110cc565b6131e990919063ffffffff16565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61217960008084815260200190815260200160002060020154612174612644565b611fae565b6121ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806136086030913960400191505060405180910390fd5b6121d8828261306f565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061226d610fca565b116122e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f746f74616c20737570706c79000000000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561239157600080fd5b505af11580156123a5573d6000803e3d6000fd5b505050506040513d60208110156123bb57600080fd5b810190808051906020019092919050505061243e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f55534443205472616e73666572206e6f7420706f737369626c6500000000000081525060200191505060405180910390fd5b612486612449610fca565b61246d7001000000000000000000000000000000008461250d90919063ffffffff16565b8161247457fe5b04600d5461310290919063ffffffff16565b600d819055503373ffffffffffffffffffffffffffffffffffffffff167f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770826040518082815260200191505060405180910390a250565b6000612505836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61326c565b905092915050565b600080831415612520576000905061258d565b600082840290508284828161253157fe5b0414612588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136596021913960400191505060405180910390fd5b809150505b92915050565b6125c47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66125bf612644565b611fae565b612636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6d7573742068617665206d696e74657220726f6c6520746f206d696e7400000081525060200191505060405180910390fd5b6126408282612ea7565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156126ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f617070726f76652066726f6d20746865207a65726f206164647265737300000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f617070726f766520746f20746865207a65726f2061646472657373000000000081525060200191505060405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e736665722066726f6d20746865207a65726f2061646472657373000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b6129cd83826132dc565b612a56816040518060400160405280601f81526020017f7472616e7366657220616d6f756e7420657863656564732062616c616e636500815250600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ce49092919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612aeb81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36000612bb2612bad83600d5461250d90919063ffffffff16565b612d9e565b9050612c0681600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbb90919063ffffffff16565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c9b81600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a790919063ffffffff16565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000838311158290612d91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d56578082015181840152602081019050612d3b565b50505050905090810190601f168015612d835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6000808290506000811215612db257600080fd5b80915050919050565b600080828401905060008312158015612dd45750838112155b80612dea5750600083128015612de957508381125b5b612df357600080fd5b8091505092915050565b600080821215612e0c57600080fd5b819050919050565b612e3b816000808581526020019081526020016000206000016124dd90919063ffffffff16565b15612ea357612e48612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6d696e7420746f20746865207a65726f2061646472657373000000000000000081525060200191505060405180910390fd5b612f556000826132dc565b612f6a8160065461310290919063ffffffff16565b600681905550612fc281600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b613096816000808581526020019081526020016000206000016133e790919063ffffffff16565b156130fe576130a3612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015613180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006131998360000183613417565b60001c905092915050565b60006131cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61349a565b905092915050565b60006131e2826000016134bd565b9050919050565b600082821115613261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000613278838361349a565b6132d15782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506132d6565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133a357600b5461332e82613320610fca565b61310290919063ffffffff16565b11156133a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f636170206578636565646564000000000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b60008082121580156133bb57508282840313155b806133d357506000821280156133d2575082828403135b5b6133dc57600080fd5b818303905092915050565b600061340f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134ce565b905092915050565b600081836000018054905011613478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135b76022913960400191505060405180910390fd5b82600001828154811061348757fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146135aa576000600182039050600060018660000180549050039050600086600001828154811061351957fe5b906000526020600020015490508087600001848154811061353657fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061356e57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506135b0565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b657472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220b83d6e1d784d62d7c6e56122eb4631560a1ebc0037df6d5f51c9161777df491b64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAD6D458402F60FD3BD25163575031ACDCE07538D PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3EBD CODESIZE SUB DUP1 PUSH3 0x3EBD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH3 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x133 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x116 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x21E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH3 0x291 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x285 PUSH3 0x583 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x58B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2FE SWAP3 SWAP2 SWAP1 PUSH3 0x719 JUMP JUMPDEST POP DUP5 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x317 SWAP3 SWAP2 SWAP1 PUSH3 0x719 JUMP JUMPDEST POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT PUSH3 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7261746520697320300000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH3 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6361702069732030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646472657373206973206E756C6C0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x7CF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x59D DUP3 DUP3 PUSH3 0x5A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x5CF DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH3 0x644 PUSH1 0x20 SHL PUSH3 0x24DD OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x640 JUMPI PUSH3 0x5E5 PUSH3 0x583 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x674 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x67C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x690 DUP4 DUP4 PUSH3 0x6F6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6EB JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x6F0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x751 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x79D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x76C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x79D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x79D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x79C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x77F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x7AC SWAP2 SWAP1 PUSH3 0x7B0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x7CB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x7B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x36DE DUP1 PUSH3 0x7DF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x212 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61778592 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD41E98FF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD41E98FF EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xBBF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xBEA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xE2EAB483 EQ PUSH2 0xCCA JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA9A JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xB0B JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x828CEDB7 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x828CEDB7 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0x8923D5A2 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x8FF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x96E JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x61778592 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x65B61B77 EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0x69D89575 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x7ED JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x534844A2 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0x5CFED870 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0x60B17914 EQ PUSH2 0x726 JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x62E JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x24B4395B EQ PUSH2 0x515 JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH3 0xCC8AD8 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5AB421D EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x60CF4E8 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x309 JUMPI PUSH2 0x219 JUMP JUMPDEST CALLDATASIZE PUSH2 0x219 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x343 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x38B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58F PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x615 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x643 PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1221 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F7 PUSH2 0x1462 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70E PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x769 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AA PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EB PUSH2 0x1BD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A8 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D3 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x942 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB44 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD4 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC43 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2153 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD03 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2263 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x62757965722069732061207A65726F2061646472657373000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x776569416D6F756E742069732030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH1 0xA SLOAD DUP4 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE8B DUP4 DUP3 PUSH2 0x2593 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEAA PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC0 PUSH2 0xFB9 PUSH2 0x2644 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE1 DUP5 DUP5 DUP5 PUSH2 0x287D JUMP JUMPDEST PUSH2 0x10A2 DUP5 PUSH2 0xFED PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x109D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3638 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x5 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1053 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CE4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x264C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH17 0x100000000000000000000000000000000 PUSH2 0x115E PUSH2 0x1159 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x114B PUSH2 0x1146 PUSH2 0x1135 DUP9 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D9E JUMP JUMPDEST PUSH2 0x2DBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DFD JUMP JUMPDEST DUP2 PUSH2 0x1165 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x119D PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1198 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35D9 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FC DUP3 DUP3 PUSH2 0x2E14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1233 DUP2 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1345 PUSH1 0xA SLOAD DUP4 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1351 CALLER DUP3 PUSH2 0x2EA7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1370 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x367A PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145E DUP3 DUP3 PUSH2 0x306F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146D CALLER PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x169C JUMPI PUSH2 0x14CA DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206E6F74207375636365737366756C000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEE4BBB2593064AC08210A82C9CB3CF8E7A839976E8EA380BF97B8387FAA49A9B DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A9 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0xB SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF TIMESTAMP ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1703 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1820 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB3BDB41 CALLVALUE DUP7 DUP6 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1919 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18FE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A27 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x1AA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45786368616E6765206661696C65642E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726566756E64206661696C656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x1BDD PUSH2 0x169F JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x66756E6473206E6F742072616973656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x66756E64696E6720616C72656164792072656C65617365640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D53 PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73656E64696E672055534443206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x221C08A06B07A64803B3787861A3F276212FCCCB51C2E6234077A9B8CB13047A PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA6 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x318A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD7 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x31A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2077 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x204C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2077 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x205A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209C PUSH2 0x2095 PUSH2 0x2644 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x287D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C5 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x31D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2128 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x211A DUP5 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x31E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2179 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2174 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x21CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3608 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21D8 DUP3 DUP3 PUSH2 0x306F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH2 0xFCA JUMP JUMPDEST GT PUSH2 0x22E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F74616C20737570706C790000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x243E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x55534443205472616E73666572206E6F7420706F737369626C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2486 PUSH2 0x2449 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x246D PUSH17 0x100000000000000000000000000000000 DUP5 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST DIV PUSH1 0xD SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x326C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2520 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x258D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2531 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3659 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25C4 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x25BF PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x2636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2640 DUP3 DUP3 PUSH2 0x2EA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D20746865207A65726F2061646472657373000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20746865207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20746865207A65726F20616464726573730000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F20746865207A65726F206164647265737300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29CD DUP4 DUP3 PUSH2 0x32DC JUMP JUMPDEST PUSH2 0x2A56 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657220616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CE4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2AEB DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x2BB2 PUSH2 0x2BAD DUP4 PUSH1 0xD SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x2C06 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2DBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2C9B DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x33A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D56 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D3B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D83 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x2DD4 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x2DEA JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x2DE9 JUMPI POP DUP4 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0x2DF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x2E0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E3B DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x24DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EA3 JUMPI PUSH2 0x2E48 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D696E7420746F20746865207A65726F20616464726573730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F55 PUSH1 0x0 DUP3 PUSH2 0x32DC JUMP JUMPDEST PUSH2 0x2F6A DUP2 PUSH1 0x6 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x2FC2 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3096 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x33E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x30FE JUMPI PUSH2 0x30A3 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3199 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x349A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E2 DUP3 PUSH1 0x0 ADD PUSH2 0x34BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3278 DUP4 DUP4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x32D1 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x32D6 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x33A3 JUMPI PUSH1 0xB SLOAD PUSH2 0x332E DUP3 PUSH2 0x3320 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x33A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6361702065786365656465640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x33BB JUMPI POP DUP3 DUP3 DUP5 SUB SGT ISZERO JUMPDEST DUP1 PUSH2 0x33D3 JUMPI POP PUSH1 0x0 DUP3 SLT DUP1 ISZERO PUSH2 0x33D2 JUMPI POP DUP3 DUP3 DUP5 SUB SGT JUMPDEST JUMPDEST PUSH2 0x33DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x34CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x3478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3487 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x35AA JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3519 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3536 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x356E JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x35B0 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x7472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F77416363657373436F6E74726F6C3A20 PUSH4 0x616E206F PUSH15 0x6C792072656E6F756E636520726F6C PUSH6 0x7320666F7220 PUSH20 0x656C66A2646970667358221220B83D6E1D784D62 0xD7 0xC6 0xE5 PUSH2 0x22EB CHAINID BALANCE JUMP EXP 0x1E 0xBC STOP CALLDATACOPY 0xDF PUSH14 0x5F51C9161777DF491B64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "748:13777:8:-:0;;;1151:42;1123:70;;;;;;;;;;;;;;;;;;;;1586:5;1563:28;;;;;;;;;;;;;;;;;;;;3198:598;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:37;948:24;3357:12;:10;;;:12;;:::i;:::-;3333:10;;;:37;;:::i;:::-;1029:42;3380:14;;:59;;;;;;;;;;;;;;;;;;3457:5;3449;:13;;;;;;;;;;;;:::i;:::-;;3482:7;3472;:17;;;;;;;;;;;;:::i;:::-;;3511:9;3499;;:21;;;;;;;;;;;;;;;;;;3553:10;;;;;;;;;;;3530:13;;:34;;;;;;;;;;;;;;;;;;3590:1;3582:5;:9;3574:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3630:1;3623:4;:8;3615:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:1;3662:26;;:12;:26;;;;3654:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3725:4;3718;:11;;;;3747:5;3739;:13;;;;3777:12;3762;;:27;;;;;;;;;;;;;;;;;;3198:598;;;;;;748:13777;;598:104:6;651:15;685:10;678:17;;598:104;:::o;6588:110:0:-;6666:25;6677:4;6683:7;6666:10;;;:25;;:::i;:::-;6588:110;;:::o;7025:184::-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;;;:12;;:::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;6429:150:7:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;;;:50;;:::i;:::-;6515:57;;6429:150;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;;;:21;;:::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;748:13777:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102125760003560e01c8063617785921161011857806395d89b41116100a0578063d41e98ff1161006f578063d41e98ff14610b5a578063d539139314610bbf578063d547741f14610bea578063dd62ed3e14610c45578063e2eab48314610cca57610219565b806395d89b41146109df578063a217fddf14610a6f578063a9059cbb14610a9a578063ca15c87314610b0b57610219565b8063828cedb7116100e7578063828cedb71461085257806383bebced146108935780638923d5a2146108be5780639010d07c146108ff57806391d148541461096e57610219565b8063617785921461075457806365b61b771461079557806369d89575146107d657806370a08231146107ed57610219565b80632c4e722e1161019b5780633610724e1161016a5780633610724e1461065957806336568abe14610687578063534844a2146106e25780635cfed870146106f957806360b179141461072657610219565b80632c4e722e1461057a5780632f2ff15d146105a5578063313ce56714610600578063355274ea1461062e57610219565b8063095ea7b3116101e2578063095ea7b31461039957806318160ddd1461040a57806323b872dd14610435578063248a9ca3146104c657806324b4395b1461051557610219565b8062cc8ad81461021e57806305ab421d14610283578063060cf4e8146102de57806306fdde031461030957610219565b3661021957005b600080fd5b34801561022a57600080fd5b5061026d6004803603602081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d05565b6040518082815260200191505060405180910390f35b34801561028f57600080fd5b506102dc600480360360408110156102a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4e565b005b3480156102ea57600080fd5b506102f3610f04565b6040518082815260200191505060405180910390f35b34801561031557600080fd5b5061031e610f0a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035e578082015181840152602081019050610343565b50505050905090810190601f16801561038b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a557600080fd5b506103f2600480360360408110156103bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fac565b60405180821515815260200191505060405180910390f35b34801561041657600080fd5b5061041f610fca565b6040518082815260200191505060405180910390f35b34801561044157600080fd5b506104ae6004803603606081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fd4565b60405180821515815260200191505060405180910390f35b3480156104d257600080fd5b506104ff600480360360208110156104e957600080fd5b81019080803590602001909291905050506110ad565b6040518082815260200191505060405180910390f35b34801561052157600080fd5b506105646004803603602081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110cc565b6040518082815260200191505060405180910390f35b34801561058657600080fd5b5061058f61116d565b6040518082815260200191505060405180910390f35b3480156105b157600080fd5b506105fe600480360360408110156105c857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611177565b005b34801561060c57600080fd5b50610615611200565b604051808260ff16815260200191505060405180910390f35b34801561063a57600080fd5b50610643611217565b6040518082815260200191505060405180910390f35b6106856004803603602081101561066f57600080fd5b8101908080359060200190929190505050611221565b005b34801561069357600080fd5b506106e0600480360360408110156106aa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113c9565b005b3480156106ee57600080fd5b506106f7611462565b005b34801561070557600080fd5b5061070e61169f565b60405180821515815260200191505060405180910390f35b6107526004803603602081101561073c57600080fd5b81019080803590602001909291905050506116b2565b005b34801561076057600080fd5b50610769611b85565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107a157600080fd5b506107aa611bab565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107e257600080fd5b506107eb611bd1565b005b3480156107f957600080fd5b5061083c6004803603602081101561081057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ee2565b6040518082815260200191505060405180910390f35b34801561085e57600080fd5b50610867611f2b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561089f57600080fd5b506108a8611f51565b6040518082815260200191505060405180910390f35b3480156108ca57600080fd5b506108d3611f57565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090b57600080fd5b506109426004803603604081101561092257600080fd5b810190808035906020019092919080359060200190929190505050611f7d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097a57600080fd5b506109c76004803603604081101561099157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fae565b60405180821515815260200191505060405180910390f35b3480156109eb57600080fd5b506109f4611fdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a7b57600080fd5b50610a84612081565b6040518082815260200191505060405180910390f35b348015610aa657600080fd5b50610af360048036036040811015610abd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612088565b60405180821515815260200191505060405180910390f35b348015610b1757600080fd5b50610b4460048036036020811015610b2e57600080fd5b81019080803590602001909291905050506120a6565b6040518082815260200191505060405180910390f35b348015610b6657600080fd5b50610ba960048036036020811015610b7d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cc565b6040518082815260200191505060405180910390f35b348015610bcb57600080fd5b50610bd461212f565b6040518082815260200191505060405180910390f35b348015610bf657600080fd5b50610c4360048036036040811015610c0d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612153565b005b348015610c5157600080fd5b50610cb460048036036040811015610c6857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121dc565b6040518082815260200191505060405180910390f35b348015610cd657600080fd5b50610d0360048036036020811015610ced57600080fd5b8101908080359060200190929190505050612263565b005b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f62757965722069732061207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000811415610e68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f776569416d6f756e74206973203000000000000000000000000000000000000081525060200191505060405180910390fd5b6000610e7f600a548361250d90919063ffffffff16565b9050610e8b8382612593565b8273ffffffffffffffffffffffffffffffffffffffff16610eaa612644565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a3505050565b600b5481565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa25780601f10610f7757610100808354040283529160200191610fa2565b820191906000526020600020905b815481529060010190602001808311610f8557829003601f168201915b5050505050905090565b6000610fc0610fb9612644565b848461264c565b6001905092915050565b6000600654905090565b6000610fe184848461287d565b6110a284610fed612644565b61109d8560405180606001604052806021815260200161363860219139600560008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611053612644565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ce49092919063ffffffff16565b61264c565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b600070010000000000000000000000000000000061115e611159600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461114b61114661113588611ee2565b600d5461250d90919063ffffffff16565b612d9e565b612dbb90919063ffffffff16565b612dfd565b8161116557fe5b049050919050565b6000600a54905090565b61119d60008084815260200190815260200160002060020154611198612644565b611fae565b6111f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806135d9602f913960400191505060405180910390fd5b6111fc8282612e14565b5050565b6000600960009054906101000a900460ff16905090565b6000600b54905090565b600034111561123857611233816116b2565b61132e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156112e957600080fd5b505af11580156112fd573d6000803e3d6000fd5b505050506040513d602081101561131357600080fd5b810190808051906020019092919050505061132d57600080fd5b5b6000611345600a548361250d90919063ffffffff16565b90506113513382612ea7565b3373ffffffffffffffffffffffffffffffffffffffff16611370612644565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a35050565b6113d1612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061367a602f913960400191505060405180910390fd5b61145e828261306f565b5050565b600061146d336120cc565b9050600081111561169c576114ca81600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050506040513d60208110156115ca57600080fd5b810190808051906020019092919050505061164d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f7472616e73666572206e6f74207375636365737366756c00000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fee4bbb2593064ac08210a82c9cb3cf8e7a839976e8ea380bf97b8387faa49a9b826040518082815260200191505060405180910390a25b50565b60006116a9610fca565b600b5411905090565b6000600f420190506000600267ffffffffffffffff811180156116d457600080fd5b506040519080825280602002602001820160405280156117035781602001602082028036833780820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d602081101561179857600080fd5b8101908080519060200190929190505050816000815181106117b657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061182057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb3bdb4134868530886040518663ffffffff1660e01b815260040180858152602001806020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156119195780820151818401526020810190506118fe565b50505050905001955050505050506000604051808303818588803b15801561194057600080fd5b505af1158015611954573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250602081101561197f57600080fd5b810190808051604051939291908464010000000082111561199f57600080fd5b838201915060208201858111156119b557600080fd5b82518660208202830111640100000000821117156119d257600080fd5b8083526020830192505050908051906020019060200280838360005b83811015611a095780820151818401526020810190506119ee565b505050509050016040525050509050600081600081518110611a2757fe5b602002602001015111611aa2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f45786368616e6765206661696c65642e0000000000000000000000000000000081525060200191505060405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405180600001905060006040518083038185875af1925050503d8060008114611b02576040519150601f19603f3d011682016040523d82523d6000602084013e611b07565b606091505b5050905080611b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f726566756e64206661696c65640000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60001515611bdd61169f565b151514611c52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f66756e6473206e6f74207261697365640000000000000000000000000000000081525060200191505060405180910390fd5b60001515600c60149054906101000a900460ff16151514611cdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f66756e64696e6720616c72656164792072656c6561736564000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d53600a54600b5461250d90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611da657600080fd5b505af1158015611dba573d6000803e3d6000fd5b505050506040513d6020811015611dd057600080fd5b8101908080519060200190929190505050611e53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f73656e64696e672055534443206661696c65640000000000000000000000000081525060200191505060405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a600b546040518082815260200191505060405180910390a26001600c60146101000a81548160ff021916908315150217905550565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611fa68260008086815260200190815260200160002060000161318a90919063ffffffff16565b905092915050565b6000611fd7826000808681526020019081526020016000206000016131a490919063ffffffff16565b905092915050565b606060088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120775780601f1061204c57610100808354040283529160200191612077565b820191906000526020600020905b81548152906001019060200180831161205a57829003601f168201915b5050505050905090565b6000801b81565b600061209c612095612644565b848461287d565b6001905092915050565b60006120c56000808481526020019081526020016000206000016131d4565b9050919050565b6000612128600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461211a846110cc565b6131e990919063ffffffff16565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61217960008084815260200190815260200160002060020154612174612644565b611fae565b6121ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806136086030913960400191505060405180910390fd5b6121d8828261306f565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061226d610fca565b116122e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f746f74616c20737570706c79000000000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561239157600080fd5b505af11580156123a5573d6000803e3d6000fd5b505050506040513d60208110156123bb57600080fd5b810190808051906020019092919050505061243e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f55534443205472616e73666572206e6f7420706f737369626c6500000000000081525060200191505060405180910390fd5b612486612449610fca565b61246d7001000000000000000000000000000000008461250d90919063ffffffff16565b8161247457fe5b04600d5461310290919063ffffffff16565b600d819055503373ffffffffffffffffffffffffffffffffffffffff167f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770826040518082815260200191505060405180910390a250565b6000612505836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61326c565b905092915050565b600080831415612520576000905061258d565b600082840290508284828161253157fe5b0414612588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136596021913960400191505060405180910390fd5b809150505b92915050565b6125c47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66125bf612644565b611fae565b612636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6d7573742068617665206d696e74657220726f6c6520746f206d696e7400000081525060200191505060405180910390fd5b6126408282612ea7565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156126ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f617070726f76652066726f6d20746865207a65726f206164647265737300000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f617070726f766520746f20746865207a65726f2061646472657373000000000081525060200191505060405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e736665722066726f6d20746865207a65726f2061646472657373000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b6129cd83826132dc565b612a56816040518060400160405280601f81526020017f7472616e7366657220616d6f756e7420657863656564732062616c616e636500815250600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ce49092919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612aeb81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36000612bb2612bad83600d5461250d90919063ffffffff16565b612d9e565b9050612c0681600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbb90919063ffffffff16565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c9b81600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a790919063ffffffff16565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000838311158290612d91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d56578082015181840152602081019050612d3b565b50505050905090810190601f168015612d835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6000808290506000811215612db257600080fd5b80915050919050565b600080828401905060008312158015612dd45750838112155b80612dea5750600083128015612de957508381125b5b612df357600080fd5b8091505092915050565b600080821215612e0c57600080fd5b819050919050565b612e3b816000808581526020019081526020016000206000016124dd90919063ffffffff16565b15612ea357612e48612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6d696e7420746f20746865207a65726f2061646472657373000000000000000081525060200191505060405180910390fd5b612f556000826132dc565b612f6a8160065461310290919063ffffffff16565b600681905550612fc281600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b613096816000808581526020019081526020016000206000016133e790919063ffffffff16565b156130fe576130a3612644565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015613180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006131998360000183613417565b60001c905092915050565b60006131cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61349a565b905092915050565b60006131e2826000016134bd565b9050919050565b600082821115613261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000613278838361349a565b6132d15782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506132d6565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133a357600b5461332e82613320610fca565b61310290919063ffffffff16565b11156133a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f636170206578636565646564000000000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b60008082121580156133bb57508282840313155b806133d357506000821280156133d2575082828403135b5b6133dc57600080fd5b818303905092915050565b600061340f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134ce565b905092915050565b600081836000018054905011613478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135b76022913960400191505060405180910390fd5b82600001828154811061348757fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146135aa576000600182039050600060018660000180549050039050600086600001828154811061351957fe5b906000526020600020015490508087600001848154811061353657fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061356e57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506135b0565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b657472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220b83d6e1d784d62d7c6e56122eb4631560a1ebc0037df6d5f51c9161777df491b64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x212 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61778592 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD41E98FF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD41E98FF EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xBBF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xBEA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xE2EAB483 EQ PUSH2 0xCCA JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA9A JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xB0B JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x828CEDB7 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x828CEDB7 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0x8923D5A2 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x8FF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x96E JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x61778592 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x65B61B77 EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0x69D89575 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x7ED JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x534844A2 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0x5CFED870 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0x60B17914 EQ PUSH2 0x726 JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x62E JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x24B4395B EQ PUSH2 0x515 JUMPI PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH3 0xCC8AD8 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5AB421D EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x60CF4E8 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x309 JUMPI PUSH2 0x219 JUMP JUMPDEST CALLDATASIZE PUSH2 0x219 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x343 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x38B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58F PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x615 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x643 PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1221 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F7 PUSH2 0x1462 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70E PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x769 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AA PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EB PUSH2 0x1BD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A8 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D3 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x942 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB44 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD4 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC43 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2153 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD03 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2263 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x62757965722069732061207A65726F2061646472657373000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x776569416D6F756E742069732030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH1 0xA SLOAD DUP4 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE8B DUP4 DUP3 PUSH2 0x2593 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEAA PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC0 PUSH2 0xFB9 PUSH2 0x2644 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE1 DUP5 DUP5 DUP5 PUSH2 0x287D JUMP JUMPDEST PUSH2 0x10A2 DUP5 PUSH2 0xFED PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x109D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3638 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x5 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1053 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CE4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x264C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH17 0x100000000000000000000000000000000 PUSH2 0x115E PUSH2 0x1159 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x114B PUSH2 0x1146 PUSH2 0x1135 DUP9 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D9E JUMP JUMPDEST PUSH2 0x2DBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DFD JUMP JUMPDEST DUP2 PUSH2 0x1165 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x119D PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1198 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35D9 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FC DUP3 DUP3 PUSH2 0x2E14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1233 DUP2 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1345 PUSH1 0xA SLOAD DUP4 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1351 CALLER DUP3 PUSH2 0x2EA7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1370 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x367A PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145E DUP3 DUP3 PUSH2 0x306F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146D CALLER PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x169C JUMPI PUSH2 0x14CA DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206E6F74207375636365737366756C000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEE4BBB2593064AC08210A82C9CB3CF8E7A839976E8EA380BF97B8387FAA49A9B DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A9 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0xB SLOAD GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF TIMESTAMP ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1703 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1820 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB3BDB41 CALLVALUE DUP7 DUP6 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1919 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18FE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A27 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x1AA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45786368616E6765206661696C65642E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726566756E64206661696C656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x1BDD PUSH2 0x169F JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x66756E6473206E6F742072616973656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x66756E64696E6720616C72656164792072656C65617365640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D53 PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73656E64696E672055534443206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x221C08A06B07A64803B3787861A3F276212FCCCB51C2E6234077A9B8CB13047A PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA6 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x318A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD7 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x31A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2077 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x204C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2077 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x205A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209C PUSH2 0x2095 PUSH2 0x2644 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x287D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C5 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x31D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2128 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x211A DUP5 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x31E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2179 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2174 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x21CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3608 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21D8 DUP3 DUP3 PUSH2 0x306F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH2 0xFCA JUMP JUMPDEST GT PUSH2 0x22E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F74616C20737570706C790000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x243E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x55534443205472616E73666572206E6F7420706F737369626C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2486 PUSH2 0x2449 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x246D PUSH17 0x100000000000000000000000000000000 DUP5 PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST DIV PUSH1 0xD SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x326C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2520 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x258D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2531 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3659 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25C4 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x25BF PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x2636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2640 DUP3 DUP3 PUSH2 0x2EA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D20746865207A65726F2061646472657373000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20746865207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20746865207A65726F20616464726573730000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F20746865207A65726F206164647265737300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29CD DUP4 DUP3 PUSH2 0x32DC JUMP JUMPDEST PUSH2 0x2A56 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657220616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CE4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2AEB DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x2BB2 PUSH2 0x2BAD DUP4 PUSH1 0xD SLOAD PUSH2 0x250D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x2C06 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2DBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2C9B DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x33A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D56 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D3B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D83 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x2DD4 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x2DEA JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x2DE9 JUMPI POP DUP4 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0x2DF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x2E0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E3B DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x24DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EA3 JUMPI PUSH2 0x2E48 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D696E7420746F20746865207A65726F20616464726573730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F55 PUSH1 0x0 DUP3 PUSH2 0x32DC JUMP JUMPDEST PUSH2 0x2F6A DUP2 PUSH1 0x6 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x2FC2 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3096 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x33E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x30FE JUMPI PUSH2 0x30A3 PUSH2 0x2644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3199 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x349A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E2 DUP3 PUSH1 0x0 ADD PUSH2 0x34BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3278 DUP4 DUP4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x32D1 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x32D6 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x33A3 JUMPI PUSH1 0xB SLOAD PUSH2 0x332E DUP3 PUSH2 0x3320 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x3102 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x33A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6361702065786365656465640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x33BB JUMPI POP DUP3 DUP3 DUP5 SUB SGT ISZERO JUMPDEST DUP1 PUSH2 0x33D3 JUMPI POP PUSH1 0x0 DUP3 SLT DUP1 ISZERO PUSH2 0x33D2 JUMPI POP DUP3 DUP3 DUP5 SUB SGT JUMPDEST JUMPDEST PUSH2 0x33DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x34CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x3478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3487 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x35AA JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3519 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3536 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x356E JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x35B0 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x7472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F77416363657373436F6E74726F6C3A20 PUSH4 0x616E206F PUSH15 0x6C792072656E6F756E636520726F6C PUSH6 0x7320666F7220 PUSH20 0x656C66A2646970667358221220B83D6E1D784D62 0xD7 0xC6 0xE5 PUSH2 0x22EB CHAINID BALANCE JUMP EXP 0x1E 0xBC STOP CALLDATACOPY 0xDF PUSH14 0x5F51C9161777DF491B64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "748:13777:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13962:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10746:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1505:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3861:81;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6364:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4820:98;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6938:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4282:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14285:237:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4451:75;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4644:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4167:81:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4314:73;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9350:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5818:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12983:411:8;;;;;;;;;;;;;:::i;:::-;;4629:97;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9885:580;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1199:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1077:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12009:348;;;;;;;;;;;;;:::i;:::-;;5081:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1530:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1479:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1123:70;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3965:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2950:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4010:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5420:172:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3255:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13595:154:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;910:62;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5101:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5948:149:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12532:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13962:120;14025:7;14051:16;:24;14068:6;14051:24;;;;;;;;;;;;;;;;14044:31;;13962:120;;;:::o;10746:328::-;10839:1;10822:19;;:5;:19;;;;10814:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10897:1;10887:6;:11;;10879:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10936:14;10953:17;10964:5;;10953:6;:10;;:17;;;;:::i;:::-;10936:34;;10981:19;10986:5;10993:6;10981:4;:19::i;:::-;11045:5;11015:52;;11031:12;:10;:12::i;:::-;11015:52;;;11052:6;11060;11015:52;;;;;;;;;;;;;;;;;;;;;;;;10746:328;;;:::o;1505:19::-;;;;:::o;3861:81::-;3898:13;3930:5;3923:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3861:81;:::o;6364:166::-;6447:4;6463:39;6472:12;:10;:12::i;:::-;6486:7;6495:6;6463:8;:39::i;:::-;6519:4;6512:11;;6364:166;;;;:::o;4820:98::-;4873:7;4899:12;;4892:19;;4820:98;:::o;6938:310::-;7044:4;7060:36;7070:6;7078:9;7089:6;7060:9;:36::i;:::-;7106:114;7115:6;7123:12;:10;:12::i;:::-;7137:82;7175:6;7137:82;;;;;;;;;;;;;;;;;:11;:19;7149:6;7137:19;;;;;;;;;;;;;;;:33;7157:12;:10;:12::i;:::-;7137:33;;;;;;;;;;;;;;;;:37;;:82;;;;;:::i;:::-;7106:8;:114::i;:::-;7237:4;7230:11;;6938:310;;;;;:::o;4282:112:0:-;4339:7;4365:6;:12;4372:4;4365:12;;;;;;;;;;;:22;;;4358:29;;4282:112;;;:::o;14285:237:8:-;14351:7;1635:6;14377:126;:110;14452:26;:34;14479:6;14452:34;;;;;;;;;;;;;;;;14377:61;:46;14405:17;14415:6;14405:9;:17::i;:::-;14377:23;;:27;;:46;;;;:::i;:::-;:59;:61::i;:::-;:74;;:110;;;;:::i;:::-;:124;:126::i;:::-;:138;;;;;;14370:145;;14285:237;;;:::o;4451:75::-;4488:7;4514:5;;4507:12;;4451:75;:::o;4644:223:0:-;4727:45;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;4167:81:8:-;4208:5;4232:9;;;;;;;;;;;4225:16;;4167:81;:::o;4314:73::-;4350:7;4376:4;;4369:11;;4314:73;:::o;9350:412::-;9431:1;9419:9;:13;9415:180;;;9448:29;9465:11;9448:16;:29::i;:::-;9415:180;;;9517:13;;;;;;;;;;;:26;;;9544:10;9564:4;9571:11;9517:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9509:75;;;;;;9415:180;9604:14;9621:22;9637:5;;9621:11;:15;;:22;;;;:::i;:::-;9604:39;;9653:25;9659:10;9671:6;9653:5;:25::i;:::-;9723:10;9693:62;;9709:12;:10;:12::i;:::-;9693:62;;;9735:11;9748:6;9693:62;;;;;;;;;;;;;;;;;;;;;;;;9350:412;;:::o;5818:205:0:-;5915:12;:10;:12::i;:::-;5904:23;;:7;:23;;;5896:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;:::-;5818:205;;:::o;12983:411:8:-;13026:24;13053:29;13071:10;13053:17;:29::i;:::-;13026:56;;13115:1;13096:16;:20;13092:296;;;13163:50;13196:16;13163;:28;13180:10;13163:28;;;;;;;;;;;;;;;;:32;;:50;;;;:::i;:::-;13132:16;:28;13149:10;13132:28;;;;;;;;;;;;;;;:81;;;;13235:13;;;;;;;;;;;:22;;;13258:10;13270:16;13235:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13227:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13348:10;13334:43;;;13360:16;13334:43;;;;;;;;;;;;;;;;;;13092:296;12983:411;:::o;4629:97::-;4676:4;4706:13;:11;:13::i;:::-;4699:4;;:20;4692:27;;4629:97;:::o;9885:580::-;9953:13;9987:2;9969:15;:20;9953:36;;9999:21;10037:1;10023:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9999:40;;10059:14;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10049:4;10054:1;10049:7;;;;;;;;;;;;;:31;;;;;;;;;;;10100:10;;;;;;;;;;;10090:4;10095:1;10090:7;;;;;;;;;;;;;:20;;;;;;;;;;;10122:18;10144:14;;;;;;;;;;;:36;;;10189:9;10201:10;10213:4;10227;10234:8;10144:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10121:122;;10275:1;10265:4;10270:1;10265:7;;;;;;;;;;;;;;:11;10257:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10347:12;10364:10;:15;;10388:21;10364:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10346:69;;;10433:7;10425:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9885:580;;;;;:::o;1199:27::-;;;;;;;;;;;;;:::o;1077:40::-;;;;;;;;;;;;;:::o;12009:348::-;12078:5;12058:25;;:16;:14;:16::i;:::-;:25;;;12050:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12141:5;12122:24;;:15;;;;;;;;;;;:24;;;12114:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12193:13;;;;;;;;;;;:22;;;12216:12;;;;;;;;;;;12230:15;12239:5;;12230:4;;:8;;:15;;;;:::i;:::-;12193:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12185:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12299:12;;;;;;;;;;;12285:33;;;12313:4;;12285:33;;;;;;;;;;;;;;;;;;12346:4;12328:15;;:22;;;;;;;;;;;;;;;;;;12009:348::o;5081:117::-;5147:7;5173:9;:18;5183:7;5173:18;;;;;;;;;;;;;;;;5166:25;;5081:117;;;:::o;1530:27::-;;;;;;;;;;;;;:::o;1479:20::-;;;;:::o;1123:70::-;;;;;;;;;;;;;:::o;3965:136:0:-;4038:7;4064:30;4088:5;4064:6;:12;4071:4;4064:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4057:37;;3965:136;;;;:::o;2950:137::-;3019:4;3042:38;3072:7;3042:6;:12;3049:4;3042:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3035:45;;2950:137;;;;:::o;4010:85:8:-;4049:13;4081:7;4074:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4010:85;:::o;1727:49:0:-;1772:4;1727:49;;;:::o;5420:172:8:-;5506:4;5522:42;5532:12;:10;:12::i;:::-;5546:9;5557:6;5522:9;:42::i;:::-;5581:4;5574:11;;5420:172;;;;:::o;3255:125:0:-;3318:7;3344:29;:6;:12;3351:4;3344:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3337:36;;3255:125;;;:::o;13595:154:8:-;13658:7;13684:58;13717:16;:24;13734:6;13717:24;;;;;;;;;;;;;;;;13684:28;13705:6;13684:20;:28::i;:::-;:32;;:58;;;;:::i;:::-;13677:65;;13595:154;;;:::o;910:62::-;948:24;910:62;:::o;5101:226:0:-;5185:45;5193:6;:12;5200:4;5193:12;;;;;;;;;;;:22;;;5217:12;:10;:12::i;:::-;5185:7;:45::i;:::-;5177:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:26;5306:4;5312:7;5294:11;:26::i;:::-;5101:226;;:::o;5948:149:8:-;6037:7;6063:11;:18;6075:5;6063:18;;;;;;;;;;;;;;;:27;6082:7;6063:27;;;;;;;;;;;;;;;;6056:34;;5948:149;;;;:::o;12532:386::-;12617:1;12601:13;:11;:13::i;:::-;:17;12593:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12653:13;;;;;;;;;;;:26;;;12680:10;12700:4;12707:10;12653:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12645:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12785:72;12843:13;:11;:13::i;:::-;12813:27;1635:6;12814:10;12813:16;;:27;;;;:::i;:::-;:43;;;;;;12785:23;;:27;;:72;;;;:::i;:::-;12759:23;:98;;;;12888:10;12872:39;;;12900:10;12872:39;;;;;;;;;;;;;;;;;;12532:386;:::o;6429:150:7:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;3538:215:2:-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;11270:171:8:-;11339:34;948:24;11360:12;:10;:12::i;:::-;11339:7;:34::i;:::-;11331:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11417:17;11423:2;11427:6;11417:5;:17::i;:::-;11270:171;;:::o;598:104:6:-;651:15;685:10;678:17;;598:104;:::o;8744:326:8:-;8862:1;8845:19;;:5;:19;;;;8837:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8935:1;8916:21;;:7;:21;;;;8908:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9010:6;8980:11;:18;8992:5;8980:18;;;;;;;;;;;;;;;:27;8999:7;8980:27;;;;;;;;;;;;;;;:36;;;;9047:7;9031:32;;9040:5;9031:32;;;9056:6;9031:32;;;;;;;;;;;;;;;;;;8744:326;;;:::o;7255:840::-;7378:1;7360:20;;:6;:20;;;;7352:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7454:1;7433:23;;:9;:23;;;;7425:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7500:36;7521:6;7529;7500:20;:36::i;:::-;7567:64;7589:6;7567:64;;;;;;;;;;;;;;;;;:9;:17;7577:6;7567:17;;;;;;;;;;;;;;;;:21;;:64;;;;;:::i;:::-;7547:9;:17;7557:6;7547:17;;;;;;;;;;;;;;;:84;;;;7664:32;7689:6;7664:9;:20;7674:9;7664:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7641:9;:20;7651:9;7641:20;;;;;;;;;;;;;;;:55;;;;7728:9;7711:35;;7720:6;7711:35;;;7739:6;7711:35;;;;;;;;;;;;;;;;;;7818:17;7838:50;:35;7866:6;7838:23;;:27;;:35;;;;:::i;:::-;:48;:50::i;:::-;7818:70;;7935:50;7974:10;7935:26;:34;7962:6;7935:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;7898:26;:34;7925:6;7898:34;;;;;;;;;;;;;;;:87;;;;8035:53;8077:10;8035:26;:37;8062:9;8035:37;;;;;;;;;;;;;;;;:41;;:53;;;;:::i;:::-;7995:26;:37;8022:9;7995:37;;;;;;;;;;;;;;;:93;;;;7255:840;;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;185:130:10:-;241:6;255:8;273:1;255:20;;294:1;289;:6;;281:15;;;;;;309:1;302:8;;;185:130;;;:::o;1142:158:9:-;1198:6;1212:8;1227:1;1223;:5;1212:16;;1248:1;1243;:6;;:16;;;;;1258:1;1253;:6;;1243:16;1242:38;;;;1269:1;1265;:5;:14;;;;;1278:1;1274;:5;1265:14;1242:38;1234:47;;;;;;1294:1;1287:8;;;1142:158;;;;:::o;1304:114::-;1360:7;1388:1;1383;:6;;1375:15;;;;;;1411:1;1396:17;;1304:114;;;:::o;7025:184:0:-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;8106:354:8:-;8208:1;8189:21;;:7;:21;;;;8181:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8250:40;8279:1;8283:6;8250:20;:40::i;:::-;8316:24;8333:6;8316:12;;:16;;:24;;;;:::i;:::-;8301:12;:39;;;;8371:30;8394:6;8371:9;:18;8381:7;8371:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8350:9;:18;8360:7;8350:18;;;;;;;;;;;;;;;:51;;;;8437:7;8416:37;;8433:1;8416:37;;;8446:6;8416:37;;;;;;;;;;;;;;;;;;8106:354;;:::o;7215:188:0:-;7289:36;7317:7;7289:6;:12;7296:4;7289:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;7346:40;;7364:7;7346:40;;7358:4;7346:40;;;;;;;;;;7285:112;7215:188;;:::o;2690:175:2:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;7677:156:7:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;7230:115::-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;1640:404:7:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;11693:243:8:-;11800:1;11784:18;;:4;:18;;;11780:150;;;11898:4;;11869:25;11887:6;11869:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;:33;;11861:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11780:150;11693:243;;:::o;989:149:9:-;1045:6;1073:1;1068;:6;;:20;;;;;1087:1;1082;1078;:5;:10;;1068:20;1067:46;;;;1098:1;1094;:5;:18;;;;;1111:1;1107;1103;:5;:9;1094:18;1067:46;1059:55;;;;;;1132:1;1128;:5;1121:12;;989:149;;;;:::o;6747:156:7:-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;4452:201::-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;2212:1512::-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2809200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "278",
								"MINTER_ROLE()": "271",
								"_beneficiary()": "1092",
								"_cap()": "1096",
								"_rate()": "1072",
								"_uniswapRouter()": "1115",
								"_usdcInstance()": "1093",
								"_usdcToken()": "1136",
								"accumulativeAmountOf(address)": "infinite",
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "22559",
								"balanceOf(address)": "1308",
								"buyTokens(uint256)": "infinite",
								"cap()": "1125",
								"claimableAmountOf(address)": "infinite",
								"convertEthToUsdc(uint256)": "infinite",
								"decimals()": "1145",
								"getRoleAdmin(bytes32)": "1296",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1401",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"name()": "infinite",
								"rate()": "1059",
								"receivePayment(uint256)": "infinite",
								"releaseFunds()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"sendTokens(address,uint256)": "infinite",
								"symbol()": "infinite",
								"tokensale_open()": "1971",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdrawAmount()": "infinite",
								"withdrawnAmountOf(address)": "1243"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "AD6D458402F60FD3BD25163575031ACDCE07538D"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1193,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1586,
									"end": 1591,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1563,
									"end": 1591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100000000"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100000000"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100000000"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100000000"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 948,
									"end": 972,
									"name": "PUSH",
									"source": 8,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3367,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 3357,
									"end": 3367,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3367,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3333,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3333,
									"end": 3343,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3333,
									"end": 3343,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 3333,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1071,
									"name": "PUSH",
									"source": 8,
									"value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
								},
								{
									"begin": 3380,
									"end": 3394,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3380,
									"end": 3394,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3457,
									"end": 3462,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3454,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3482,
									"end": 3489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3479,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3520,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3508,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3499,
									"end": 3508,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3553,
									"end": 3563,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3543,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3530,
									"end": 3543,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3530,
									"end": 3564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3587,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3591,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "7261746520697320300000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 3574,
									"end": 3605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3623,
									"end": 3627,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3623,
									"end": 3631,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "6361702069732030000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 3615,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3662,
									"end": 3674,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3662,
									"end": 3688,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "61646472657373206973206E756C6C0000000000000000000000000000000000"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 3654,
									"end": 3708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3725,
									"end": 3729,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3722,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 3718,
									"end": 3729,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3729,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3744,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 3739,
									"end": 3752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3752,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3777,
									"end": 3789,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3774,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 3762,
									"end": 3774,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3762,
									"end": 3789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6683,
									"end": 6690,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 7123,
									"end": 7130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7105,
									"end": 7109,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551797"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7170,
									"end": 7177,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6499,
									"end": 6503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6527,
									"end": 6530,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6568,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1764,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1944,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1922,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1932,
									"end": 1937,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1980,
									"end": 1984,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3878,
									"end": 3882,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3924,
									"end": 3925,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3904,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3914,
									"end": 3919,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 14525,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b83d6e1d784d62d7c6e56122eb4631560a1ebc0037df6d5f51c9161777df491b64736f6c63430007060033",
									".code": [
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "61778592"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "D41E98FF"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "D41E98FF"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "D5391393"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "E2EAB483"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "CA15C873"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "828CEDB7"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "828CEDB7"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "83BEBCED"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "8923D5A2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "9010D07C"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "61778592"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "65B61B77"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "69D89575"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "2C4E722E"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "534844A2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "5CFED870"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "60B17914"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "2C4E722E"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "355274EA"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "24B4395B"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "CC8AD8"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "5AB421D"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "60CF4E8"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 14525,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14067,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14068,
											"end": 14074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14075,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14044,
											"end": 14075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14044,
											"end": 14075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14082,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10841,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "62757965722069732061207A65726F2061646472657373000000000000000000"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 10814,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 10898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "776569416D6F756E742069732030000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 10879,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10964,
											"end": 10969,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 10964,
											"end": 10969,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10959,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 10953,
											"end": 10963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10986,
											"end": 10991,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 10981,
											"end": 11000,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10981,
											"end": 11000,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10981,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11045,
											"end": 11050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11031,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 11031,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 11031,
											"end": 11043,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11031,
											"end": 11043,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 11031,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11067,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 11074,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6447,
											"end": 6451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6472,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6493,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6463,
											"end": 6502,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6463,
											"end": 6502,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6463,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6523,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6530,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7044,
											"end": 7048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7089,
											"end": 7095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7123,
											"end": 7135,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7123,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7123,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH data",
											"source": 8,
											"value": "90890889493B104BF9EBABDE1448715C2FB678969066CDC6632DC010E5B34FF0"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7148,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7155,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7157,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7170,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7137,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 7106,
											"end": 7220,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7106,
											"end": 7220,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 7106,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7241,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7230,
											"end": 7241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 7248,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 14377,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 14452,
											"end": 14478,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14485,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14486,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 14415,
											"end": 14421,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14405,
											"end": 14414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14400,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 14377,
											"end": 14400,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 14377,
											"end": 14404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 14377,
											"end": 14423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 14377,
											"end": 14438,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14377,
											"end": 14438,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 14377,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 14377,
											"end": 14451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 14377,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 14377,
											"end": 14503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14377,
											"end": 14503,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 14377,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14515,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14370,
											"end": 14515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14370,
											"end": 14515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14522,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4526,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4759,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH data",
											"source": 0,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4225,
											"end": 4241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4225,
											"end": 4241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4248,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4350,
											"end": 4357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4387,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9432,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9465,
											"end": 9476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9543,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9543,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9543,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 9544,
											"end": 9554,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9568,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9582,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9604,
											"end": 9618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9637,
											"end": 9642,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 9637,
											"end": 9642,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9632,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 9621,
											"end": 9636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9604,
											"end": 9643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9604,
											"end": 9643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9659,
											"end": 9669,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9723,
											"end": 9733,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 9735,
											"end": 9746,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9754,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9755,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9762,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 5915,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH data",
											"source": 0,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13053,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 13071,
											"end": 13081,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 13053,
											"end": 13082,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13053,
											"end": 13082,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 13053,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13026,
											"end": 13082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13026,
											"end": 13082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13115,
											"end": 13116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13096,
											"end": 13116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13092,
											"end": 13388,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13092,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 13092,
											"end": 13388,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 13196,
											"end": 13212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13190,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13191,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 13163,
											"end": 13195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 13163,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13148,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13149,
											"end": 13159,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13213,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13257,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13235,
											"end": 13257,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13257,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 13258,
											"end": 13268,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13270,
											"end": 13286,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "7472616E73666572206E6F74207375636365737366756C000000000000000000"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13348,
											"end": 13358,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "PUSH",
											"source": 8,
											"value": "EE4BBB2593064AC08210A82C9CB3CF8E7A839976E8EA380BF97B8387FAA49A9B"
										},
										{
											"begin": 13360,
											"end": 13376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13377,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 13092,
											"end": 13388,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 13092,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13394,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4676,
											"end": 4680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4726,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 9989,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 9969,
											"end": 9984,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 9989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9999,
											"end": 10020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9999,
											"end": 10039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9999,
											"end": 10039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10078,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10078,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10078,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10100,
											"end": 10110,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10144,
											"end": 10158,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10180,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10144,
											"end": 10180,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10180,
											"name": "PUSH",
											"source": 8,
											"value": "FB3BDB41"
										},
										{
											"begin": 10189,
											"end": 10198,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10211,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10227,
											"end": 10231,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10242,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "100000000"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "100000000"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10275,
											"end": 10276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10276,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "45786368616E6765206661696C65642E00000000000000000000000000000000"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10257,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10374,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10379,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10364,
											"end": 10379,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10388,
											"end": 10409,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "726566756E64206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10465,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1226,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1117,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12078,
											"end": 12083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12058,
											"end": 12083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12058,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12058,
											"end": 12074,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12058,
											"end": 12074,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12058,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12083,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "66756E6473206E6F742072616973656400000000000000000000000000000000"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 12050,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "66756E64696E6720616C72656164792072656C65617365640000000000000000"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12114,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12215,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12193,
											"end": 12215,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12215,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12239,
											"end": 12244,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 12239,
											"end": 12244,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12234,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 12230,
											"end": 12234,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 12230,
											"end": 12238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12230,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "73656E64696E672055534443206661696C656400000000000000000000000000"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12185,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "PUSH",
											"source": 8,
											"value": "221C08A06B07A64803B3787861A3F276212FCCCB51C2E6234077A9B8CB13047A"
										},
										{
											"begin": 12313,
											"end": 12317,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 12313,
											"end": 12317,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12318,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12350,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12328,
											"end": 12343,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12328,
											"end": 12343,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12328,
											"end": 12350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12357,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1557,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1193,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4081,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4095,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5532,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5563,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5522,
											"end": 5564,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5522,
											"end": 5564,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 5522,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5585,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 13717,
											"end": 13733,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13740,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13741,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 13705,
											"end": 13711,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13684,
											"end": 13712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13712,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 13684,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 13684,
											"end": 13716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 13684,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13677,
											"end": 13742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13677,
											"end": 13742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 948,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 910,
											"end": 972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 972,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH data",
											"source": 0,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6074,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6090,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 6097,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12617,
											"end": 12618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 12601,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 12601,
											"end": 12614,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12601,
											"end": 12614,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 12601,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12618,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "746F74616C20737570706C790000000000000000000000000000000000000000"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 12593,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12679,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12679,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12679,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 12680,
											"end": 12690,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12700,
											"end": 12704,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12717,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "55534443205472616E73666572206E6F7420706F737369626C65000000000000"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12645,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12843,
											"end": 12856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12843,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 12843,
											"end": 12856,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12843,
											"end": 12856,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12843,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 12814,
											"end": 12824,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12813,
											"end": 12856,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12808,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 12785,
											"end": 12808,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 12785,
											"end": 12812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12785,
											"end": 12857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12782,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 12759,
											"end": 12857,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12857,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12857,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12888,
											"end": 12898,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770"
										},
										{
											"begin": 12900,
											"end": 12910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12911,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 2,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11270,
											"end": 11441,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 11270,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 948,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 11360,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 11339,
											"end": 11373,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11339,
											"end": 11373,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 11339,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "6D7573742068617665206D696E74657220726F6C6520746F206D696E74000000"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11331,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 11417,
											"end": 11434,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11417,
											"end": 11434,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11417,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8864,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "617070726F76652066726F6D20746865207A65726F2061646472657373000000"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8837,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "617070726F766520746F20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8908,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 8997,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8998,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9006,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9045,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9063,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 9070,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7380,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "7472616E736665722066726F6D20746865207A65726F20616464726573730000"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7352,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "7472616E7366657220746F20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7425,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7589,
											"end": 7595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "7472616E7366657220616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7576,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7583,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7584,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7567,
											"end": 7588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7567,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7556,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7564,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7631,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7674,
											"end": 7683,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7664,
											"end": 7688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7650,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7660,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7661,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7739,
											"end": 7745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7746,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7838,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 7866,
											"end": 7872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7861,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7838,
											"end": 7861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7838,
											"end": 7865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 7838,
											"end": 7888,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7838,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7838,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7974,
											"end": 7984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7961,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7935,
											"end": 7973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7935,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7924,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7898,
											"end": 7932,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7985,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8077,
											"end": 8087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8071,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8035,
											"end": 8076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8021,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 8095,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 185,
											"end": 315,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 185,
											"end": 315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 255,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 255,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 294,
											"end": 295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 289,
											"end": 295,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 295,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 281,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 281,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 281,
											"end": 296,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 281,
											"end": 296,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 302,
											"end": 310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 302,
											"end": 310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 302,
											"end": 310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 185,
											"end": 315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 185,
											"end": 315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 185,
											"end": 315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 185,
											"end": 315,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1243,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1242,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1234,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1300,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1418,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7123,
											"end": 7130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8106,
											"end": 8460,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8106,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "6D696E7420746F20746865207A65726F20616464726573730000000000000000"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 8181,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8250,
											"end": 8290,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8250,
											"end": 8290,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8250,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8333,
											"end": 8339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8316,
											"end": 8332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8316,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8301,
											"end": 8340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8340,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8381,
											"end": 8388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8371,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8367,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8401,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8437,
											"end": 8444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8453,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8460,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7317,
											"end": 7324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7373,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7358,
											"end": 7362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7133,
											"end": 7138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11693,
											"end": 11936,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 11693,
											"end": 11936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11800,
											"end": 11801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11784,
											"end": 11802,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11784,
											"end": 11802,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11784,
											"end": 11788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11784,
											"end": 11802,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11784,
											"end": 11802,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11784,
											"end": 11802,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11930,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 11780,
											"end": 11930,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11902,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 11898,
											"end": 11902,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 11887,
											"end": 11893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11869,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 11869,
											"end": 11882,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11869,
											"end": 11882,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11869,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 11869,
											"end": 11886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 11869,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11902,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "6361702065786365656465640000000000000000000000000000000000000000"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11861,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11930,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 11780,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11936,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1088,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1088,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 1067,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1059,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 989,
											"end": 1138,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6887,
											"end": 6892,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4572,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH data",
											"source": 7,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2464,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2830,
											"end": 2840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3622,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"90890889493B104BF9EBABDE1448715C2FB678969066CDC6632DC010E5B34FF0": "7472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"_beneficiary()": "828cedb7",
							"_cap()": "060cf4e8",
							"_rate()": "83bebced",
							"_uniswapRouter()": "65b61b77",
							"_usdcInstance()": "61778592",
							"_usdcToken()": "8923d5a2",
							"accumulativeAmountOf(address)": "24b4395b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens(uint256)": "3610724e",
							"cap()": "355274ea",
							"claimableAmountOf(address)": "d41e98ff",
							"convertEthToUsdc(uint256)": "60b17914",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"name()": "06fdde03",
							"rate()": "2c4e722e",
							"receivePayment(uint256)": "e2eab483",
							"releaseFunds()": "69d89575",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"sendTokens(address,uint256)": "05ab421d",
							"symbol()": "95d89b41",
							"tokensale_open()": "5cfed870",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdrawAmount()": "534844a2",
							"withdrawnAmountOf(address)": "00cc8ad8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenholder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUSDC\",\"type\":\"uint256\"}],\"name\":\"AmountPaidOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUSDC\",\"type\":\"uint256\"}],\"name\":\"FundsReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUSDC\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUSDC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_usdcInstance\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_usdcToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount_\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"claimableAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"convertEthToUsdc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"receivePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensale_open\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Fabiconcept (Fabian Ajokubi T.)\",\"details\":\"Value is stored as USDC. The implementation has not been audited.\",\"events\":{\"AmountPaidOut(address,uint256)\":{\"params\":{\"amountUSDC\":\"amount of the paid out USDC\",\"tokenholder\":\"address of the investor / tokenholder\"}},\"FundsReleased(address,uint256)\":{\"params\":{\"amountUSDC\":\"amount of the released USDC\",\"beneficiary\":\"adress of the beneficiary\"}},\"PaymentReceived(address,uint256)\":{\"params\":{\"amountUSDC\":\"amount of the received USDC \",\"project_owner\":\"address of the beneficiary\"}},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amountToken\":\"amount of purchased tokens\",\"amountUSDC\":\"amount of USDC for the token purchase\",\"buyer\":\"address of the buyer\",\"transmitter\":\"address of the initiator\"}}},\"kind\":\"dev\",\"methods\":{\"accumulativeAmountOf(address)\":{\"params\":{\"_owner\":\"address of the account\"},\"returns\":{\"_0\":\"total amount of funds that were claimable\"}},\"allowance(address,address)\":{\"params\":{\"owner\":\"address of the account which owns the tokens\",\"spender\":\"address of the account that is allowed to spend the tokens\"},\"returns\":{\"_0\":\"amount of spendable tokens\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"amount to allow for spender to send\",\"spender\":\"address of the spender account\"},\"returns\":{\"_0\":\"boolean indicating whether the operation succeeded\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"address of the account \"},\"returns\":{\"_0\":\"amount of tokens hold by an address\"}},\"buyTokens(uint256)\":{\"details\":\"if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount\",\"params\":{\"usdcAmount_\":\"amount of USDC that will be invested\"}},\"cap()\":{\"returns\":{\"_0\":\"The cap\"}},\"claimableAmountOf(address)\":{\"params\":{\"_owner\":\"address of the account\"},\"returns\":{\"_0\":\"total amount of funds that are claimable\"}},\"constructor\":{\"params\":{\"beneficiary_\":\"Address of the beneficiary\",\"cap_\":\"Fund raising cap\",\"decimals_\":\"Decimals\",\"name_\":\"Name\",\"rate_\":\"Conversion Rate USDC <-> Security Token\",\"symbol_\":\"Symbol\"}},\"convertEthToUsdc(uint256)\":{\"params\":{\"usdcAmount\":\"amount of USDC that will be purchased\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"returns\":{\"_0\":\"The Name\"}},\"rate()\":{\"returns\":{\"_0\":\"The rate\"}},\"receivePayment(uint256)\":{\"params\":{\"usdcAmount\":\"amount that the beneficiary will pay \"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"sendTokens(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to be minted\",\"buyer\":\"address of the token buyer\"}},\"symbol()\":{\"returns\":{\"_0\":\"The symbol\"}},\"tokensale_open()\":{\"returns\":{\"_0\":\"boolean fundraising open\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"amount of supplied token\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"amount of the tokens to transfer\",\"recipient\":\"adddress of the recipient\"},\"returns\":{\"_0\":\"boolean transfer was sucessfull\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to send\",\"recipient\":\"address of the account which owns the tokens\",\"sender\":\"address of the account which owns the tokens\"},\"returns\":{\"_0\":\"boolean indicating whether the operation succeeded\"}},\"withdrawnAmountOf(address)\":{\"params\":{\"_owner\":\"address of the account\"},\"returns\":{\"_0\":\"total amount of funds that have been withdrawn\"}}},\"title\":\"Offr Token implementation - Distributing Security Token for one-time fundraising \",\"version\":1},\"userdoc\":{\"events\":{\"AmountPaidOut(address,uint256)\":{\"notice\":\"payment to the investor event\"},\"FundsReleased(address,uint256)\":{\"notice\":\"Release of raised funds event\"},\"PaymentReceived(address,uint256)\":{\"notice\":\"received payment from beneficiary event\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Token purchase event\"}},\"kind\":\"user\",\"methods\":{\"accumulativeAmountOf(address)\":{\"notice\":\"Returns the total amount of funds that were claimable for a specified account\"},\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom. This is zero by default.\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of spender over the callers tokens\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a specific address\"},\"buyTokens(uint256)\":{\"notice\":\"Function for investors to buy tokens with ETH or USDC\"},\"cap()\":{\"notice\":\"Returns funding cap\"},\"claimableAmountOf(address)\":{\"notice\":\"Returns the total amount of funds that are claimable for a specified account\"},\"constructor\":{\"notice\":\"Initialization of the Security Token\"},\"convertEthToUsdc(uint256)\":{\"notice\":\"Functions that converts ETH to USDC\"},\"decimals()\":{\"notice\":\"Returns the decimals\"},\"name()\":{\"notice\":\"Returns the name\"},\"rate()\":{\"notice\":\"Returns the rate\"},\"receivePayment(uint256)\":{\"notice\":\"Function that receives payments from beneficiary and distribute them to the tokenholders\"},\"releaseFunds()\":{\"notice\":\"Function to release the funding to the beneficiary\"},\"sendTokens(address,uint256)\":{\"notice\":\"Minting function for registered distributors\"},\"symbol()\":{\"notice\":\"Returns the symbol\"},\"tokensale_open()\":{\"notice\":\"Returns if the fundrasing is still open\"},\"totalSupply()\":{\"notice\":\"Returns the total token supply\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers `amount` of tokens to a `recipient`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves amount tokens from sender to recipient using the allowance mechanism. amount is then deducted from the caller\\u2019s allowance.\"},\"withdrawAmount()\":{\"notice\":\"Function to claim the claimable funds\"},\"withdrawnAmountOf(address)\":{\"notice\":\"Returns the total amount of funds that have been withdrawn for a specified account\"}},\"notice\":\"You can use this security token implementation to raise one-time funds and distribute USDC to token holders on a regular basis\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SIPilotToken.sol\":\"OffrToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts//access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9486045e189facd2e868ece35249872598ef03f1087fb6fa4d1161842daa2287\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77c3a04ef8453788b14b1ebbc24dd3f0a18ceb2615cd156aac949a611e552af8\",\"dweb:/ipfs/QmcmqWGguRM3iLuF57tcyrN3F6EA63kzeNkDfQuteBnurr\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"contracts/SIPilotToken.sol\":{\"keccak256\":\"0x8c7a39501a24fe010d8fcfea29bb5a26ed4532851df98f06576427a8ddbefa2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f1aa6c19786e0350272a4b5d3b3ea62546254ec61facb8bea201ba711fd050\",\"dweb:/ipfs/QmNpP9CFxwBSkdv9gCauyUSYXHp9pfAjnGuYZYy4nTJTBq\"]},\"contracts/math/SafeMathInt.sol\":{\"keccak256\":\"0x033878e35bdff0857f4dd78a78921ea8fa772452a98d9dda13443b7e6be8dbb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b292cde37f370d465584d8500e276ba54060da3c48d1fe270b93589b0f73a9a3\",\"dweb:/ipfs/QmV7vD1p2EwfDYUCBjR4xcQYtoCcmq2ksasUj9joHYVkah\"]},\"contracts/math/SafeMathUint.sol\":{\"keccak256\":\"0xf8cf9864e0540dbf40de4f3c7d6c07b67b64f081f928f8674bed0d42c6e118f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baa183bf09655d5d2aa722511044e52cc9f9cb0ec00e3ee599e45118f581ddae\",\"dweb:/ipfs/QmWDmG4JJz9J9sGwz4QEHzQCayHPCU59zNHzrE3d2rARhv\"]},\"contracts/uniswap/IUniswapV2Router01.sol\":{\"keccak256\":\"0x2698329f35127559498658df11c438943f02c3e5bae5635689795019947dec54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0316ab50a9e7e14f9b46df16b9fd29c5e5fd67f15ee3a944b501b60f5bb24d77\",\"dweb:/ipfs/QmRYXcwSPhBGGtwDxJ3MFASkPvSMceXNWicVBT6yEeAdun\"]},\"contracts/uniswap/IUniswapV2Router02.sol\":{\"keccak256\":\"0x4f2c020703fbd6b1e75dfe16329aa36629a1a8a267fdd196883239c09d350f8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e77b85de283e6740c8733fdce54c8b2f08f890814935baaf7fa60325990c59\",\"dweb:/ipfs/QmWcE5XJFyzLYhd2wdDuAWcxmCYpxa5hkLBFiCmeAMHMEX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)18_storage)"
							},
							{
								"astId": 2067,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_uniswapRouter",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IUniswapV2Router02)3656"
							},
							{
								"astId": 2070,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_usdcToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2072,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_usdcInstance",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1221"
							},
							{
								"astId": 2076,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2082,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2084,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2086,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 2088,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 2090,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "9",
								"type": "t_uint8"
							},
							{
								"astId": 2092,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_rate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 2094,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_cap",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 2096,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 2099,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "fundingReleased",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 2106,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "claimableAmountPerToken",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 2110,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "claimableAmountCorrections",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 2114,
								"contract": "contracts/SIPilotToken.sol:OffrToken",
								"label": "withdrawnAmounts",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1221": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)3656": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)18_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)18_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1816_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1815,
										"contract": "contracts/SIPilotToken.sol:OffrToken",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1551_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)18_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 15,
										"contract": "contracts/SIPilotToken.sol:OffrToken",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1816_storage"
									},
									{
										"astId": 17,
										"contract": "contracts/SIPilotToken.sol:OffrToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1551_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1546,
										"contract": "contracts/SIPilotToken.sol:OffrToken",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1550,
										"contract": "contracts/SIPilotToken.sol:OffrToken",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"AmountPaidOut(address,uint256)": {
								"notice": "payment to the investor event"
							},
							"FundsReleased(address,uint256)": {
								"notice": "Release of raised funds event"
							},
							"PaymentReceived(address,uint256)": {
								"notice": "received payment from beneficiary event"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Token purchase event"
							}
						},
						"kind": "user",
						"methods": {
							"accumulativeAmountOf(address)": {
								"notice": "Returns the total amount of funds that were claimable for a specified account"
							},
							"allowance(address,address)": {
								"notice": "Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom. This is zero by default."
							},
							"approve(address,uint256)": {
								"notice": "Sets `amount` as the allowance of spender over the callers tokens"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a specific address"
							},
							"buyTokens(uint256)": {
								"notice": "Function for investors to buy tokens with ETH or USDC"
							},
							"cap()": {
								"notice": "Returns funding cap"
							},
							"claimableAmountOf(address)": {
								"notice": "Returns the total amount of funds that are claimable for a specified account"
							},
							"constructor": {
								"notice": "Initialization of the Security Token"
							},
							"convertEthToUsdc(uint256)": {
								"notice": "Functions that converts ETH to USDC"
							},
							"decimals()": {
								"notice": "Returns the decimals"
							},
							"name()": {
								"notice": "Returns the name"
							},
							"rate()": {
								"notice": "Returns the rate"
							},
							"receivePayment(uint256)": {
								"notice": "Function that receives payments from beneficiary and distribute them to the tokenholders"
							},
							"releaseFunds()": {
								"notice": "Function to release the funding to the beneficiary"
							},
							"sendTokens(address,uint256)": {
								"notice": "Minting function for registered distributors"
							},
							"symbol()": {
								"notice": "Returns the symbol"
							},
							"tokensale_open()": {
								"notice": "Returns if the fundrasing is still open"
							},
							"totalSupply()": {
								"notice": "Returns the total token supply"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers `amount` of tokens to a `recipient`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Moves amount tokens from sender to recipient using the allowance mechanism. amount is then deducted from the callerâ€™s allowance."
							},
							"withdrawAmount()": {
								"notice": "Function to claim the claimable funds"
							},
							"withdrawnAmountOf(address)": {
								"notice": "Returns the total amount of funds that have been withdrawn for a specified account"
							}
						},
						"notice": "You can use this security token implementation to raise one-time funds and distribute USDC to token holders on a regular basis",
						"version": 1
					}
				}
			},
			"contracts/math/SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on errorSafeMath adapted for int256 Based on code of  https://github.com/RequestNetwork/requestNetwork/blob/master/packages/requestNetworkSmartContracts/contracts/base/math/SafeMathInt.sol",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/math/SafeMathInt.sol\":351:1420  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/math/SafeMathInt.sol\":351:1420  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020f628bb7bad0c6ba26926dc4ac94666ed319c13c6f95598aad1f91dce124d9e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020f628bb7bad0c6ba26926dc4ac94666ed319c13c6f95598aad1f91dce124d9e64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xF6 0x28 0xBB PUSH28 0xAD0C6BA26926DC4AC94666ED319C13C6F95598AAD1F91DCE124D9E64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "351:1069:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020f628bb7bad0c6ba26926dc4ac94666ed319c13c6f95598aad1f91dce124d9e64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xF6 0x28 0xBB PUSH28 0xAD0C6BA26926DC4AC94666ED319C13C6F95598AAD1F91DCE124D9E64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "351:1069:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"toUint256Safe(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 351,
									"end": 1420,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020f628bb7bad0c6ba26926dc4ac94666ed319c13c6f95598aad1f91dce124d9e64736f6c63430007060033",
									".code": [
										{
											"begin": 351,
											"end": 1420,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 351,
											"end": 1420,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on errorSafeMath adapted for int256 Based on code of  https://github.com/RequestNetwork/requestNetwork/blob/master/packages/requestNetworkSmartContracts/contracts/base/math/SafeMathInt.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/math/SafeMathInt.sol\":{\"keccak256\":\"0x033878e35bdff0857f4dd78a78921ea8fa772452a98d9dda13443b7e6be8dbb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b292cde37f370d465584d8500e276ba54060da3c48d1fe270b93589b0f73a9a3\",\"dweb:/ipfs/QmV7vD1p2EwfDYUCBjR4xcQYtoCcmq2ksasUj9joHYVkah\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/math/SafeMathUint.sol": {
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/math/SafeMathUint.sol\":160:317  library SafeMathUint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/math/SafeMathUint.sol\":160:317  library SafeMathUint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f93af9c5adb49f419619ab2c475c6a4e62669b0b2853d77890a8b19ab7b73e9464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f93af9c5adb49f419619ab2c475c6a4e62669b0b2853d77890a8b19ab7b73e9464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASPRICE 0xF9 0xC5 0xAD 0xB4 SWAP16 COINBASE SWAP7 NOT 0xAB 0x2C SELFBALANCE 0x5C PUSH11 0x4E62669B0B2853D77890A8 0xB1 SWAP11 0xB7 0xB7 RETURNDATACOPY SWAP5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "160:157:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f93af9c5adb49f419619ab2c475c6a4e62669b0b2853d77890a8b19ab7b73e9464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASPRICE 0xF9 0xC5 0xAD 0xB4 SWAP16 COINBASE SWAP7 NOT 0xAB 0x2C SELFBALANCE 0x5C PUSH11 0x4E62669B0B2853D77890A8 0xB1 SWAP11 0xB7 0xB7 RETURNDATACOPY SWAP5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "160:157:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 160,
									"end": 317,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f93af9c5adb49f419619ab2c475c6a4e62669b0b2853d77890a8b19ab7b73e9464736f6c63430007060033",
									".code": [
										{
											"begin": 160,
											"end": 317,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 160,
											"end": 317,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 160,
											"end": 317,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 160,
											"end": 317,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 160,
											"end": 317,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 160,
											"end": 317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 317,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 317,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/SafeMathUint.sol\":\"SafeMathUint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/math/SafeMathUint.sol\":{\"keccak256\":\"0xf8cf9864e0540dbf40de4f3c7d6c07b67b64f081f928f8674bed0d42c6e118f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baa183bf09655d5d2aa722511044e52cc9f9cb0ec00e3ee599e45118f581ddae\",\"dweb:/ipfs/QmWDmG4JJz9J9sGwz4QEHzQCayHPCU59zNHzrE3d2rARhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswap/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/IUniswapV2Router01.sol\":{\"keccak256\":\"0x2698329f35127559498658df11c438943f02c3e5bae5635689795019947dec54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0316ab50a9e7e14f9b46df16b9fd29c5e5fd67f15ee3a944b501b60f5bb24d77\",\"dweb:/ipfs/QmRYXcwSPhBGGtwDxJ3MFASkPvSMceXNWicVBT6yEeAdun\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswap/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/IUniswapV2Router01.sol\":{\"keccak256\":\"0x2698329f35127559498658df11c438943f02c3e5bae5635689795019947dec54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0316ab50a9e7e14f9b46df16b9fd29c5e5fd67f15ee3a944b501b60f5bb24d77\",\"dweb:/ipfs/QmRYXcwSPhBGGtwDxJ3MFASkPvSMceXNWicVBT6yEeAdun\"]},\"contracts/uniswap/IUniswapV2Router02.sol\":{\"keccak256\":\"0x4f2c020703fbd6b1e75dfe16329aa36629a1a8a267fdd196883239c09d350f8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e77b85de283e6740c8733fdce54c8b2f08f890814935baaf7fa60325990c59\",\"dweb:/ipfs/QmWcE5XJFyzLYhd2wdDuAWcxmCYpxa5hkLBFiCmeAMHMEX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/token/ERC20/ERC20.sol:55:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor (string memory name_, string memory symbol_) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2103,
					"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"start": 1958
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts//access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts//access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							282
						],
						"Address": [
							1517
						],
						"Context": [
							1540
						],
						"EnumerableSet": [
							2032
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 2033,
							"src": "66:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1518,
							"src": "103:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1541,
							"src": "134:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1540,
										"src": "1478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1540",
											"typeString": "contract Context"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"contractDependencies": [
								1540
							],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "166:1276:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								1540
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 10,
									"libraryName": {
										"id": 8,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2032,
										"src": "1498:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$2032",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1492:49:0",
									"typeName": {
										"id": 9,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1816,
										"src": "1516:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1517,
										"src": "1552:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1517",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1546:26:0",
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 18,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"scope": 18,
											"src": "1604:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 14,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1816,
												"src": "1604:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"scope": 18,
											"src": "1646:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 16,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1646:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 282,
									"src": "1578:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "1676:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1685:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1676:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 20,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 18,
											"src": "1696:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$18_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 25,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "1727:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 23,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1783:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 34,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2103:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2125:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2160:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:87:0"
									},
									"src": "2080:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2196:198:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 43,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2417:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2439:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2464:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:71:0"
									},
									"src": "2399:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "2494:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 52,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2792:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2814:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2839:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:71:0"
									},
									"src": "2774:89:0"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "3025:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 62,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "3042:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 64,
																"indexExpression": {
																	"id": 63,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "3049:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3042:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3042:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1816_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1894,
														"src": "3042:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1816_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1816_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 69,
												"nodeType": "Return",
												"src": "3035:45:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2869:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2967:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2966:31:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:6:0"
									},
									"scope": 282,
									"src": "2950:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3327:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 79,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "3344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 81,
																"indexExpression": {
																	"id": 80,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3351:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3344:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3344:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1816_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1908,
														"src": "3344:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1816_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1816_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3337:36:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3093:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:14:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3318:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:9:0"
									},
									"scope": 282,
									"src": "3255:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "4047:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4088:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 97,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "4064:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 99,
																"indexExpression": {
																	"id": 98,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "4071:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4064:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "4064:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1816_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1934,
														"src": "4064:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1816_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1816_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 104,
												"nodeType": "Return",
												"src": "4057:37:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3386:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3988:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4002:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3987:29:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:9:0"
									},
									"scope": 282,
									"src": "3965:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4348:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 114,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "4365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 116,
														"indexExpression": {
															"id": 115,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "4372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4365:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$18_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 17,
													"src": "4365:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 113,
												"id": 118,
												"nodeType": "Return",
												"src": "4358:29:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "4107:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4304:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:14:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:9:0"
									},
									"scope": 282,
									"src": "4282:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4709:158:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 130,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "4735:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 132,
																		"indexExpression": {
																			"id": 131,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "4742:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4735:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$18_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "4735:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 134,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "4759:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 129,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "4727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4727:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4774:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "4719:105:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "4846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "4852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4835:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "4835:25:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "4400:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4663:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4662:31:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4709:0:0"
									},
									"scope": 282,
									"src": "4644:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "5167:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 156,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "5193:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 158,
																		"indexExpression": {
																			"id": 157,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "5200:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5193:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$18_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "5193:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 160,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "5217:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5217:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 155,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "5185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5185:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5232:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5177:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "5177:106:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5306:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 168,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 166,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5294:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5294:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "5294:26:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4873:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5121:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5135:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5120:31:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:0"
									},
									"scope": 282,
									"src": "5101:226:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5886:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "5915:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5915:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5904:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5896:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5990:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "5990:26:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5333:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5886:0:0"
									},
									"scope": 282,
									"src": "5818:205:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6656:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 202,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "6666:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "6666:25:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "6029:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6622:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6607:31:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6656:0:0"
									},
									"scope": 282,
									"src": "6588:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6896:123:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 217,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "6928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 218,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "6934:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 220,
																"indexExpression": {
																	"id": 219,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6941:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6934:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "6934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 222,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6958:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 216,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "6911:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "EmitStatement",
												"src": "6906:62:0"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 225,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "6978:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 227,
															"indexExpression": {
																"id": 226,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6978:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$18_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "6978:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 229,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "7003:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6978:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "6978:34:0"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "6704:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6860:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6845:33:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6896:0:0"
									},
									"scope": 282,
									"src": "6823:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "7084:125:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 245,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7123:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 240,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "7098:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 242,
																"indexExpression": {
																	"id": 241,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "7105:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7098:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7098:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1816_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1842,
														"src": "7098:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1816_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1816_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "7094:109:0",
												"trueBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "7133:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 248,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "7164:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 249,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "7170:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 250,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "7179:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7179:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 247,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7152:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7152:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 253,
															"nodeType": "EmitStatement",
															"src": "7147:45:0"
														}
													]
												}
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7044:31:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:0:0"
									},
									"scope": 282,
									"src": "7025:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "7275:128:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "7317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 264,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "7289:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 266,
																"indexExpression": {
																	"id": 265,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7296:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7289:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7289:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1816_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1868,
														"src": "7289:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1816_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1816_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "7285:112:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7327:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 272,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "7358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 273,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "7364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 274,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "7373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 271,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "7346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "7341:45:0"
														}
													]
												}
											}
										]
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "7236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "7250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:31:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7275:0:0"
									},
									"scope": 282,
									"src": "7215:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 283,
							"src": "1443:5962:0"
						}
					],
					"src": "33:7373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							1540
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 285,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 1541,
							"src": "66:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "33:64:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							640
						]
					},
					"id": 641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 640,
							"linearizedBaseContracts": [
								640
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 306,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 311,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 299,
													"id": 312,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 315,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 316,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 299,
												"id": 317,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 640,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 331,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 332,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 330,
													"id": 337,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 343,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 330,
												"id": 344,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 640,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 358,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 363,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 357,
													"id": 364,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 372,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 373,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 375,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 357,
													"id": 380,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 383,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 357,
												"id": 385,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 640,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 399,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 398,
													"id": 405,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 411,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 398,
												"id": 412,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 640,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 433,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 431,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 425,
													"id": 432,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 436,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 438,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 425,
												"id": 439,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 640,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 453,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 454,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 459,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"id": 464,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 465,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 640,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 479,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 484,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 485,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 487,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 640,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 498,
													"id": 503,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 508,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 512,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 513,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 515,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"id": 520,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 506,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 498,
												"id": 521,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 640,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 540,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 541,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 532,
												"id": 543,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 640,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 563,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 565,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 640,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 580,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 581,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 583,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 587,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 578,
												"id": 589,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 640,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 611,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 613,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 640,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 631,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 635,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 626,
												"id": 637,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 640,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 641,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1540
						],
						"ERC20": [
							1143
						],
						"IERC20": [
							1221
						],
						"SafeMath": [
							640
						]
					},
					"id": 1144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 642,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 643,
							"nodeType": "ImportDirective",
							"scope": 1144,
							"sourceUnit": 1541,
							"src": "66:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 644,
							"nodeType": "ImportDirective",
							"scope": 1144,
							"sourceUnit": 1222,
							"src": "100:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 645,
							"nodeType": "ImportDirective",
							"scope": 1144,
							"sourceUnit": 641,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 647,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1540,
										"src": "1339:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1540",
											"typeString": "contract Context"
										}
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:3"
								},
								{
									"baseName": {
										"id": 649,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1221,
										"src": "1348:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1221",
											"typeString": "contract IERC20"
										}
									},
									"id": 650,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:3"
								}
							],
							"contractDependencies": [
								1221,
								1540
							],
							"contractKind": "contract",
							"documentation": {
								"id": 646,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143,
								1221,
								1540
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 653,
									"libraryName": {
										"id": 651,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 640,
										"src": "1367:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$640",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:3",
									"typeName": {
										"id": 652,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 657,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1394:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 656,
										"keyType": {
											"id": 654,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 655,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 663,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1447:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 662,
										"keyType": {
											"id": 658,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 661,
											"keyType": {
												"id": 659,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 660,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 665,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1523:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 664,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 667,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1558:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 666,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 669,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1584:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 668,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 671,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "1612:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 670,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "2022:81:3",
										"statements": [
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 679,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "2032:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2040:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:3"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 683,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2055:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 684,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2065:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:3"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 687,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2082:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 692,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1971:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1992:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:44:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:3"
									},
									"scope": 1143,
									"src": "1958:145:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2228:29:3",
										"statements": [
											{
												"expression": {
													"id": 698,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "2245:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 697,
												"id": 699,
												"nodeType": "Return",
												"src": "2238:12:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2213:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:15:3"
									},
									"scope": 1143,
									"src": "2168:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2432:31:3",
										"statements": [
											{
												"expression": {
													"id": 707,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 706,
												"id": 708,
												"nodeType": "Return",
												"src": "2442:14:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:15:3"
									},
									"scope": 1143,
									"src": "2370:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3142:33:3",
										"statements": [
											{
												"expression": {
													"id": 716,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "3159:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 715,
												"id": 717,
												"nodeType": "Return",
												"src": "3152:16:3"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3135:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 713,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:7:3"
									},
									"scope": 1143,
									"src": "3086:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3305:36:3",
										"statements": [
											{
												"expression": {
													"id": 726,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 665,
													"src": "3322:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 727,
												"nodeType": "Return",
												"src": "3315:19:3"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:3"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3296:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:9:3"
									},
									"scope": 1143,
									"src": "3235:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "3482:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 738,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "3499:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 740,
													"indexExpression": {
														"id": 739,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "3509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 737,
												"id": 741,
												"nodeType": "Return",
												"src": "3492:25:3"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:3"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3418:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:17:3"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3473:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:9:3"
									},
									"scope": 1143,
									"src": "3399:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3819:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 755,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "3839:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 757,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "3853:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3864:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "3829:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 753,
												"id": 762,
												"nodeType": "Return",
												"src": "3881:11:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:3"
									},
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3745:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3764:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:35:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:6:3"
									},
									"scope": 1143,
									"src": "3727:172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1180
									],
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4055:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 775,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4072:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 777,
														"indexExpression": {
															"id": 776,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4084:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 779,
													"indexExpression": {
														"id": 778,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4091:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 774,
												"id": 780,
												"nodeType": "Return",
												"src": "4065:34:3"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:3"
									},
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "3976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "3991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:32:3"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4045:9:3"
									},
									"scope": 1143,
									"src": "3957:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1190
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4333:77:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 794,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "4352:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 796,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "4366:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "4375:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4343:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 792,
												"id": 801,
												"nodeType": "Return",
												"src": "4392:11:3"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 789,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:3"
									},
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4261:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4278:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4260:33:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4327:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:6:3"
									},
									"scope": 1143,
									"src": "4244:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1202
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "4989:205:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5009:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5017:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5028:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "4999:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5054:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 824,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "5062:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 833,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5114:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 826,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "5076:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 828,
																		"indexExpression": {
																			"id": 827,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "5088:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 831,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 829,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "5096:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "5076:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "5045:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 815,
												"id": 839,
												"nodeType": "Return",
												"src": "5176:11:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 812,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:3"
									},
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "4899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "4915:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "4934:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:51:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "4983:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4982:6:3"
									},
									"scope": 1143,
									"src": "4877:317:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "5683:121:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 852,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "5702:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 854,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "5716:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 862,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "5764:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 855,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "5725:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 858,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 856,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "5737:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 860,
																	"indexExpression": {
																		"id": 859,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "5751:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 467,
																"src": "5725:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "5693:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 850,
												"id": 867,
												"nodeType": "Return",
												"src": "5786:11:3"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5616:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5633:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5615:37:3"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5677:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5676:6:3"
									},
									"scope": 1143,
									"src": "5589:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "6390:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 880,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "6409:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 882,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "6423:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "6471:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 883,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "6432:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 886,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 884,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "6444:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 888,
																	"indexExpression": {
																		"id": 887,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "6458:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "6432:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "6400:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 878,
												"id": 896,
												"nodeType": "Return",
												"src": "6539:11:3"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6317:42:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6383:6:3"
									},
									"scope": 1143,
									"src": "6291:266:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "7118:443:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "7136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7128:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "7216:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7208:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7311:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7319:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7330:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "7290:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:3"
											},
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 934,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "7348:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7358:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 941,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "7390:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 937,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7368:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"id": 938,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "7378:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "7368:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:3"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 946,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "7449:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 948,
														"indexExpression": {
															"id": 947,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7459:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 953,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "7497:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 949,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7472:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 951,
																"indexExpression": {
																	"id": 950,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "7482:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "7472:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 958,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7536:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7547:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "7519:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "EmitStatement",
												"src": "7514:40:3"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "7050:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "7066:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "7085:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7049:51:3"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:3"
									},
									"scope": 1143,
									"src": "7031:530:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "7897:305:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "7915:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7907:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 983,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 987,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "8016:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "8025:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "7983:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:3"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "8043:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 994,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "8075:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 992,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "8058:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8058:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:3"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 998,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "8092:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1000,
														"indexExpression": {
															"id": 999,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "8102:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1005,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "8136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1001,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "8113:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1003,
																"indexExpression": {
																	"id": 1002,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "8123:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8113:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1014,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "8179:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "8188:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "8158:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "8153:42:3"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7847:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7864:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7846:33:3"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:3"
									},
									"scope": 1143,
									"src": "7832:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "8587:345:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "8605:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8597:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "8717:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "8675:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:3"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1046,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "8735:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1047,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8745:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1053,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "8779:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1049,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "8756:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1051,
																"indexExpression": {
																	"id": 1050,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "8766:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "8756:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:3"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "8834:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "8866:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1059,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "8849:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 489,
															"src": "8849:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1066,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "8918:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1065,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "8888:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "EmitStatement",
												"src": "8883:42:3"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "8537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "8554:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:33:3"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:3"
									},
									"scope": 1143,
									"src": "8522:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "9438:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "9456:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9448:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "9534:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:3"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1105,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "9605:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1108,
															"indexExpression": {
																"id": 1106,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "9617:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"id": 1107,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "9624:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "9635:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1114,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "9665:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "9672:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9681:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "9656:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "9651:37:3"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "9373:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "9388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "9405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9372:48:3"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:3"
									},
									"scope": 1143,
									"src": "9355:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "10076:38:3",
										"statements": [
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1126,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "10086:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1127,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "10098:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:3"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:3",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "10042:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1122,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10041:17:3"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:3"
									},
									"scope": 1143,
									"src": "10018:96:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "10790:3:3",
										"statements": []
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "10731:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "10745:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "10757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10730:42:3"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:3"
									},
									"scope": 1143,
									"src": "10701:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1144,
							"src": "1321:9474:3"
						}
					],
					"src": "33:10763:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1221
						]
					},
					"id": 1222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1145,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1146,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1221,
							"linearizedBaseContracts": [
								1221
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:4"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "277:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:4"
									},
									"scope": 1221,
									"src": "231:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:4"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:4"
									},
									"scope": 1221,
									"src": "369:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "675:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:4"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:4"
									},
									"scope": 1221,
									"src": "657:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1028:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:4"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1083:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:4"
									},
									"scope": 1221,
									"src": "1009:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1762:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1779:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:4"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1813:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:4"
									},
									"scope": 1221,
									"src": "1745:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2148:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2164:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:4"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2217:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:4"
									},
									"scope": 1221,
									"src": "2126:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1211,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2407:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2429:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2449:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:4"
									},
									"src": "2392:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1220,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2638:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2661:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:4"
									},
									"src": "2623:78:4"
								}
							],
							"scope": 1222,
							"src": "137:2566:4"
						}
					],
					"src": "33:2671:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1517
						]
					},
					"id": 1518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1223,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1224,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1517,
							"linearizedBaseContracts": [
								1517
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "792:347:5",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "989:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1227,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1233,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:5",
														"valueSize": 1
													}
												],
												"id": 1235,
												"nodeType": "InlineAssembly",
												"src": "1067:41:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "1124:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1239,
												"nodeType": "Return",
												"src": "1117:15:5"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:5"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "786:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:5"
									},
									"scope": 1517,
									"src": "726:413:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1252,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1517",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1517",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1250,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1255,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "2170:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:5"
											},
											{
												"assignments": [
													1261,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "2299:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1260,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1268,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1262,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "2317:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1264,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "2340:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "2370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2362:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:5"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2075:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2102:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:5"
									},
									"scope": 1517,
									"src": "2056:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3277:82:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1285,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1292,
															1312
														],
														"referencedDeclaration": 1312,
														"src": "3292:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "3285:67:5"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3210:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3226:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:5"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3263:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:5"
									},
									"scope": 1517,
									"src": "3188:171:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "3698:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3737:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "3745:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1308,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "3754:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1304,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1332,
															1382
														],
														"referencedDeclaration": 1382,
														"src": "3715:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1310,
												"nodeType": "Return",
												"src": "3708:59:5"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3619:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3638:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1298,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:5"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3684:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:5"
									},
									"scope": 1517,
									"src": "3581:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "4249:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1325,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "4288:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "4296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1327,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1324,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1332,
															1382
														],
														"referencedDeclaration": 1382,
														"src": "4266:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1330,
												"nodeType": "Return",
												"src": "4259:94:5"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4167:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4183:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4202:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:5"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4235:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:5"
									},
									"scope": 1517,
									"src": "4136:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "4749:382:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1349,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4775:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1517",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1517",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1347,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "4792:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1359,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "4869:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1358,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4858:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4850:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:5"
											},
											{
												"assignments": [
													1365,
													1367
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "4981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1367,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "4995:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"id": 1372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "5050:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1368,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5022:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1370,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "5042:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "5090:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1377,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "5099:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1378,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "5111:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1375,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "5072:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1380,
												"nodeType": "Return",
												"src": "5065:59:5"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4639:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4655:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4689:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:5"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4735:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:5"
									},
									"scope": 1517,
									"src": "4608:523:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "5408:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "5444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "5452:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1392,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1399,
															1434
														],
														"referencedDeclaration": 1434,
														"src": "5425:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1397,
												"nodeType": "Return",
												"src": "5418:80:5"
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5352:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:5"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5394:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:5"
									},
									"scope": 1517,
									"src": "5308:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "5817:288:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1413,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "5846:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1412,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "5835:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5827:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:5"
											},
											{
												"assignments": [
													1419,
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "5965:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1418,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "5979:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1420,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [
														{
															"id": 1424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "6024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1422,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "6006:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1428,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "6064:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1429,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "6073:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1430,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6085:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1427,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "6046:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1432,
												"nodeType": "Return",
												"src": "6039:59:5"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "5717:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "5733:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "5752:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:5"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "5803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:5"
									},
									"scope": 1517,
									"src": "5689:416:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "6381:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "6419:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "6427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1444,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1451,
															1486
														],
														"referencedDeclaration": 1486,
														"src": "6398:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1449,
												"nodeType": "Return",
												"src": "6391:84:5"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "6314:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "6330:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:5"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "6367:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:5"
									},
									"scope": 1517,
									"src": "6284:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "6793:292:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "6822:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1464,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "6811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:5"
											},
											{
												"assignments": [
													1471,
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "6943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1470,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "6957:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1476,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "7004:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1474,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6984:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "7044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1481,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "7053:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1482,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "7065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "7026:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1462,
												"id": 1484,
												"nodeType": "Return",
												"src": "7019:59:5"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6698:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6714:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6733:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:5"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6779:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:5"
									},
									"scope": 1517,
									"src": "6668:417:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "7220:596:5",
										"statements": [
											{
												"condition": {
													"id": 1497,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1488,
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "7291:519:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1501,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "7375:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1511,
																"nodeType": "Block",
																"src": "7747:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1508,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1492,
																					"src": "7772:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1507,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7765:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1510,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:5"
																	}
																]
															},
															"id": 1512,
															"nodeType": "IfStatement",
															"src": "7371:429:5",
															"trueBody": {
																"id": 1506,
																"nodeType": "Block",
																"src": "7398:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1490,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1490,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1505,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1514,
												"nodeType": "IfStatement",
												"src": "7230:580:5",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "7243:42:5",
													"statements": [
														{
															"expression": {
																"id": 1498,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "7264:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1496,
															"id": 1499,
															"nodeType": "Return",
															"src": "7257:17:5"
														}
													]
												}
											}
										]
									},
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "7118:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "7132:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "7157:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "7206:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:5"
									},
									"scope": 1517,
									"src": "7091:725:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1518,
							"src": "134:7684:5"
						}
					],
					"src": "33:7786:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1540
						]
					},
					"id": 1541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1519,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1540,
							"linearizedBaseContracts": [
								1540
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "668:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1524,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "685:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1526,
												"nodeType": "Return",
												"src": "678:17:6"
											}
										]
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:6"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "651:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:6"
									},
									"scope": 1540,
									"src": "598:104:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "773:165:6",
										"statements": [
											{
												"expression": {
													"id": 1533,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "783:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1540",
														"typeString": "contract Context"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "783:4:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1535,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "923:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1537,
												"nodeType": "Return",
												"src": "916:15:6"
											}
										]
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "759:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:6"
									},
									"scope": 1540,
									"src": "708:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1541,
							"src": "566:374:6"
						}
					],
					"src": "33:908:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2032
						]
					},
					"id": 2033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1542,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1543,
								"nodeType": "StructuredDocumentation",
								"src": "66:686:7",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2032,
							"linearizedBaseContracts": [
								2032
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1551,
									"members": [
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"scope": 1551,
											"src": "1275:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1545,
												"nodeType": "ArrayTypeName",
												"src": "1275:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"scope": 1551,
											"src": "1426:37:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1549,
												"keyType": {
													"id": 1547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1426:28:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 2032,
									"src": "1221:249:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "1709:335:7",
										"statements": [
											{
												"condition": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1723:22:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1562,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1734:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "1739:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1561,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "1724:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1724:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1589,
													"nodeType": "Block",
													"src": "2001:37:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1560,
															"id": 1588,
															"nodeType": "Return",
															"src": "2015:12:7"
														}
													]
												},
												"id": 1590,
												"nodeType": "IfStatement",
												"src": "1719:319:7",
												"trueBody": {
													"id": 1586,
													"nodeType": "Block",
													"src": "1747:248:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1571,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1556,
																		"src": "1778:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1566,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "1761:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1546,
																		"src": "1761:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1761:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "1761:23:7"
														},
														{
															"expression": {
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1574,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "1919:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1550,
																		"src": "1919:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1578,
																	"indexExpression": {
																		"id": 1576,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1556,
																		"src": "1932:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1919:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1579,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "1941:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1546,
																		"src": "1941:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1941:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1919:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "1919:40:7"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1560,
															"id": 1585,
															"nodeType": "Return",
															"src": "1973:11:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "1476:159:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1654:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1553,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1551,
													"src": "1654:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1671:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:32:7"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1703:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:7"
									},
									"scope": 2032,
									"src": "1640:404:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "2284:1440:7",
										"statements": [
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "2394:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2394:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1604,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2415:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "2415:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1607,
													"indexExpression": {
														"id": 1606,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "2428:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2415:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2394:40:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1609,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "2449:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2449:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1669,
													"nodeType": "Block",
													"src": "3681:37:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3702:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1601,
															"id": 1668,
															"nodeType": "Return",
															"src": "3695:12:7"
														}
													]
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "2445:1273:7",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "2466:1209:7",
													"statements": [
														{
															"assignments": [
																1613
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1613,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1666,
																	"src": "2806:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1612,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2806:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1617,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1614,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "2830:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2843:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2830:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2806:38:7"
														},
														{
															"assignments": [
																1619
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1619,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1666,
																	"src": "2858:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1618,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2858:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1625,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1620,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "2878:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1546,
																		"src": "2878:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2878:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2878:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2858:42:7"
														},
														{
															"assignments": [
																1627
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1627,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"scope": 1666,
																	"src": "3140:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1626,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3140:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1632,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1628,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "3160:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1546,
																	"src": "3160:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1631,
																"indexExpression": {
																	"id": 1630,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "3172:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3160:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3140:42:7"
														},
														{
															"expression": {
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1633,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3274:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1546,
																		"src": "3274:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1637,
																	"indexExpression": {
																		"id": 1635,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "3286:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3274:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1638,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "3303:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3274:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "3274:38:7"
														},
														{
															"expression": {
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1641,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3378:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1550,
																		"src": "3378:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1645,
																	"indexExpression": {
																		"id": 1643,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "3391:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3378:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1646,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "3404:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3420:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3404:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3378:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1650,
															"nodeType": "ExpressionStatement",
															"src": "3378:43:7"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1651,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3527:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1546,
																		"src": "3527:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3527:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1657,
															"nodeType": "ExpressionStatement",
															"src": "3527:17:7"
														},
														{
															"expression": {
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3612:26:7",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1658,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3619:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1550,
																		"src": "3619:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1661,
																	"indexExpression": {
																		"id": 1660,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "3632:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "3612:26:7"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1601,
															"id": 1665,
															"nodeType": "Return",
															"src": "3653:11:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "2050:157:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2229:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1594,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1551,
													"src": "2229:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:32:7"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2278:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:6:7"
									},
									"scope": 2032,
									"src": "2212:1512:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "3884:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1682,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "3901:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1550,
															"src": "3901:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1684,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "3914:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3924:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3901:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1688,
												"nodeType": "Return",
												"src": "3894:31:7"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "3730:70:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3824:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1674,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1551,
													"src": "3824:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3841:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:32:7"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3878:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:6:7"
									},
									"scope": 2032,
									"src": "3805:127:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "4078:42:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1698,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "4095:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1546,
														"src": "4095:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4095:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1701,
												"nodeType": "Return",
												"src": "4088:25:7"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "3938:70:7",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "4030:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1692,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1551,
													"src": "4030:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:17:7"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "4069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:9:7"
									},
									"scope": 2032,
									"src": "4013:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "4528:125:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1714,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "4546:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1546,
																	"src": "4546:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4546:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1717,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4567:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4546:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4574:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4538:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "4538:73:7"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1722,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "4628:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1546,
														"src": "4628:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1725,
													"indexExpression": {
														"id": 1724,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "4640:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4628:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1726,
												"nodeType": "Return",
												"src": "4621:25:7"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "4125:322:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4465:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1705,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1551,
													"src": "4465:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4482:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:32:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4519:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:9:7"
									},
									"scope": 2032,
									"src": "4452:201:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1731,
									"members": [
										{
											"constant": false,
											"id": 1730,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "4706:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1729,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1551,
												"src": "4706:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 2032,
									"src": "4678:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "4969:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1742,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "4991:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1730,
															"src": "4991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1744,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "5003:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1741,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4986:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1746,
												"nodeType": "Return",
												"src": "4979:30:7"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "4729:159:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4906:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1733,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1731,
													"src": "4906:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4930:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:39:7"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4963:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4962:6:7"
									},
									"scope": 2032,
									"src": "4893:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "5263:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1759,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "5288:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1730,
															"src": "5288:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1761,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "5300:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1758,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "5280:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1763,
												"nodeType": "Return",
												"src": "5273:33:7"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "5022:157:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "5200:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1750,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1731,
													"src": "5200:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "5224:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5199:39:7"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "5257:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5257:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5256:6:7"
									},
									"scope": 2032,
									"src": "5184:129:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "5480:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1776,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "5507:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1730,
															"src": "5507:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1778,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5519:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1775,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "5497:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1780,
												"nodeType": "Return",
												"src": "5490:35:7"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "5319:70:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5412:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1767,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1731,
													"src": "5412:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5436:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:39:7"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5474:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5474:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5473:6:7"
									},
									"scope": 2032,
									"src": "5394:138:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "5685:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1791,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "5710:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1730,
															"src": "5710:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1790,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "5702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1794,
												"nodeType": "Return",
												"src": "5695:26:7"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "5538:70:7",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5629:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1784,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1731,
													"src": "5629:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:24:7"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5676:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5675:9:7"
									},
									"scope": 2032,
									"src": "5613:115:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "6143:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1807,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "6164:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1730,
															"src": "6164:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1809,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "6176:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1806,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "6160:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1811,
												"nodeType": "Return",
												"src": "6153:29:7"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "5733:322:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6072:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1798,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1731,
													"src": "6072:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1731_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6096:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6071:39:7"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6134:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:9:7"
									},
									"scope": 2032,
									"src": "6060:129:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1816,
									"members": [
										{
											"constant": false,
											"id": 1815,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1816,
											"src": "6242:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1814,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1551,
												"src": "6242:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 2032,
									"src": "6214:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "6505:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1827,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "6527:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1815,
															"src": "6527:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1835,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "6563:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6555:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1833,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6555:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6547:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1831,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6547:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6547:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6539:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1829,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6539:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6539:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1826,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "6522:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1840,
												"nodeType": "Return",
												"src": "6515:57:7"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "6265:159:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "6442:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1818,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1816,
													"src": "6442:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "6466:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:39:7"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "6499:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6499:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:6:7"
									},
									"scope": 2032,
									"src": "6429:150:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "6826:77:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1853,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "6851:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1815,
															"src": "6851:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1861,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1847,
																					"src": "6887:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6879:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1859,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6879:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6879:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6871:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1857,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6871:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6871:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6863:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1855,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6863:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1852,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "6843:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1866,
												"nodeType": "Return",
												"src": "6836:60:7"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "6585:157:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "6763:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1844,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1816,
													"src": "6763:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "6787:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6762:39:7"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "6820:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6820:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:6:7"
									},
									"scope": 2032,
									"src": "6747:156:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "7070:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1879,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "7097:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1815,
															"src": "7097:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1887,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "7133:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7125:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1885,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7125:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7125:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7117:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1883,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7117:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7117:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7109:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1881,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7109:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7109:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1878,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "7087:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1892,
												"nodeType": "Return",
												"src": "7080:62:7"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "6909:70:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "7002:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1870,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1816,
													"src": "7002:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "7026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7001:39:7"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "7064:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7064:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:6:7"
									},
									"scope": 2032,
									"src": "6984:165:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "7302:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1903,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "7327:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1815,
															"src": "7327:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1902,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "7319:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1906,
												"nodeType": "Return",
												"src": "7312:26:7"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "7155:70:7",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "7246:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1896,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1816,
													"src": "7246:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7245:24:7"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "7293:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7292:9:7"
									},
									"scope": 2032,
									"src": "7230:115:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "7760:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1925,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "7805:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1926,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1815,
																					"src": "7805:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1551_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1927,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1913,
																					"src": "7817:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1551_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1924,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "7801:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7801:22:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7793:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1922,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7793:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7793:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7785:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1920,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "7785:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7785:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7777:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1918,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7777:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1932,
												"nodeType": "Return",
												"src": "7770:56:7"
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "7350:322:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "7689:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1910,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1816,
													"src": "7689:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1816_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "7713:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7688:39:7"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "7751:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:9:7"
									},
									"scope": 2032,
									"src": "7677:156:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1937,
									"members": [
										{
											"constant": false,
											"id": 1936,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1937,
											"src": "7881:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1935,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1551,
												"src": "7881:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1551_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 2032,
									"src": "7856:42:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "8141:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1948,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "8163:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1936,
															"src": "8163:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1952,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "8183:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8175:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1950,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8175:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8175:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1947,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "8158:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1955,
												"nodeType": "Return",
												"src": "8151:39:7"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "7904:159:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8081:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1939,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1937,
													"src": "8081:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8102:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8080:36:7"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8135:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8135:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:6:7"
									},
									"scope": 2032,
									"src": "8068:129:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "8441:59:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1968,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "8466:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1936,
															"src": "8466:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "8486:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8478:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1970,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8478:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8478:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1967,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "8458:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1975,
												"nodeType": "Return",
												"src": "8451:42:7"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "8203:157:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "8381:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1959,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1937,
													"src": "8381:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "8402:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:36:7"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "8435:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8435:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:6:7"
									},
									"scope": 2032,
									"src": "8365:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "8664:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1988,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "8691:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1936,
															"src": "8691:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "8711:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8703:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1990,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8703:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8703:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1987,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "8681:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8681:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1986,
												"id": 1995,
												"nodeType": "Return",
												"src": "8674:44:7"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "8506:70:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "8599:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1979,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1937,
													"src": "8599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "8620:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:36:7"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "8658:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8658:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:6:7"
									},
									"scope": 2032,
									"src": "8581:144:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "8875:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2006,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "8900:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1936,
															"src": "8900:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1551_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2005,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "8892:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8892:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2009,
												"nodeType": "Return",
												"src": "8885:26:7"
											}
										]
									},
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "8731:70:7",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "8822:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1999,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1937,
													"src": "8822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8821:21:7"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "8866:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8865:9:7"
									},
									"scope": 2032,
									"src": "8806:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "9330:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2024,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "9359:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1936,
																	"src": "9359:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1551_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2026,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "9371:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1551_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2023,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "9355:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1551_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9355:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9347:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9347:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2020,
												"id": 2029,
												"nodeType": "Return",
												"src": "9340:38:7"
											}
										]
									},
									"documentation": {
										"id": 2012,
										"nodeType": "StructuredDocumentation",
										"src": "8923:322:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "9262:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2013,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1937,
													"src": "9262:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1937_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "9283:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9261:36:7"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "9321:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:7"
									},
									"scope": 2032,
									"src": "9250:135:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2033,
							"src": "753:8634:7"
						}
					],
					"src": "33:9355:7"
				},
				"id": 7
			},
			"contracts/SIPilotToken.sol": {
				"ast": {
					"absolutePath": "contracts/SIPilotToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							282
						],
						"Address": [
							1517
						],
						"Context": [
							1540
						],
						"ERC20": [
							1143
						],
						"EnumerableSet": [
							2032
						],
						"IERC20": [
							1221
						],
						"IUniswapV2Router01": [
							3568
						],
						"IUniswapV2Router02": [
							3656
						],
						"OffrToken": [
							3037
						],
						"SafeMath": [
							640
						],
						"SafeMathInt": [
							3233
						],
						"SafeMathUint": [
							3260
						]
					},
					"id": 3038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2034,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts//access/AccessControl.sol",
							"file": "@openzeppelin/contracts//access/AccessControl.sol",
							"id": 2035,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 283,
							"src": "66:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2036,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 1144,
							"src": "126:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
							"file": "@openzeppelin/contracts/GSN/Context.sol",
							"id": 2037,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 286,
							"src": "182:49:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 2038,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 641,
							"src": "232:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/math/SafeMathInt.sol",
							"file": "./math/SafeMathInt.sol",
							"id": 2039,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 3234,
							"src": "284:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/math/SafeMathUint.sol",
							"file": "./math/SafeMathUint.sol",
							"id": 2040,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 3261,
							"src": "317:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/IUniswapV2Router02.sol",
							"file": "./uniswap/IUniswapV2Router02.sol",
							"id": 2041,
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 3657,
							"src": "351:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2043,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1540,
										"src": "770:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1540",
											"typeString": "contract Context"
										}
									},
									"id": 2044,
									"nodeType": "InheritanceSpecifier",
									"src": "770:7:8"
								},
								{
									"baseName": {
										"id": 2045,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 282,
										"src": "779:13:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$282",
											"typeString": "contract AccessControl"
										}
									},
									"id": 2046,
									"nodeType": "InheritanceSpecifier",
									"src": "779:13:8"
								},
								{
									"baseName": {
										"id": 2047,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1221,
										"src": "794:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1221",
											"typeString": "contract IERC20"
										}
									},
									"id": 2048,
									"nodeType": "InheritanceSpecifier",
									"src": "794:6:8"
								}
							],
							"contractDependencies": [
								282,
								1221,
								1540
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2042,
								"nodeType": "StructuredDocumentation",
								"src": "396:351:8",
								"text": "@title Offr Token implementation - Distributing Security Token for one-time fundraising \n @author Fabiconcept (Fabian Ajokubi T.)\n @notice You can use this security token implementation to raise one-time funds and distribute USDC to token holders on a regular basis\n @dev Value is stored as USDC. The implementation has not been audited."
							},
							"fullyImplemented": true,
							"id": 3037,
							"linearizedBaseContracts": [
								3037,
								1221,
								282,
								1540
							],
							"name": "OffrToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2051,
									"libraryName": {
										"id": 2049,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 640,
										"src": "813:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$640",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "807:27:8",
									"typeName": {
										"id": 2050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2054,
									"libraryName": {
										"id": 2052,
										"name": "SafeMathUint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3260,
										"src": "845:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathUint_$3260",
											"typeString": "library SafeMathUint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "839:31:8",
									"typeName": {
										"id": 2053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "862:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2057,
									"libraryName": {
										"id": 2055,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3233,
										"src": "881:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$3233",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "875:29:8",
									"typeName": {
										"id": 2056,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "897:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 2062,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "910:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2058,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "910:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 2060,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "958:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 2059,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "948:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "948:24:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2065,
									"mutability": "constant",
									"name": "UNISWAP_ROUTER_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "978:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2063,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "978:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
										"id": 2064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1029:42:8",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "65b61b77",
									"id": 2067,
									"mutability": "mutable",
									"name": "_uniswapRouter",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1077:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 2066,
										"name": "IUniswapV2Router02",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3656,
										"src": "1077:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8923d5a2",
									"id": 2070,
									"mutability": "mutable",
									"name": "_usdcToken",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1123:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2068,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861443644343538343032463630664433426432353136333537353033314143446365303735333844",
										"id": 2069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1151:42:8",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xaD6D458402F60fD3Bd25163575031ACDce07538D"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61778592",
									"id": 2072,
									"mutability": "mutable",
									"name": "_usdcInstance",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1199:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1221",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2071,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1221,
										"src": "1199:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1221",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2076,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1233:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2075,
										"keyType": {
											"id": 2073,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1242:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1233:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2074,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2082,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1285:69:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2081,
										"keyType": {
											"id": 2077,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1294:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1285:49:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 2080,
											"keyType": {
												"id": 2078,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1314:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1305:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 2079,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1325:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2084,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1361:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1361:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2086,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1395:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2085,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1395:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2088,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1421:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2087,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1421:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2090,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1449:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2089,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1449:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "83bebced",
									"id": 2092,
									"mutability": "mutable",
									"name": "_rate",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1479:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1479:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "060cf4e8",
									"id": 2094,
									"mutability": "mutable",
									"name": "_cap",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1505:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2093,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1505:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "828cedb7",
									"id": 2096,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1530:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2095,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2099,
									"mutability": "mutable",
									"name": "fundingReleased",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1563:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2097,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1563:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1586:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2104,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1598:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1598:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"id": 2103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 2101,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1635:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "313238",
											"id": 2102,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1638:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_128_by_1",
												"typeString": "int_const 128"
											},
											"value": "128"
										},
										"src": "1635:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2106,
									"mutability": "mutable",
									"name": "claimableAmountPerToken",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1647:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1647:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2110,
									"mutability": "mutable",
									"name": "claimableAmountCorrections",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1692:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 2109,
										"keyType": {
											"id": 2107,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1700:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1692:26:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 2108,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1711:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2114,
									"mutability": "mutable",
									"name": "withdrawnAmounts",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "1759:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2113,
										"keyType": {
											"id": 2111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1767:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1759:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2112,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1778:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "1818:244:8",
										"text": "@notice Token purchase event\n @param transmitter address of the initiator\n @param buyer address of the buyer\n @param amountUSDC amount of USDC for the token purchase\n @param amountToken amount of purchased tokens"
									},
									"id": 2125,
									"name": "TokensPurchased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"indexed": true,
												"mutability": "mutable",
												"name": "transmitter",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2089:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2118:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUSDC",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2141:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2161:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:93:8"
									},
									"src": "2067:115:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "2188:148:8",
										"text": "@notice Release of raised funds event\n @param beneficiary adress of the beneficiary\n @param amountUSDC amount of the released USDC"
									},
									"id": 2132,
									"name": "FundsReleased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "2361:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUSDC",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "2390:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:49:8"
									},
									"src": "2341:69:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "2416:162:8",
										"text": "@notice received payment from beneficiary event\n @param project_owner address of the beneficiary\n @param amountUSDC amount of the received USDC "
									},
									"id": 2139,
									"name": "PaymentReceived",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"indexed": true,
												"mutability": "mutable",
												"name": "project_owner",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2605:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUSDC",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2636:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2604:51:8"
									},
									"src": "2583:73:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "2662:160:8",
										"text": "@notice payment to the investor event\n @param tokenholder address of the investor / tokenholder\n @param amountUSDC amount of the paid out USDC"
									},
									"id": 2146,
									"name": "AmountPaidOut",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenholder",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "2847:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUSDC",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "2876:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:49:8"
									},
									"src": "2827:69:8"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "3323:473:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2163,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "3344:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2164,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "3357:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3357:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2162,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3333:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3333:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "3333:37:8"
											},
											{
												"expression": {
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2168,
														"name": "_uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "3380:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2170,
																"name": "UNISWAP_ROUTER_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "3416:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2169,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3656,
															"src": "3397:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$3656_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3397:42:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "3380:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "3380:59:8"
											},
											{
												"expression": {
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2174,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "3449:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2175,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2149,
														"src": "3457:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3449:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "3449:13:8"
											},
											{
												"expression": {
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2178,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "3472:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2179,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2151,
														"src": "3482:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3472:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "3472:17:8"
											},
											{
												"expression": {
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2182,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "3499:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2183,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "3511:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3499:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "3499:21:8"
											},
											{
												"expression": {
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2186,
														"name": "_usdcInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "3530:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1221",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2188,
																"name": "_usdcToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "3553:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2187,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "3546:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1221_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3546:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1221",
															"typeString": "contract IERC20"
														}
													},
													"src": "3530:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1221",
														"typeString": "contract IERC20"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "3530:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2193,
																"name": "rate_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "3582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3590:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3582:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726174652069732030",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3593:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_790254c5963f96ffe0ea36c22dd876a686b45558f316a9cab0c6f30aa893f4f6",
																"typeString": "literal_string \"rate is 0\""
															},
															"value": "rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_790254c5963f96ffe0ea36c22dd876a686b45558f316a9cab0c6f30aa893f4f6",
																"typeString": "literal_string \"rate is 0\""
															}
														],
														"id": 2192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3574:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "3574:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2200,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "3623:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3630:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3623:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6361702069732030",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3633:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f7437238832336f10d26825b330b1401136055f9c691f09779b83bd4f0c0f6a",
																"typeString": "literal_string \"cap is 0\""
															},
															"value": "cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f7437238832336f10d26825b330b1401136055f9c691f09779b83bd4f0c0f6a",
																"typeString": "literal_string \"cap is 0\""
															}
														],
														"id": 2199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3615:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3615:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "3615:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2207,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2159,
																"src": "3662:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3686:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3678:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3678:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3662:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206973206e756c6c",
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3690:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae0f1ff29913d73a16bdb80b582357a8e9cc4a71a2c71ee42a446278fd319b22",
																"typeString": "literal_string \"address is null\""
															},
															"value": "address is null"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae0f1ff29913d73a16bdb80b582357a8e9cc4a71a2c71ee42a446278fd319b22",
																"typeString": "literal_string \"address is null\""
															}
														],
														"id": 2206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3654:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3654:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "3654:54:8"
											},
											{
												"expression": {
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2216,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "3718:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2217,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "3725:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3718:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "3718:11:8"
											},
											{
												"expression": {
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2220,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2092,
														"src": "3739:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2221,
														"name": "rate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "3747:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3739:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "3739:13:8"
											},
											{
												"expression": {
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2224,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2096,
														"src": "3762:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2225,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3777:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3762:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "3762:27:8"
											}
										]
									},
									"documentation": {
										"id": 2147,
										"nodeType": "StructuredDocumentation",
										"src": "2902:291:8",
										"text": "@notice Initialization of the Security Token\n @param name_ Name\n @param symbol_ Symbol\n @param decimals_ Decimals\n @param cap_ Fund raising cap\n @param rate_ Conversion Rate USDC <-> Security Token\n @param beneficiary_ Address of the beneficiary"
									},
									"id": 2229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3211:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3211:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3232:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3255:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "cap_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3272:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "rate_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3286:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "3301:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:112:8"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3323:0:8"
									},
									"scope": 3037,
									"src": "3198:598:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "3913:29:8",
										"statements": [
											{
												"expression": {
													"id": 2235,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2086,
													"src": "3930:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2234,
												"id": 2236,
												"nodeType": "Return",
												"src": "3923:12:8"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "3803:53:8",
										"text": "@notice Returns the name\n @return The Name"
									},
									"functionSelector": "06fdde03",
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3874:2:8"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3898:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:15:8"
									},
									"scope": 3037,
									"src": "3861:81:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "4064:31:8",
										"statements": [
											{
												"expression": {
													"id": 2244,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2088,
													"src": "4081:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2243,
												"id": 2245,
												"nodeType": "Return",
												"src": "4074:14:8"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "3948:57:8",
										"text": "@notice Returns the symbol\n @return The symbol"
									},
									"functionSelector": "95d89b41",
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4025:2:8"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "4049:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4049:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:15:8"
									},
									"scope": 3037,
									"src": "4010:85:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "4215:33:8",
										"statements": [
											{
												"expression": {
													"id": 2253,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2090,
													"src": "4232:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2254,
												"nodeType": "Return",
												"src": "4225:16:8"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "4101:61:8",
										"text": "@notice Returns the decimals\n @return The decimals"
									},
									"functionSelector": "313ce567",
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4184:2:8"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4208:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4208:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:7:8"
									},
									"scope": 3037,
									"src": "4167:81:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "4359:28:8",
										"statements": [
											{
												"expression": {
													"id": 2262,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2094,
													"src": "4376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2261,
												"id": 2263,
												"nodeType": "Return",
												"src": "4369:11:8"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "4254:55:8",
										"text": "@notice Returns funding cap\n @return The cap"
									},
									"functionSelector": "355274ea",
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4326:2:8"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "4350:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:9:8"
									},
									"scope": 3037,
									"src": "4314:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "4497:29:8",
										"statements": [
											{
												"expression": {
													"id": 2271,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2092,
													"src": "4514:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2272,
												"nodeType": "Return",
												"src": "4507:12:8"
											}
										]
									},
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "4393:53:8",
										"text": "@notice Returns the rate\n @return The rate"
									},
									"functionSelector": "2c4e722e",
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4464:2:8"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "4488:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:9:8"
									},
									"scope": 3037,
									"src": "4451:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4682:44:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2280,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "4699:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2281,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "4706:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4706:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4699:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2279,
												"id": 2284,
												"nodeType": "Return",
												"src": "4692:27:8"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "4532:92:8",
										"text": "@notice Returns if the fundrasing is still open\n @return boolean fundraising open"
									},
									"functionSelector": "5cfed870",
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensale_open",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4652:2:8"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4676:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4676:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4675:6:8"
									},
									"scope": 3037,
									"src": "4629:97:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "4882:36:8",
										"statements": [
											{
												"expression": {
													"id": 2293,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2084,
													"src": "4899:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2292,
												"id": 2294,
												"nodeType": "Return",
												"src": "4892:19:8"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "4732:83:8",
										"text": "@notice Returns the total token supply\n @return amount of supplied token"
									},
									"functionSelector": "18160ddd",
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2289,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4855:8:8"
									},
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4840:2:8"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "4873:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4872:9:8"
									},
									"scope": 3037,
									"src": "4820:98:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "5156:42:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2305,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "5173:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2307,
													"indexExpression": {
														"id": 2306,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "5183:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5173:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2308,
												"nodeType": "Return",
												"src": "5166:25:8"
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "4924:152:8",
										"text": "@notice Returns the balance of a specific address\n @param account address of the account \n @return amount of tokens hold by an address"
									},
									"functionSelector": "70a08231",
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5129:8:8"
									},
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5100:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5099:17:8"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5147:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5147:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5146:9:8"
									},
									"scope": 3037,
									"src": "5081:117:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "5512:80:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2322,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "5532:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5532:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2324,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "5546:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2325,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "5557:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2321,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2503,
														"src": "5522:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2327,
												"nodeType": "ExpressionStatement",
												"src": "5522:42:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5581:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2320,
												"id": 2329,
												"nodeType": "Return",
												"src": "5574:11:8"
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "5204:211:8",
										"text": "@notice Transfers `amount` of tokens to a `recipient`\n @param recipient adddress of the recipient\n @param amount amount of the tokens to transfer\n @return boolean transfer was sucessfull"
									},
									"functionSelector": "a9059cbb",
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5488:8:8"
									},
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5438:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5457:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5437:35:8"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5506:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5505:6:8"
									},
									"scope": 3037,
									"src": "5420:172:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1180
									],
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "6046:51:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2342,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "6063:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2344,
														"indexExpression": {
															"id": 2343,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "6075:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6063:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2346,
													"indexExpression": {
														"id": 2345,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "6082:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6063:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2341,
												"id": 2347,
												"nodeType": "Return",
												"src": "6056:34:8"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "5598:345:8",
										"text": "@notice Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom. This is zero by default.\n @param owner address of the account which owns the tokens\n @param spender address of the account that is allowed to spend the tokens\n @return amount of spendable tokens"
									},
									"functionSelector": "dd62ed3e",
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6019:8:8"
									},
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "5967:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "5982:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5966:32:8"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "6037:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:9:8"
									},
									"scope": 3037,
									"src": "5948:149:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1190
									],
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "6453:77:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "6472:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6472:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "6486:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "6495:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2360,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "6463:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6463:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "6463:39:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6519:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2359,
												"id": 2368,
												"nodeType": "Return",
												"src": "6512:11:8"
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "6103:256:8",
										"text": "@notice Sets `amount` as the allowance of spender over the callers tokens\n @param spender address of the spender account\n @param amount amount to allow for spender to send\n @return boolean indicating whether the operation succeeded"
									},
									"functionSelector": "095ea7b3",
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6429:8:8"
									},
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "6381:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6381:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "6398:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6380:33:8"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "6447:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6447:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6446:6:8"
									},
									"scope": 3037,
									"src": "6364:166:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1202
									],
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "7050:198:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2384,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "7070:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2385,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "7078:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "7089:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2383,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2503,
														"src": "7060:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "7060:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2390,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "7115:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2391,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "7123:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7123:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2400,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2377,
																	"src": "7175:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "7472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7183:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_90890889493b104bf9ebabde1448715c2fb678969066cdc6632dc010e5b34ff0",
																		"typeString": "literal_string \"transfer amount exceeds allowance\""
																	},
																	"value": "transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_90890889493b104bf9ebabde1448715c2fb678969066cdc6632dc010e5b34ff0",
																		"typeString": "literal_string \"transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2393,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "7137:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2395,
																		"indexExpression": {
																			"id": 2394,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2373,
																			"src": "7149:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7137:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2398,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2396,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "7157:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7157:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7137:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "7137:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7137:82:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2389,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "7106:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7106:114:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "7106:114:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7237:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2382,
												"id": 2406,
												"nodeType": "Return",
												"src": "7230:11:8"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "6540:393:8",
										"text": "@notice Moves amount tokens from sender to recipient using the allowance mechanism. amount is then deducted from the callerâ€™s allowance.\n @param sender address of the account which owns the tokens\n @param recipient address of the account which owns the tokens\n @param amount amount of tokens to send\n @return boolean indicating whether the operation succeeded"
									},
									"functionSelector": "23b872dd",
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7026:8:8"
									},
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "6960:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6960:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "6976:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6976:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "6995:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6959:51:8"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "7044:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7044:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7043:6:8"
									},
									"scope": 3037,
									"src": "6938:310:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "7342:753:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2418,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "7360:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7378:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7370:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2419,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7370:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7370:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7360:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7382:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26586b250febf204d238193dede6a154dd04e1bca57e9f2d2cde710a9ab53eea",
																"typeString": "literal_string \"transfer from the zero address\""
															},
															"value": "transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26586b250febf204d238193dede6a154dd04e1bca57e9f2d2cde710a9ab53eea",
																"typeString": "literal_string \"transfer from the zero address\""
															}
														],
														"id": 2417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7352:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7352:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "7352:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2428,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7433:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7454:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7446:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2429,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7446:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7446:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7433:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7458:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
																"typeString": "literal_string \"transfer to the zero address\""
															},
															"value": "transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
																"typeString": "literal_string \"transfer to the zero address\""
															}
														],
														"id": 2427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7425:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "7425:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2438,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "7521:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2439,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "7529:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2437,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "7500:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7500:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "7500:36:8"
											},
											{
												"expression": {
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2442,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "7547:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2444,
														"indexExpression": {
															"id": 2443,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "7557:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7547:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2449,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "7589:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "7472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7597:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4fcdfe081445a44b2452d4ca23fda12d33b0dddec86c6c4d63bc917fd537f3ab",
																	"typeString": "literal_string \"transfer amount exceeds balance\""
																},
																"value": "transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4fcdfe081445a44b2452d4ca23fda12d33b0dddec86c6c4d63bc917fd537f3ab",
																	"typeString": "literal_string \"transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2445,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "7567:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2447,
																"indexExpression": {
																	"id": 2446,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "7577:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7567:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "7567:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7567:64:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7547:84:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2453,
												"nodeType": "ExpressionStatement",
												"src": "7547:84:8"
											},
											{
												"expression": {
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "7641:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2456,
														"indexExpression": {
															"id": 2455,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "7651:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7641:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2461,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "7689:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2457,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "7664:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2459,
																"indexExpression": {
																	"id": 2458,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "7674:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7664:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "7664:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7664:32:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7641:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "7641:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2466,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "7720:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2467,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "7728:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "7739:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2465,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "7711:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2470,
												"nodeType": "EmitStatement",
												"src": "7706:40:8"
											},
											{
												"assignments": [
													2472
												],
												"declarations": [
													{
														"constant": false,
														"id": 2472,
														"mutability": "mutable",
														"name": "correction",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "7818:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2471,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2475,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "7866:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2473,
																	"name": "claimableAmountPerToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "7838:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 523,
																"src": "7838:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7838:35:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toInt256Safe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3259,
														"src": "7838:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (int256)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7838:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:70:8"
											},
											{
												"expression": {
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2480,
															"name": "claimableAmountCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "7898:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 2482,
														"indexExpression": {
															"id": 2481,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "7925:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7898:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2487,
																"name": "correction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "7974:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2483,
																	"name": "claimableAmountCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "7935:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 2485,
																"indexExpression": {
																	"id": 2484,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "7962:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7935:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3213,
															"src": "7935:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7935:50:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7898:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "7898:87:8"
											},
											{
												"expression": {
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2491,
															"name": "claimableAmountCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "7995:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 2493,
														"indexExpression": {
															"id": 2492,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "8022:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7995:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2498,
																"name": "correction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "8077:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2494,
																	"name": "claimableAmountCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "8035:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 2496,
																"indexExpression": {
																	"id": 2495,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "8062:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8035:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3175,
															"src": "8035:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8035:53:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7995:93:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2501,
												"nodeType": "ExpressionStatement",
												"src": "7995:93:8"
											}
										]
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "7274:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "7290:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "7309:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7309:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:51:8"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7342:0:8"
									},
									"scope": 3037,
									"src": "7255:840:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "8171:289:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "8189:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8208:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8200:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8200:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8200:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8189:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e7420746f20746865207a65726f2061646472657373",
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8212:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecc10bfbf0ed45bdf0ad99e2a9e4480a212cc613f2063f1f6de39580ccdfca76",
																"typeString": "literal_string \"mint to the zero address\""
															},
															"value": "mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecc10bfbf0ed45bdf0ad99e2a9e4480a212cc613f2063f1f6de39580ccdfca76",
																"typeString": "literal_string \"mint to the zero address\""
															}
														],
														"id": 2510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8181:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8181:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "8181:58:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8279:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8271:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8271:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8271:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "8283:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2520,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "8250:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8250:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2527,
												"nodeType": "ExpressionStatement",
												"src": "8250:40:8"
											},
											{
												"expression": {
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2528,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "8301:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2531,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "8333:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2529,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "8316:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8316:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8316:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8301:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "8301:39:8"
											},
											{
												"expression": {
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2535,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "8350:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2537,
														"indexExpression": {
															"id": 2536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "8360:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8350:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "8394:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2538,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "8371:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2540,
																"indexExpression": {
																	"id": 2539,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "8381:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8371:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8371:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8371:30:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8350:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "8350:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8433:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8425:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8425:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8425:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2551,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "8437:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2552,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "8446:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2546,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "8416:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8416:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "EmitStatement",
												"src": "8411:42:8"
											}
										]
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8121:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8121:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8138:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:33:8"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8171:0:8"
									},
									"scope": 3037,
									"src": "8106:354:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "8827:243:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2567,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2559,
																"src": "8845:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8854:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8854:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8854:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8845:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8866:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b0c6dcaee5f2baaaf08a82ea59f3fdc4ced1190903c447b5dd8df5de20591db",
																"typeString": "literal_string \"approve from the zero address\""
															},
															"value": "approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b0c6dcaee5f2baaaf08a82ea59f3fdc4ced1190903c447b5dd8df5de20591db",
																"typeString": "literal_string \"approve from the zero address\""
															}
														],
														"id": 2566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8837:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8837:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "8837:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2577,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2561,
																"src": "8916:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8935:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8927:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2578,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8927:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8927:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8916:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8939:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1968cc528ad95d78a12a097240a33c9301ecc178a899a7e63a89981a02173180",
																"typeString": "literal_string \"approve to the zero address\""
															},
															"value": "approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1968cc528ad95d78a12a097240a33c9301ecc178a899a7e63a89981a02173180",
																"typeString": "literal_string \"approve to the zero address\""
															}
														],
														"id": 2576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8908:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "8908:61:8"
											},
											{
												"expression": {
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2586,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "8980:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2589,
															"indexExpression": {
																"id": 2587,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2559,
																"src": "8992:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8980:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2590,
														"indexExpression": {
															"id": 2588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "8999:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8980:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2563,
														"src": "9010:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8980:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2593,
												"nodeType": "ExpressionStatement",
												"src": "8980:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2595,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2559,
															"src": "9040:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2596,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "9047:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "9056:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2594,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "9031:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9031:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2599,
												"nodeType": "EmitStatement",
												"src": "9026:37:8"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "8466:273:8",
										"text": "@notice Sets amount as the allowance of spender over the caller's token\n @param owner amount of USDC that will be invested\n @dev if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount"
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "8762:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8762:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "8777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "8794:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8761:48:8"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8827:0:8"
									},
									"scope": 3037,
									"src": "8744:326:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "9405:357:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2607,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9419:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9419:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9431:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9419:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2629,
													"nodeType": "Block",
													"src": "9495:100:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2619,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "9544:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "9544:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 2623,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "9564:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_OffrToken_$3037",
																							"typeString": "contract OffrToken"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_OffrToken_$3037",
																							"typeString": "contract OffrToken"
																						}
																					],
																					"id": 2622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9556:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2621,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9556:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9556:13:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 2625,
																				"name": "usdcAmount_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2604,
																				"src": "9571:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2617,
																				"name": "_usdcInstance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "9517:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1221",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1202,
																			"src": "9517:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9517:66:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9509:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9509:75:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2628,
															"nodeType": "ExpressionStatement",
															"src": "9509:75:8"
														}
													]
												},
												"id": 2630,
												"nodeType": "IfStatement",
												"src": "9415:180:8",
												"trueBody": {
													"id": 2615,
													"nodeType": "Block",
													"src": "9434:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2612,
																		"name": "usdcAmount_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2604,
																		"src": "9465:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2611,
																	"name": "convertEthToUsdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2740,
																	"src": "9448:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9448:29:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2614,
															"nodeType": "ExpressionStatement",
															"src": "9448:29:8"
														}
													]
												}
											},
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "tokens",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "9604:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9604:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2637,
												"initialValue": {
													"arguments": [
														{
															"id": 2635,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "9637:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2633,
															"name": "usdcAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "9621:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "9621:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9621:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9604:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2639,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9659:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9659:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2641,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "9671:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2638,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "9653:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9653:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "9653:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2645,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "9709:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9709:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 2647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9723:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9723:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2649,
															"name": "usdcAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "9735:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2650,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "9748:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2644,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "9693:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9693:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2652,
												"nodeType": "EmitStatement",
												"src": "9688:67:8"
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "9076:269:8",
										"text": "@notice Function for investors to buy tokens with ETH or USDC\n @param usdcAmount_ amount of USDC that will be invested\n @dev if the transaction will be send with ETH, then the tokenbuy will be performed by exchanging these ETH to the given USDC amount"
									},
									"functionSelector": "3610724e",
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "usdcAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "9369:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9369:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9368:21:8"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9405:0:8"
									},
									"scope": 3037,
									"src": "9350:412:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "9943:522:8",
										"statements": [
											{
												"assignments": [
													2661
												],
												"declarations": [
													{
														"constant": false,
														"id": 2661,
														"mutability": "mutable",
														"name": "deadline",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "9953:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2660,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9953:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2666,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2662,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9969:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9969:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "3135",
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9987:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "9969:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9953:36:8"
											},
											{
												"assignments": [
													2671
												],
												"declarations": [
													{
														"constant": false,
														"id": 2671,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "9999:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9999:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2670,
															"nodeType": "ArrayTypeName",
															"src": "9999:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2677,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10037:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10023:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2672,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10027:7:8",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2673,
															"nodeType": "ArrayTypeName",
															"src": "10027:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10023:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9999:40:8"
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2678,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "10049:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2680,
														"indexExpression": {
															"hexValue": "30",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10054:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10049:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2681,
																"name": "_uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "10059:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3272,
															"src": "10059:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10059:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10049:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "10049:31:8"
											},
											{
												"expression": {
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2686,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "10090:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2688,
														"indexExpression": {
															"hexValue": "31",
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10095:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10090:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2689,
														"name": "_usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2070,
														"src": "10100:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10090:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2691,
												"nodeType": "ExpressionStatement",
												"src": "10090:20:8"
											},
											{
												"assignments": [
													2696
												],
												"declarations": [
													{
														"constant": false,
														"id": 2696,
														"mutability": "mutable",
														"name": "amts",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "10122:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2694,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10122:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2695,
															"nodeType": "ArrayTypeName",
															"src": "10122:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2710,
												"initialValue": {
													"arguments": [
														{
															"id": 2702,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "10201:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2703,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "10213:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2706,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10227:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OffrToken_$3037",
																		"typeString": "contract OffrToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OffrToken_$3037",
																		"typeString": "contract OffrToken"
																	}
																],
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10219:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10219:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10219:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2708,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "10234:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2697,
																"name": "_uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "10144:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$3656",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "swapETHForExactTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3512,
															"src": "10144:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 2699,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10189:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10189:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10144:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10144:99:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10121:122:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2712,
																	"name": "amts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2696,
																	"src": "10265:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2714,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10270:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10265:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10275:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10265:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786368616e6765206661696c65642e",
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10278:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f70675d5d4be57843001ad27ace8720257b3739b1f52a7ac0db89c6bb20bd5bb",
																"typeString": "literal_string \"Exchange failed.\""
															},
															"value": "Exchange failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f70675d5d4be57843001ad27ace8720257b3739b1f52a7ac0db89c6bb20bd5bb",
																"typeString": "literal_string \"Exchange failed.\""
															}
														],
														"id": 2711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10257:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10257:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2719,
												"nodeType": "ExpressionStatement",
												"src": "10257:40:8"
											},
											{
												"assignments": [
													2721,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2721,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "10347:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2720,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10347:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2733,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10412:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 2722,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10364:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10364:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10364:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2727,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10396:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OffrToken_$3037",
																				"typeString": "contract OffrToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OffrToken_$3037",
																				"typeString": "contract OffrToken"
																			}
																		],
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10388:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10388:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10388:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10388:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10364:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10364:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10346:69:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2735,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "10433:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726566756e64206661696c6564",
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10442:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9239079da98909f815170ee967acd53b4cf9b37ced6a4dd9f2f25df9bc54bf5",
																"typeString": "literal_string \"refund failed\""
															},
															"value": "refund failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9239079da98909f815170ee967acd53b4cf9b37ced6a4dd9f2f25df9bc54bf5",
																"typeString": "literal_string \"refund failed\""
															}
														],
														"id": 2734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10425:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2738,
												"nodeType": "ExpressionStatement",
												"src": "10425:33:8"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "9769:111:8",
										"text": "@notice Functions that converts ETH to USDC\n @param usdcAmount amount of USDC that will be purchased"
									},
									"functionSelector": "60b17914",
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertEthToUsdc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "9911:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9911:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9910:17:8"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9943:0:8"
									},
									"scope": 3037,
									"src": "9885:580:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2744,
										"nodeType": "Block",
										"src": "10576:2:8",
										"statements": []
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "10474:72:8",
										"text": "@notice Functions that receives left-over ETH from uniswap exchanges"
									},
									"id": 2745,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10556:2:8"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10576:0:8"
									},
									"scope": 3037,
									"src": "10549:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "10804:270:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2754,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2748,
																"src": "10822:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10839:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10831:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10831:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10831:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10822:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62757965722069732061207a65726f2061646472657373",
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10843:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
																"typeString": "literal_string \"buyer is a zero address\""
															},
															"value": "buyer is a zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
																"typeString": "literal_string \"buyer is a zero address\""
															}
														],
														"id": 2753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10814:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10814:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2762,
												"nodeType": "ExpressionStatement",
												"src": "10814:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2764,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2750,
																"src": "10887:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10897:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10887:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776569416d6f756e742069732030",
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10900:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
																"typeString": "literal_string \"weiAmount is 0\""
															},
															"value": "weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
																"typeString": "literal_string \"weiAmount is 0\""
															}
														],
														"id": 2763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10879:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10879:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "ExpressionStatement",
												"src": "10879:38:8"
											},
											{
												"assignments": [
													2771
												],
												"declarations": [
													{
														"constant": false,
														"id": 2771,
														"mutability": "mutable",
														"name": "tokens",
														"nodeType": "VariableDeclaration",
														"scope": 2790,
														"src": "10936:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10936:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2776,
												"initialValue": {
													"arguments": [
														{
															"id": 2774,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "10964:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "10953:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "10953:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10953:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10936:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2778,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2748,
															"src": "10986:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2779,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "10993:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2777,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "10981:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10981:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "10981:19:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2783,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "11031:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11031:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2785,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2748,
															"src": "11045:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2786,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "11052:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2787,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "11060:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2782,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "11015:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11015:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2789,
												"nodeType": "EmitStatement",
												"src": "11010:57:8"
											}
										]
									},
									"documentation": {
										"id": 2746,
										"nodeType": "StructuredDocumentation",
										"src": "10585:156:8",
										"text": "@notice Minting function for registered distributors\n @param buyer address of the token buyer\n @param amount amount of tokens to be minted"
									},
									"functionSelector": "05ab421d",
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "buyer",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "10766:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "10781:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10765:31:8"
									},
									"returnParameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10804:0:8"
									},
									"scope": 3037,
									"src": "10746:328:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "11321:120:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2801,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "11347:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2802,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "11360:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11360:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 2800,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "11339:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11339:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11375:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0cb3250dbb4c2a268b81b80ff2f0742058838d6658f0b5d489b8d2aca4e6359",
																"typeString": "literal_string \"must have minter role to mint\""
															},
															"value": "must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0cb3250dbb4c2a268b81b80ff2f0742058838d6658f0b5d489b8d2aca4e6359",
																"typeString": "literal_string \"must have minter role to mint\""
															}
														],
														"id": 2799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11331:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11331:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "11331:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2809,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "11423:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2810,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "11427:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2808,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "11417:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2812,
												"nodeType": "ExpressionStatement",
												"src": "11417:17:8"
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "11080:185:8",
										"text": "@notice Function that checks if the minting is performed from a minter account\n @param to receiving account of the minting\n @param amount amount of tokens to be minted"
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "11284:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "11296:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:28:8"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11321:0:8"
									},
									"scope": 3037,
									"src": "11270:171:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "11770:166:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2822,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "11784:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11800:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11792:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11792:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11792:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "11784:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2840,
												"nodeType": "IfStatement",
												"src": "11780:150:8",
												"trueBody": {
													"id": 2839,
													"nodeType": "Block",
													"src": "11804:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2832,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2819,
																					"src": "11887:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2829,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2296,
																						"src": "11869:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 2830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11869:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 467,
																				"src": "11869:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11869:25:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2834,
																			"name": "_cap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "11898:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11869:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "636170206578636565646564",
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11904:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b4c68f16cb2afa5fc868158b8ae62d040df3114e42b1a2dbfbf78e5323db2e2",
																			"typeString": "literal_string \"cap exceeded\""
																		},
																		"value": "cap exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b4c68f16cb2afa5fc868158b8ae62d040df3114e42b1a2dbfbf78e5323db2e2",
																			"typeString": "literal_string \"cap exceeded\""
																		}
																	],
																	"id": 2828,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11861:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11861:58:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2838,
															"nodeType": "ExpressionStatement",
															"src": "11861:58:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "11448:240:8",
										"text": "@notice Function that checks conditions (will the cap be exceeded after minting new tokens?) before token transfer\n @param from account that initiated a sending transaction\n @param amount amount of tokens to be transferred"
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "11723:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11723:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "11737:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11722:30:8"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11770:0:8"
									},
									"scope": 3037,
									"src": "11693:243:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "12040:317:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2847,
																	"name": "tokensale_open",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "12058:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12058:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12078:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "12058:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66756e6473206e6f7420726169736564",
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12085:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_341dbad8d203807aebcbeb708a2849d9756e53c456fb24916886b61277a5716a",
																"typeString": "literal_string \"funds not raised\""
															},
															"value": "funds not raised"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_341dbad8d203807aebcbeb708a2849d9756e53c456fb24916886b61277a5716a",
																"typeString": "literal_string \"funds not raised\""
															}
														],
														"id": 2846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12050:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12050:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2853,
												"nodeType": "ExpressionStatement",
												"src": "12050:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2855,
																"name": "fundingReleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "12122:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12141:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "12122:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66756e64696e6720616c72656164792072656c6561736564",
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12148:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d014faf6a08bc516410874f8c4e15e6cf4b5eb6eedd6b62ff49c9110c1eb5f14",
																"typeString": "literal_string \"funding already released\""
															},
															"value": "funding already released"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d014faf6a08bc516410874f8c4e15e6cf4b5eb6eedd6b62ff49c9110c1eb5f14",
																"typeString": "literal_string \"funding already released\""
															}
														],
														"id": 2854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12114:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12114:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2860,
												"nodeType": "ExpressionStatement",
												"src": "12114:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2864,
																	"name": "_beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2096,
																	"src": "12216:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2867,
																			"name": "_rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "12239:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2865,
																			"name": "_cap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "12230:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "12230:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12230:15:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2862,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2072,
																	"src": "12193:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1221",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1170,
																"src": "12193:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12193:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73656e64696e672055534443206661696c6564",
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12248:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f66ffa722cd1af8050ff582b4028595a42c679367e82c444974f45ae01e151dd",
																"typeString": "literal_string \"sending USDC failed\""
															},
															"value": "sending USDC failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f66ffa722cd1af8050ff582b4028595a42c679367e82c444974f45ae01e151dd",
																"typeString": "literal_string \"sending USDC failed\""
															}
														],
														"id": 2861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12185:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12185:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "12185:85:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2874,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "12299:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2875,
															"name": "_cap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "12313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2873,
														"name": "FundsReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "12285:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12285:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2877,
												"nodeType": "EmitStatement",
												"src": "12280:38:8"
											},
											{
												"expression": {
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2878,
														"name": "fundingReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "12328:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12346:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12328:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "12328:22:8"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "11942:62:8",
										"text": "@notice Function to release the funding to the beneficiary"
									},
									"functionSelector": "69d89575",
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12030:2:8"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12040:0:8"
									},
									"scope": 3037,
									"src": "12009:348:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2931,
										"nodeType": "Block",
										"src": "12583:335:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2890,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "12601:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12601:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12617:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12601:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f74616c20737570706c79",
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12620:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ce488b9b7a9841eb8e27ea4046b1a5b6a8a449e1f671bcd39944a82312eb591",
																"typeString": "literal_string \"total supply\""
															},
															"value": "total supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ce488b9b7a9841eb8e27ea4046b1a5b6a8a449e1f671bcd39944a82312eb591",
																"typeString": "literal_string \"total supply\""
															}
														],
														"id": 2889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12593:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12593:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2896,
												"nodeType": "ExpressionStatement",
												"src": "12593:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2900,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12680:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12680:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2904,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12700:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OffrToken_$3037",
																				"typeString": "contract OffrToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OffrToken_$3037",
																				"typeString": "contract OffrToken"
																			}
																		],
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12692:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2902,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12692:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12692:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 2906,
																	"name": "usdcAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2886,
																	"src": "12707:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2898,
																	"name": "_usdcInstance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2072,
																	"src": "12653:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1221",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1202,
																"src": "12653:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12653:65:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534443205472616e73666572206e6f7420706f737369626c65",
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12720:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f20474738cab061f68e89096faebea914f8810b555fb2e1f73d747bc237c626",
																"typeString": "literal_string \"USDC Transfer not possible\""
															},
															"value": "USDC Transfer not possible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f20474738cab061f68e89096faebea914f8810b555fb2e1f73d747bc237c626",
																"typeString": "literal_string \"USDC Transfer not possible\""
															}
														],
														"id": 2897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12645:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12645:104:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2910,
												"nodeType": "ExpressionStatement",
												"src": "12645:104:8"
											},
											{
												"expression": {
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2911,
														"name": "claimableAmountPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "12759:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2917,
																			"name": "magnitude",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12830:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"id": 2914,
																					"name": "usdcAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2886,
																					"src": "12814:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2915,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12813:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "12813:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12813:27:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2919,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2296,
																		"src": "12843:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12843:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12813:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2912,
																"name": "claimableAmountPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "12785:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "12785:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12785:72:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12759:98:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2924,
												"nodeType": "ExpressionStatement",
												"src": "12759:98:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12888:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12888:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2928,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "12900:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2925,
														"name": "PaymentReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "12872:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12872:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2930,
												"nodeType": "EmitStatement",
												"src": "12867:44:8"
											}
										]
									},
									"documentation": {
										"id": 2884,
										"nodeType": "StructuredDocumentation",
										"src": "12363:164:8",
										"text": "@notice Function that receives payments from beneficiary and distribute them to the tokenholders\n @param usdcAmount amount that the beneficiary will pay "
									},
									"functionSelector": "e2eab483",
									"id": 2932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "12556:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12556:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12555:20:8"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12583:0:8"
									},
									"scope": 3037,
									"src": "12532:386:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "13016:378:8",
										"statements": [
											{
												"assignments": [
													2937
												],
												"declarations": [
													{
														"constant": false,
														"id": 2937,
														"mutability": "mutable",
														"name": "_claimableAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2977,
														"src": "13026:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13026:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2942,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13071:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13071:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2938,
														"name": "claimableAmountOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2996,
														"src": "13053:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13053:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13026:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2943,
														"name": "_claimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2937,
														"src": "13096:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13115:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13096:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2976,
												"nodeType": "IfStatement",
												"src": "13092:296:8",
												"trueBody": {
													"id": 2975,
													"nodeType": "Block",
													"src": "13118:270:8",
													"statements": [
														{
															"expression": {
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2946,
																		"name": "withdrawnAmounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "13132:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2949,
																	"indexExpression": {
																		"expression": {
																			"id": 2947,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13149:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13149:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13132:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2955,
																			"name": "_claimableAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "13196:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2950,
																				"name": "withdrawnAmounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2114,
																				"src": "13163:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2953,
																			"indexExpression": {
																				"expression": {
																					"id": 2951,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "13180:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "13180:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13163:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 467,
																		"src": "13163:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13163:50:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13132:81:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2958,
															"nodeType": "ExpressionStatement",
															"src": "13132:81:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2962,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "13258:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "13258:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 2964,
																				"name": "_claimableAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "13270:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2960,
																				"name": "_usdcInstance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "13235:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1221",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1170,
																			"src": "13235:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13235:52:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e73666572206e6f74207375636365737366756c",
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13289:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac48d7955583584fa6698aad02797836461be5e7bf7d60bd6be5aaf5f0cd8f35",
																			"typeString": "literal_string \"transfer not successful\""
																		},
																		"value": "transfer not successful"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ac48d7955583584fa6698aad02797836461be5e7bf7d60bd6be5aaf5f0cd8f35",
																			"typeString": "literal_string \"transfer not successful\""
																		}
																	],
																	"id": 2959,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13227:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13227:88:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2968,
															"nodeType": "ExpressionStatement",
															"src": "13227:88:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2970,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13348:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13348:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2972,
																		"name": "_claimableAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2937,
																		"src": "13360:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2969,
																	"name": "AmountPaidOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "13334:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13334:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2974,
															"nodeType": "EmitStatement",
															"src": "13329:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2933,
										"nodeType": "StructuredDocumentation",
										"src": "12929:49:8",
										"text": "@notice Function to claim the claimable funds"
									},
									"functionSelector": "534844a2",
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13006:2:8"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13016:0:8"
									},
									"scope": 3037,
									"src": "12983:411:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "13667:82:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2990,
																"name": "withdrawnAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "13717:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2992,
															"indexExpression": {
																"id": 2991,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2981,
																"src": "13734:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13717:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2987,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2981,
																	"src": "13705:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2986,
																"name": "accumulativeAmountOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3036,
																"src": "13684:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13684:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 489,
														"src": "13684:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13684:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2985,
												"id": 2994,
												"nodeType": "Return",
												"src": "13677:65:8"
											}
										]
									},
									"documentation": {
										"id": 2979,
										"nodeType": "StructuredDocumentation",
										"src": "13400:190:8",
										"text": "@notice Returns the total amount of funds that are claimable for a specified account\n @param _owner address of the account\n @return total amount of funds that are claimable"
									},
									"functionSelector": "d41e98ff",
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimableAmountOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13622:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13622:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13621:16:8"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13658:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13657:9:8"
									},
									"scope": 3037,
									"src": "13595:154:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "14034:48:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3004,
														"name": "withdrawnAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "14051:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3006,
													"indexExpression": {
														"id": 3005,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "14068:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14051:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3003,
												"id": 3007,
												"nodeType": "Return",
												"src": "14044:31:8"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "13755:202:8",
										"text": "@notice Returns the total amount of funds that have been withdrawn for a specified account\n @param _owner address of the account\n @return total amount of funds that have been withdrawn"
									},
									"functionSelector": "00cc8ad8",
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnAmountOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "13989:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13988:16:8"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "14025:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14024:9:8"
									},
									"scope": 3037,
									"src": "13962:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "14360:162:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3026,
																			"name": "claimableAmountCorrections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "14452:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																				"typeString": "mapping(address => int256)"
																			}
																		},
																		"id": 3028,
																		"indexExpression": {
																			"id": 3027,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3012,
																			"src": "14479:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14452:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 3020,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3012,
																								"src": "14415:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 3019,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2310,
																							"src": "14405:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 3021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14405:17:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3017,
																						"name": "claimableAmountPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2106,
																						"src": "14377:23:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 523,
																					"src": "14377:27:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14377:46:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toInt256Safe",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3259,
																			"src": "14377:59:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (int256)"
																			}
																		},
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14377:61:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3213,
																	"src": "14377:74:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14377:110:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256Safe",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3232,
															"src": "14377:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14377:126:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3032,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "14506:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14377:138:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3016,
												"id": 3034,
												"nodeType": "Return",
												"src": "14370:145:8"
											}
										]
									},
									"documentation": {
										"id": 3010,
										"nodeType": "StructuredDocumentation",
										"src": "14088:192:8",
										"text": "@notice Returns the total amount of funds that were claimable for a specified account\n @param _owner address of the account\n @return total amount of funds that were claimable"
									},
									"functionSelector": "24b4395b",
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeAmountOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "14315:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14315:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14314:16:8"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "14351:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14350:9:8"
									},
									"scope": 3037,
									"src": "14285:237:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3038,
							"src": "748:13777:8"
						}
					],
					"src": "33:14493:8"
				},
				"id": 8
			},
			"contracts/math/SafeMathInt.sol": {
				"ast": {
					"absolutePath": "contracts/math/SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							3233
						]
					},
					"id": 3234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3039,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3040,
								"nodeType": "StructuredDocumentation",
								"src": "65:285:9",
								"text": " @title SafeMathInt\n @dev Math operations with safety checks that revert on error\n @dev SafeMath adapted for int256\n Based on code of  https://github.com/RequestNetwork/requestNetwork/blob/master/packages/requestNetworkSmartContracts/contracts/base/math/SafeMathInt.sol"
							},
							"fullyImplemented": true,
							"id": 3233,
							"linearizedBaseContracts": [
								3233
							],
							"name": "SafeMathInt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "439:280:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "579:27:9",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3050,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3042,
																					"src": "581:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					},
																					"id": 3054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3052,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "586:3:9",
																						"subExpression": {
																							"hexValue": "32",
																							"id": 3051,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "588:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_minus_2_by_1",
																							"typeString": "int_const -2"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "323535",
																						"id": 3053,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "591:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_255_by_1",
																							"typeString": "int_const 255"
																						},
																						"value": "255"
																					},
																					"src": "586:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					}
																				},
																				"src": "581:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3056,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3044,
																					"src": "598:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "603:2:9",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 3057,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "604:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				},
																				"src": "598:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "581:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "580:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "610:27:9",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3063,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3044,
																					"src": "612:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					},
																					"id": 3067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3065,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "617:3:9",
																						"subExpression": {
																							"hexValue": "32",
																							"id": 3064,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "619:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_minus_2_by_1",
																							"typeString": "int_const -2"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "323535",
																						"id": 3066,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "622:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_255_by_1",
																							"typeString": "int_const 255"
																						},
																						"value": "255"
																					},
																					"src": "617:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					}
																				},
																				"src": "612:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3069,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3042,
																					"src": "629:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "634:2:9",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 3070,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "635:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				},
																				"src": "629:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "612:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3074,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "611:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "579:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3049,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "571:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "571:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3078,
												"nodeType": "ExpressionStatement",
												"src": "571:67:9"
											},
											{
												"assignments": [
													3080
												],
												"declarations": [
													{
														"constant": false,
														"id": 3080,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 3101,
														"src": "645:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3079,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "645:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3084,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3081,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "656:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3082,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "660:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "656:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "645:16:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3086,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3044,
																			"src": "676:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "681:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "676:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3089,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "675:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3090,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3080,
																				"src": "688:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3091,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3044,
																				"src": "692:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "688:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 3093,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3042,
																			"src": "697:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "688:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "687:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "675:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "667:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3098,
												"nodeType": "ExpressionStatement",
												"src": "667:33:9"
											},
											{
												"expression": {
													"id": 3099,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3080,
													"src": "713:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3048,
												"id": 3100,
												"nodeType": "Return",
												"src": "706:8:9"
											}
										]
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "388:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3041,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "388:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "398:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3043,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "398:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:20:9"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "431:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3046,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:8:9"
									},
									"scope": 3233,
									"src": "375:344:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3136,
										"nodeType": "Block",
										"src": "787:198:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "922:27:9",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3112,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "924:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					},
																					"id": 3116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "929:3:9",
																						"subExpression": {
																							"hexValue": "32",
																							"id": 3113,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "931:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_minus_2_by_1",
																							"typeString": "int_const -2"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "323535",
																						"id": 3115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "934:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_255_by_1",
																							"typeString": "int_const 255"
																						},
																						"value": "255"
																					},
																					"src": "929:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																						"typeString": "int_const -578...(70 digits omitted)...9968"
																					}
																				},
																				"src": "924:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3118,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3106,
																					"src": "941:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "946:2:9",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 3119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "947:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				},
																				"src": "941:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "924:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3123,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "923:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3125,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3106,
																			"src": "954:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "958:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "954:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "953:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "922:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "914:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3131,
												"nodeType": "ExpressionStatement",
												"src": "914:47:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3104,
														"src": "975:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3106,
														"src": "979:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "975:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3110,
												"id": 3135,
												"nodeType": "Return",
												"src": "968:12:9"
											}
										]
									},
									"id": 3137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "736:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "736:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3105,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:20:9"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "779:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3108,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "779:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:8:9"
									},
									"scope": 3233,
									"src": "723:262:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3174,
										"nodeType": "Block",
										"src": "1053:85:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3147,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "1068:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1073:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1068:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3150,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3139,
																					"src": "1078:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3151,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3141,
																					"src": "1082:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1078:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 3153,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "1087:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1078:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1068:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1067:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3157,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "1094:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1098:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1094:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3160,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3139,
																					"src": "1103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3161,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3141,
																					"src": "1107:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1103:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3163,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "1111:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1103:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1094:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3166,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1093:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1067:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1059:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1059:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3169,
												"nodeType": "ExpressionStatement",
												"src": "1059:55:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "1128:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3141,
														"src": "1132:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1128:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3145,
												"id": 3173,
												"nodeType": "Return",
												"src": "1121:12:9"
											}
										]
									},
									"id": 3175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3175,
												"src": "1002:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3138,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 3175,
												"src": "1012:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:20:9"
									},
									"returnParameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3175,
												"src": "1045:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3143,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:8:9"
									},
									"scope": 3233,
									"src": "989:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3212,
										"nodeType": "Block",
										"src": "1206:94:9",
										"statements": [
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "1212:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3184,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1212:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3186,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "1223:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3187,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "1227:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1223:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1212:16:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3179,
																				"src": "1243:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1248:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1243:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3194,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "1253:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 3195,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3177,
																				"src": "1258:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1253:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1243:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1242:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3199,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3179,
																				"src": "1265:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1269:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1265:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3202,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "1274:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3203,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3177,
																				"src": "1278:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1274:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1265:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1264:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1242:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1234:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1234:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3209,
												"nodeType": "ExpressionStatement",
												"src": "1234:47:9"
											},
											{
												"expression": {
													"id": 3210,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3185,
													"src": "1294:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3183,
												"id": 3211,
												"nodeType": "Return",
												"src": "1287:8:9"
											}
										]
									},
									"id": 3213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "1155:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "1165:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:20:9"
									},
									"returnParameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "1198:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:8:9"
									},
									"scope": 3233,
									"src": "1142:158:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3231,
										"nodeType": "Block",
										"src": "1369:49:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3215,
																"src": "1383:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1388:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1383:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1375:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3225,
												"nodeType": "ExpressionStatement",
												"src": "1375:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3228,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3215,
															"src": "1411:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1403:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1403:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3219,
												"id": 3230,
												"nodeType": "Return",
												"src": "1396:17:9"
											}
										]
									},
									"id": 3232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256Safe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3232,
												"src": "1327:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3214,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:10:9"
									},
									"returnParameters": {
										"id": 3219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3232,
												"src": "1360:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:9:9"
									},
									"scope": 3233,
									"src": "1304:114:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3234,
							"src": "351:1069:9"
						}
					],
					"src": "32:1388:9"
				},
				"id": 9
			},
			"contracts/math/SafeMathUint.sol": {
				"ast": {
					"absolutePath": "contracts/math/SafeMathUint.sol",
					"exportedSymbols": {
						"SafeMathUint": [
							3260
						]
					},
					"id": 3261,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3235,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3236,
								"nodeType": "StructuredDocumentation",
								"src": "65:94:10",
								"text": " @title SafeMathUint\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 3260,
							"linearizedBaseContracts": [
								3260
							],
							"name": "SafeMathUint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "249:66:10",
										"statements": [
											{
												"assignments": [
													3244
												],
												"declarations": [
													{
														"constant": false,
														"id": 3244,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"scope": 3258,
														"src": "255:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3243,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3249,
												"initialValue": {
													"arguments": [
														{
															"id": 3247,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3238,
															"src": "273:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "266:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3245,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "266:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "266:9:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "255:20:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3244,
																"src": "289:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "294:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "289:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "281:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "281:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3255,
												"nodeType": "ExpressionStatement",
												"src": "281:15:10"
											},
											{
												"expression": {
													"id": 3256,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3244,
													"src": "309:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3242,
												"id": 3257,
												"nodeType": "Return",
												"src": "302:8:10"
											}
										]
									},
									"id": 3259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "207:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:11:10"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "241:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3240,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "241:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:8:10"
									},
									"scope": 3260,
									"src": "185:130:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3261,
							"src": "160:157:10"
						}
					],
					"src": "32:285:10"
				},
				"id": 10
			},
			"contracts/uniswap/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							3568
						]
					},
					"id": 3569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3262,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3568,
							"linearizedBaseContracts": [
								3568
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 3267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:11"
									},
									"returnParameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "135:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:9:11"
									},
									"scope": 3568,
									"src": "93:51:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 3272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:11"
									},
									"returnParameters": {
										"id": 3271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3272,
												"src": "188:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:9:11"
									},
									"scope": 3568,
									"src": "149:48:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 3297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "234:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "258:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "282:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "311:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "311:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "340:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "365:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "390:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3288,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "410:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:205:11"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "448:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "462:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "476:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:44:11"
									},
									"scope": 3568,
									"src": "203:289:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 3318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "531:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "554:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "554:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "587:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "616:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "643:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "663:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:161:11"
									},
									"returnParameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "709:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3313,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "743:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:50:11"
									},
									"scope": 3568,
									"src": "497:262:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 3339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3320,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "798:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "822:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "846:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "870:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "870:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "895:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3330,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "920:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3332,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "940:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:171:11"
									},
									"returnParameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "978:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "992:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "992:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:28:11"
									},
									"scope": 3568,
									"src": "764:242:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 3358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1048:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3343,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1071:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1095:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1124:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1124:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1151:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1171:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:152:11"
									},
									"returnParameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1209:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3356,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1227:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1227:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:34:11"
									},
									"scope": 3568,
									"src": "1011:232:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 3387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1292:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1316:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1340:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3363,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1340:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3366,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1364:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3368,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1389:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1414:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1434:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3374,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1457:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3376,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1474:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3375,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1483:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1494:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:227:11"
									},
									"returnParameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1528:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1542:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1542:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:28:11"
									},
									"scope": 3568,
									"src": "1248:308:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 3414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1608:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3391,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1631:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1631:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1655:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1684:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1711:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3399,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1731:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3401,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1754:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3403,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1771:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3402,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1771:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1780:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3407,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:208:11"
									},
									"returnParameters": {
										"id": 3413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1825:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3412,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "1843:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:34:11"
									},
									"scope": 3568,
									"src": "1561:298:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 3431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3416,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "1907:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1907:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "1930:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "1957:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3419,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1957:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3420,
													"nodeType": "ArrayTypeName",
													"src": "1957:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3423,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "1990:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "2010:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2010:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:132:11"
									},
									"returnParameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "2048:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3427,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2048:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3428,
													"nodeType": "ArrayTypeName",
													"src": "2048:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:23:11"
									},
									"scope": 3568,
									"src": "1864:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 3448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2119:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2119:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2143:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2169:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3436,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2169:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3437,
													"nodeType": "ArrayTypeName",
													"src": "2169:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2202:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2222:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:132:11"
									},
									"returnParameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "2260:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3444,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2260:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3445,
													"nodeType": "ArrayTypeName",
													"src": "2260:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:23:11"
									},
									"scope": 3568,
									"src": "2076:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 3463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "2319:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "2338:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3451,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3452,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "2363:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "2375:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:71:11"
									},
									"returnParameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "2440:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3459,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2440:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3460,
													"nodeType": "ArrayTypeName",
													"src": "2440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:23:11"
									},
									"scope": 3568,
									"src": "2288:175:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 3480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2499:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2515:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2515:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3470,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2533:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3468,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2533:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3469,
													"nodeType": "ArrayTypeName",
													"src": "2533:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3472,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2558:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2570:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3473,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:86:11"
									},
									"returnParameters": {
										"id": 3479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3478,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "2619:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3476,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2619:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3477,
													"nodeType": "ArrayTypeName",
													"src": "2619:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:23:11"
									},
									"scope": 3568,
									"src": "2468:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 3497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2678:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2678:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2693:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2693:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2712:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3485,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2712:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3486,
													"nodeType": "ArrayTypeName",
													"src": "2712:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2737:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2749:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2677:86:11"
									},
									"returnParameters": {
										"id": 3496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3495,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "2798:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3493,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2798:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3494,
													"nodeType": "ArrayTypeName",
													"src": "2798:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:23:11"
									},
									"scope": 3568,
									"src": "2647:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 3512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3499,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "2857:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3502,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "2873:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3500,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2873:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3501,
													"nodeType": "ArrayTypeName",
													"src": "2873:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "2898:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3506,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "2910:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:68:11"
									},
									"returnParameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "2975:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3508,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2975:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3509,
													"nodeType": "ArrayTypeName",
													"src": "2975:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:23:11"
									},
									"scope": 3568,
									"src": "2826:172:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 3523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3514,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "3019:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "3033:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3033:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "3048:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3048:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:44:11"
									},
									"returnParameters": {
										"id": 3522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3521,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "3086:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:14:11"
									},
									"scope": 3568,
									"src": "3004:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 3534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "3127:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "3142:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3142:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3529,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "3158:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3158:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:48:11"
									},
									"returnParameters": {
										"id": 3533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3532,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "3198:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:16:11"
									},
									"scope": 3568,
									"src": "3105:109:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 3545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "3240:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "3256:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3256:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "3272:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3272:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:49:11"
									},
									"returnParameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "3312:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:15:11"
									},
									"scope": 3568,
									"src": "3219:108:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 3556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3547,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3355:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3355:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3370:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3548,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3370:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3549,
													"nodeType": "ArrayTypeName",
													"src": "3370:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:40:11"
									},
									"returnParameters": {
										"id": 3555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3554,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3556,
												"src": "3418:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3552,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3418:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3553,
													"nodeType": "ArrayTypeName",
													"src": "3418:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:23:11"
									},
									"scope": 3568,
									"src": "3332:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 3567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "3468:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3468:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "3484:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3559,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3484:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3560,
													"nodeType": "ArrayTypeName",
													"src": "3484:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:41:11"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "3532:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3563,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3532:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3564,
													"nodeType": "ArrayTypeName",
													"src": "3532:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:23:11"
									},
									"scope": 3568,
									"src": "3446:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3569,
							"src": "58:3499:11"
						}
					],
					"src": "32:3526:11"
				},
				"id": 11
			},
			"contracts/uniswap/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							3568
						],
						"IUniswapV2Router02": [
							3656
						]
					},
					"id": 3657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3570,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "contracts/uniswap/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 3571,
							"nodeType": "ImportDirective",
							"scope": 3657,
							"sourceUnit": 3569,
							"src": "58:34:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3572,
										"name": "IUniswapV2Router01",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3568,
										"src": "126:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router01_$3568",
											"typeString": "contract IUniswapV2Router01"
										}
									},
									"id": 3573,
									"nodeType": "InheritanceSpecifier",
									"src": "126:18:12"
								}
							],
							"contractDependencies": [
								3568
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3656,
							"linearizedBaseContracts": [
								3656,
								3568
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 3590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "217:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3577,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "240:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3576,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "240:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "264:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3578,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "293:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "293:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "320:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3585,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "340:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:152:12"
									},
									"returnParameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "378:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:16:12"
									},
									"scope": 3656,
									"src": "151:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 3615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "475:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "498:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "498:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "522:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "551:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "551:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "578:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3602,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "598:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3604,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "621:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "638:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3605,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "638:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3608,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "647:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3607,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3610,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "658:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:208:12"
									},
									"returnParameters": {
										"id": 3614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3613,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "692:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:16:12"
									},
									"scope": 3656,
									"src": "399:309:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 3629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "786:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "809:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "809:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3622,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "836:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3620,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "836:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3621,
													"nodeType": "ArrayTypeName",
													"src": "836:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3624,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "869:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "889:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "889:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:132:12"
									},
									"returnParameters": {
										"id": 3628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:0:12"
									},
									"scope": 3656,
									"src": "714:204:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 3641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "992:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "992:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "1019:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3632,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1019:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3633,
													"nodeType": "ArrayTypeName",
													"src": "1019:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "1052:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "1072:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1072:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:109:12"
									},
									"returnParameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:0:12"
									},
									"scope": 3656,
									"src": "923:186:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 3655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "1183:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "1206:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1206:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "1233:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3646,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3647,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3650,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "1266:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "1286:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:132:12"
									},
									"returnParameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:12"
									},
									"scope": 3656,
									"src": "1114:201:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3657,
							"src": "94:1223:12"
						}
					],
					"src": "32:1285:12"
				},
				"id": 12
			}
		}
	}
}